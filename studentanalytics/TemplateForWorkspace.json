{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "studentanalytics"
		},
		"CosmosDbMongoDbApi1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDbApi1'"
		},
		"CosmosDbMongoDbNew_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDbNew'"
		},
		"MongoDbAtlas2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MongoDbAtlas2'"
		},
		"MongoDbAtlas3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MongoDbAtlas3'"
		},
		"MyMongoDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MyMongoDb'"
		},
		"studentanalytics-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'studentanalytics-WorkspaceDefaultSqlServer'"
		},
		"CosmosDbMongoDbApi1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "datalake"
		},
		"CosmosDbMongoDbNew_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "datalake"
		},
		"MongoDbAtlas2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "datalake"
		},
		"MongoDbAtlas3_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "datalake"
		},
		"MyMongoDb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "testDB"
		},
		"studentanalytics-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dus02store.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/CopyPipeline_65l')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach_65l",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_65l",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.collection}"
										},
										{
											"name": "Destination",
											"value": "datalake/fromAtlas/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "MongoDbAtlasSource",
											"batchSize": 100
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "setOfObjects"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "studentanalytics-WorkspaceDefaultStorage",
													"type": "LinkedServiceReference"
												},
												"path": "datalake/log"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_65l",
											"type": "DatasetReference",
											"parameters": {
												"cw_collection": "@item().source.collection"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_65l",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"collection": "coursesitevisits"
								},
								"destination": {
									"fileName": "coursesitevisits.json"
								}
							},
							{
								"source": {
									"collection": "studentlist"
								},
								"destination": {
									"fileName": "studentlist.json"
								}
							},
							{
								"source": {
									"collection": "submissionvgrades"
								},
								"destination": {
									"fileName": "submissionvgrades.json"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-09-12T09:57:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_65l')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_65l')]",
				"[concat(variables('workspaceId'), '/linkedServices/studentanalytics-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyPipeline_d8w')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_d8w",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "learnonline"
							},
							{
								"name": "Destination",
								"value": "datalake/fromAtlas/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MongoDbAtlasSource",
								"batchSize": 100
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "studentanalytics-WorkspaceDefaultStorage",
										"type": "LinkedServiceReference"
									},
									"path": "datalake/log"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_d8w",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_d8w",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-09-13T04:31:23Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_d8w')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_d8w')]",
				"[concat(variables('workspaceId'), '/linkedServices/studentanalytics-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EDW-Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DimActivity_daily",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "DimActivity",
								"type": "NotebookReference"
							},
							"snapshot": true
						}
					},
					{
						"name": "Spark job definition1",
						"type": "SparkJob",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"sparkJob": {
								"referenceName": "DimActivity",
								"type": "SparkJobDefinitionReference"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/DimActivity')]",
				"[concat(variables('workspaceId'), '/sparkJobDefinitions/DimActivity')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_65l')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "studentanalytics-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "fromAtlas",
						"fileSystem": "datalake"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/studentanalytics-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_d8w')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "studentanalytics-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "fromAtlas",
						"fileSystem": "datalake"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/studentanalytics-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_65l')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDbAtlas2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_collection": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "MongoDbAtlasCollection",
				"schema": [],
				"typeProperties": {
					"collection": {
						"value": "@dataset().cw_collection",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/MongoDbAtlas2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_d8w')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDbAtlas3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbAtlasCollection",
				"schema": [],
				"typeProperties": {
					"collection": "learnonline"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/MongoDbAtlas3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CosmosDbMongoDbApi1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDbApi1_connectionString')]",
					"database": "[parameters('CosmosDbMongoDbApi1_properties_typeProperties_database')]",
					"isServerVersionAbove32": true
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CosmosDbMongoDbNew')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDbNew_connectionString')]",
					"database": "[parameters('CosmosDbMongoDbNew_properties_typeProperties_database')]",
					"isServerVersionAbove32": true
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MongoDbAtlas2')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "MongoDbAtlas",
				"typeProperties": {
					"connectionString": "[parameters('MongoDbAtlas2_connectionString')]",
					"database": "[parameters('MongoDbAtlas2_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MongoDbAtlas3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "MongoDbAtlas",
				"typeProperties": {
					"connectionString": "[parameters('MongoDbAtlas3_connectionString')]",
					"database": "[parameters('MongoDbAtlas3_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MyMongoDb')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "MongoDbV2",
				"typeProperties": {
					"connectionString": "[parameters('MyMongoDb_connectionString')]",
					"database": "[parameters('MyMongoDb_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/studentanalytics-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('studentanalytics-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/studentanalytics-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('studentanalytics-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/unisa')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "84cc4774-2ff1-4a1f-89c9-d1d9ddcaa868",
					"tenantID": "6c2dbd5d-8f60-46c4-a7fe-15a5993fbca5"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CourseSiteVisites')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"c5d24542-607b-4111-b6b1-20dedc86a335": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "1029",
												"1": "170253",
												"2": "UO Electrical and Electronic Systems",
												"3": "External, UniSA Online, Online",
												"4": "93.31",
												"5": "HD",
												"6": "571",
												"7": "53.92",
												"8": "5/04/2021 8:02:19 PM",
												"10": "93",
												"11": "HD",
												"12": "CCXZGCWBC",
												"13": "EEET",
												"14": "2105",
												"15": "107",
												"16": "2021",
												"17": {
													"$oid": "612f81eb4e89db737dea3fd8"
												}
											},
											{
												"0": "1029",
												"1": "170253",
												"2": "UO Electrical and Electronic Systems",
												"3": "External, UniSA Online, Online",
												"4": "98.43",
												"5": "HD",
												"6": "952",
												"7": "89.9",
												"8": "3/04/2021 10:42:54 PM",
												"10": "98",
												"11": "HD",
												"12": "CCXCHCABB",
												"13": "EEET",
												"14": "2105",
												"15": "139",
												"16": "2021",
												"17": {
													"$oid": "612f81eb4e89db737dea3fd0"
												}
											},
											{
												"0": "1029",
												"1": "170253",
												"2": "UO Electrical and Electronic Systems",
												"3": "External, UniSA Online, Online",
												"4": "98.33",
												"5": "HD",
												"6": "470",
												"7": "44.38",
												"8": "23/03/2021 9:25:47 AM",
												"10": "98",
												"11": "HD",
												"12": "CCXZZLBBW",
												"13": "EEET",
												"14": "2105",
												"15": "101",
												"16": "2021",
												"17": {
													"$oid": "612f81eb4e89db737dea3fd1"
												}
											},
											{
												"0": "1029",
												"1": "170253",
												"2": "UO Electrical and Electronic Systems",
												"3": "External, UniSA Online, Online",
												"4": "29.69",
												"5": "F2",
												"6": "359",
												"7": "33.9",
												"8": "10/03/2021 8:03:40 AM",
												"10": "30",
												"11": "F2",
												"12": "CCXHHAZGZ",
												"13": "EEET",
												"14": "2105",
												"15": "42",
												"16": "2021",
												"17": {
													"$oid": "612f81eb4e89db737dea3fd5"
												}
											},
											{
												"0": "1029",
												"1": "170253",
												"2": "UO Electrical and Electronic Systems",
												"3": "External, UniSA Online, Online",
												"4": "91.33",
												"5": "HD",
												"6": "535",
												"7": "50.52",
												"8": "1/04/2021 3:31:35 PM",
												"10": "91",
												"11": "HD",
												"12": "CCXZAGLGW",
												"13": "EEET",
												"14": "2105",
												"15": "89",
												"16": "2021",
												"17": {
													"$oid": "612f81eb4e89db737dea3fd6"
												}
											},
											{
												"0": "1029",
												"1": "170253",
												"2": "UO Electrical and Electronic Systems",
												"3": "External, UniSA Online, Online",
												"4": "56.88",
												"5": "P1",
												"6": "406",
												"7": "38.34",
												"8": "8/04/2021 9:03:57 PM",
												"10": "57",
												"11": "P1",
												"12": "CCXCDHZBH",
												"13": "EEET",
												"14": "2105",
												"15": "84",
												"16": "2021",
												"17": {
													"$oid": "612f81eb4e89db737dea3fd4"
												}
											},
											{
												"0": "1029",
												"1": "170253",
												"2": "UO Electrical and Electronic Systems",
												"3": "External, UniSA Online, Online",
												"4": "92.95",
												"5": "HD",
												"6": "1059",
												"7": "100.0",
												"8": "28/03/2021 7:38:05 PM",
												"10": "93",
												"11": "HD",
												"12": "CCXHZLZWG",
												"13": "EEET",
												"14": "2105",
												"15": "121",
												"16": "2021",
												"17": {
													"$oid": "612f81eb4e89db737dea3fce"
												}
											},
											{
												"0": "1029",
												"1": "170253",
												"2": "UO Electrical and Electronic Systems",
												"3": "External, UniSA Online, Online",
												"4": "99.69",
												"5": "HD",
												"6": "586",
												"7": "55.34",
												"8": "19/03/2021 2:12:07 PM",
												"10": "100",
												"11": "HD",
												"12": "CCXZWHCAD",
												"13": "EEET",
												"14": "2105",
												"15": "111",
												"16": "2021",
												"17": {
													"$oid": "612f81eb4e89db737dea3fd2"
												}
											},
											{
												"0": "1029",
												"1": "170253",
												"2": "UO Electrical and Electronic Systems",
												"3": "External, UniSA Online, Online",
												"4": "87.48",
												"5": "HD",
												"6": "611",
												"7": "57.7",
												"8": "24/03/2021 5:04:51 PM",
												"10": "87",
												"11": "HD",
												"12": "CCXZHALGD",
												"13": "EEET",
												"14": "2105",
												"15": "100",
												"16": "2021",
												"17": {
													"$oid": "612f81eb4e89db737dea3fd3"
												}
											},
											{
												"0": "1029",
												"1": "170253",
												"2": "UO Electrical and Electronic Systems",
												"3": "External, UniSA Online, Online",
												"4": "95.46",
												"5": "HD",
												"6": "470",
												"7": "44.38",
												"8": "10/04/2021 5:02:20 PM",
												"10": "95",
												"11": "HD",
												"12": "CCXHHLDDX",
												"13": "EEET",
												"14": "2105",
												"15": "120",
												"16": "2021",
												"17": {
													"$oid": "612f81eb4e89db737dea3fcf"
												}
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Catalog Number",
												"type": "bigint"
											},
											{
												"key": "1",
												"name": "Course ID",
												"type": "bigint"
											},
											{
												"key": "2",
												"name": "Course Name",
												"type": "string"
											},
											{
												"key": "3",
												"name": "Course Offering Description",
												"type": "string"
											},
											{
												"key": "4",
												"name": "Current Grade",
												"type": "double"
											},
											{
												"key": "5",
												"name": "Current Grade Letter",
												"type": "string"
											},
											{
												"key": "6",
												"name": "Engagement Count",
												"type": "bigint"
											},
											{
												"key": "7",
												"name": "Engagement Percentage",
												"type": "double"
											},
											{
												"key": "8",
												"name": "Last Course Login Date",
												"type": "string"
											},
											{
												"key": "9",
												"name": "Number learnonline Site Visits",
												"type": "bigint"
											},
											{
												"key": "10",
												"name": "Official Grade",
												"type": "string"
											},
											{
												"key": "11",
												"name": "Official Grade Letter",
												"type": "string"
											},
											{
												"key": "12",
												"name": "Student ID",
												"type": "string"
											},
											{
												"key": "13",
												"name": "Subject Area",
												"type": "string"
											},
											{
												"key": "14",
												"name": "Term Code",
												"type": "bigint"
											},
											{
												"key": "15",
												"name": "Visit Count",
												"type": "bigint"
											},
											{
												"key": "16",
												"name": "Year",
												"type": "bigint"
											},
											{
												"key": "17",
												"name": "_id",
												"type": "StructType(StructField($oid,StringType,true))"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"1"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/coursesitevisits.json', format='json')\r\n",
							"display(df.limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.groupBy('Year').count().show()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"StudentDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/studentlist.json', format='json')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"StudentDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"StudentDF.groupBy(\"CourseGradeCode\").count().show()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Create View')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "1"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_sparksql",
						"display_name": "Synapse SQL"
					},
					"language_info": {
						"name": "sql"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"USE unisadw;"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"SELECT unisadw.snapshotlearnonline.StudentSK, unisadw.dimcourseresource.CourseSK, unisadw.dimcourseresource.ResourceSK,\r\n",
							"unisadw.snapshotlearnonline.NumberOfContributes, unisadw.snapshotlearnonline.NumberOfViews\r\n",
							"FROM unisadw.snapshotlearnonline, unisadw.dimcourseresource\r\n",
							"WHERE unisadw.snapshotlearnonline.ResourceSK=unisadw.dimcourseresource.ResourceSK"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"SELECT unisadw.snapshotengagement.StudentSK, unisadw.dimgrade.Grade, unisadw.snapshotengagement.CourseSK\r\n",
							"FROM unisadw.snapshotengagement, unisadw.dimgrade\r\n",
							"WHERE unisadw.snapshotengagement.OfficialGradeSK=unisadw.dimgrade.GradeSK"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE VIEW loaccessvgrade AS\r\n",
							"SELECT t1.StudentSK, t1.CourseSK, t1.ResourceSK, t1.NumberOfContributes, t1.NumberOfViews, t2.Grade FROM (\r\n",
							"SELECT unisadw.snapshotlearnonline.StudentSK, unisadw.dimcourseresource.CourseSK, unisadw.dimcourseresource.ResourceSK,\r\n",
							"unisadw.snapshotlearnonline.NumberOfContributes, unisadw.snapshotlearnonline.NumberOfViews\r\n",
							"FROM unisadw.snapshotlearnonline, unisadw.dimcourseresource\r\n",
							"WHERE unisadw.snapshotlearnonline.ResourceSK=unisadw.dimcourseresource.ResourceSK\r\n",
							") AS t1, (\r\n",
							"SELECT unisadw.snapshotengagement.StudentSK, unisadw.dimgrade.Grade, unisadw.snapshotengagement.CourseSK\r\n",
							"FROM unisadw.snapshotengagement, unisadw.dimgrade\r\n",
							"WHERE unisadw.snapshotengagement.OfficialGradeSK=unisadw.dimgrade.GradeSK\r\n",
							") AS t2\r\n",
							"WHERE t1.StudentSK=t2.StudentSK AND t1.CourseSK=t2.CourseSK"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DimActivity')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "1",
						"spark.autotune.trackingId": "6c3db343-478b-4bd4-ba76-acc758592fad"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"logDF = spark.read.option(\"header\",\"true\").load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/output.csv', format='csv')\r\n",
							"logDF = logDF.filter(logDF.filename != 'NEWLogBUIL 1024 _1094_SP42020.csv')"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.window import Window"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"w = Window.orderBy(\"count\")"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.groupBy('Event name').count().withColumn('ActivitySK', row_number().over(w))\r\n",
							"logDF = logDF.withColumnRenamed('count', 'NumberOfActivities')\r\n",
							"logDF = logDF.withColumnRenamed('Event name', 'ActivityName')"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF.write.mode(\"overwrite\").saveAsTable(\"default.dimactivity\")"
						],
						"outputs": [],
						"execution_count": 12
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DimAssignment')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"6d3a7da8-b523-40a3-8093-5aa3549dfc58": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "2019-05-10 17:00:00",
												"1": "1"
											},
											{
												"0": "2021-05-12 12:00:00",
												"1": "1"
											},
											{
												"0": "2021-03-09 12:00:00",
												"1": "4"
											},
											{
												"0": "2020-06-09 12:00:00",
												"1": "3"
											},
											{
												"0": "2019-04-23 12:00:00",
												"1": "3"
											},
											{
												"0": "0020-01-28 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-09-09 17:00:00",
												"1": "2"
											},
											{
												"0": "2020-10-30 12:00:00",
												"1": "1"
											},
											{
												"1": "492"
											},
											{
												"0": "2019-03-06 23:55:00",
												"1": "1"
											},
											{
												"0": "2019-11-13 23:00:00",
												"1": "1"
											},
											{
												"0": "2019-08-07 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-03-10 12:00:00",
												"1": "1"
											},
											{
												"0": "2021-02-17 12:00:00",
												"1": "1"
											},
											{
												"0": "0020-03-10 12:00:00",
												"1": "1"
											},
											{
												"0": "2021-03-19 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-06-15 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-08-19 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-06-05 17:00:00",
												"1": "1"
											},
											{
												"0": "2019-11-06 15:00:00",
												"1": "1"
											},
											{
												"0": "2019-08-12 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-08-26 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-04-17 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-08-10 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-06-10 13:00:00",
												"1": "1"
											},
											{
												"0": "2020-02-20 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-06-07 12:00:00",
												"1": "2"
											},
											{
												"0": "2021-06-18 17:00:00",
												"1": "1"
											},
											{
												"0": "2021-04-27 12:00:00",
												"1": "4"
											},
											{
												"0": "2019-10-17 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-03-20 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-08-20 12:00:00",
												"1": "1"
											},
											{
												"0": "2018-10-22 12:00:00",
												"1": "1"
											},
											{
												"0": "2021-06-14 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-11-25 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-09-02 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-10-08 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-01-28 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-07-29 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-11-20 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-11-25 23:00:00",
												"1": "1"
											},
											{
												"0": "2020-10-06 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-02-24 12:00:00",
												"1": "1"
											},
											{
												"0": "2020-10-23 12:00:00",
												"1": "1"
											},
											{
												"0": "2019-10-08 23:00:00",
												"1": "3"
											},
											{
												"0": "2021-06-11 12:00:00",
												"1": "1"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "GlobalExtensionDueDateFormed",
												"type": "timestamp"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "count",
											"categoryFieldKeys": [
												"1"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"latesubDF = spark.sql(\"SELECT * FROM `default`.`latesubmerged`\")\r\n",
							"subvgradeDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/newsubmissionvgrades.json', format='json')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DateDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/local/QID1109_20210913_202220_1.parq', format='parquet')\r\n",
							"TimeDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/local/DimTime.parq', format='parquet')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Rename columns for subvgrade"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.withColumnRenamed('Assessment Name', 'AssessmentName')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Course ID', 'CourseID')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Subject Area', 'SubjectArea')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Catalog Number', 'CatalogNumber')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Course Name', 'CourseName')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Term Code', 'TermCode')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Transform Student's due dates as supplimentory Initial due dates"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.withColumn('StudentDueTime', to_timestamp(col(\"Student's Due Date\"), \"dd/MM/yyyy hh:mm:ss a\"))\\\r\n",
							"                        .withColumn(\"StudentDueTimeAlter\", to_timestamp(col(\"Student's Due Date\"), \"dd/MM/yyyy HH:mm\"))\r\n",
							"subvgradeDF = subvgradeDF.withColumn('StudentDueTime', when(isnull(subvgradeDF.StudentDueTime), subvgradeDF.StudentDueTimeAlter)\r\n",
							"                                                        .otherwise(subvgradeDF.StudentDueTime))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Transform Initial & Global extension due dates"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"latesubDF = latesubDF.withColumn('InitialDueDateFormed', to_timestamp(latesubDF.InitialDueDate, \"dd/MM/yyyy hh:mm:ss a\"))\\\r\n",
							"                    .withColumn('InitialDueDateFormedAlter1', to_timestamp(latesubDF.InitialDueDate, 'dd/MM/yyyy HH:mm'))\\\r\n",
							"                    .withColumn('InitialDueDateFormedAlter2', to_timestamp(latesubDF.InitialDueDate, 'dd/MM/yy HH:mm'))\\\r\n",
							"                    .withColumn('GlobalExtensionDueDateFormed', to_timestamp(latesubDF.GlobalExtensionDueDate, \"dd/MM/yyyy hh:mm:ss a\"))\\\r\n",
							"                    .withColumn('GlobalExtensionDueDateFormedAlter1', to_timestamp(latesubDF.GlobalExtensionDueDate, \"dd/MM/yyyy HH:mm\"))\\\r\n",
							"                    .withColumn('GlobalExtensionDueDateFormedAlter2', to_timestamp(latesubDF.GlobalExtensionDueDate, \"dd/MM/yy HH:mm\"))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"latesubDF = latesubDF.withColumn('InitialDueDateFormed', \r\n",
							"                                when(isnull(latesubDF.InitialDueDateFormed) & isnull(latesubDF.InitialDueDateFormedAlter1), \r\n",
							"                                    latesubDF.InitialDueDateFormedAlter2)\r\n",
							"                                .when(isnull(latesubDF.InitialDueDateFormed) & latesubDF.InitialDueDateFormedAlter1.isNotNull(),\r\n",
							"                                    latesubDF.InitialDueDateFormedAlter1)\r\n",
							"                                .otherwise(latesubDF.InitialDueDateFormed))\r\n",
							"\r\n",
							"latesubDF = latesubDF.withColumn('GlobalExtensionDueDateFormed',\r\n",
							"                                when(isnull(latesubDF.GlobalExtensionDueDateFormed) & isnull(latesubDF.GlobalExtensionDueDateFormedAlter1), \r\n",
							"                                    latesubDF.GlobalExtensionDueDateFormedAlter2)\r\n",
							"                                .when(isnull(latesubDF.GlobalExtensionDueDateFormed) & latesubDF.GlobalExtensionDueDateFormedAlter1.isNotNull(),\r\n",
							"                                    latesubDF.GlobalExtensionDueDateFormedAlter1)\r\n",
							"                                .otherwise(latesubDF.GlobalExtensionDueDateFormed))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Remove duplicates"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.groupBy(['AssessmentName', 'CourseID', 'SubjectArea', 'CatalogNumber', 'CourseName', 'TermCode', 'Year'])\\\r\n",
							"                            .agg(min('StudentDueTime').alias('DueTime'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"latesubDF = latesubDF.groupBy(['AssessmentName', 'InitialDueDateFormed', 'GlobalExtensionDueDateFormed', 'CourseID', 'SubjectArea', 'CatalogNumber', 'CourseName', \r\n",
							"                                'TermCode', 'Year']).count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"latesubDF.select('AssessmentName', 'CourseID', 'SubjectArea', 'CatalogNumber', 'CourseName', 'TermCode', 'Year')\\\r\n",
							"        .exceptAll(subvgradeDF.select('AssessmentName', 'CourseID', 'SubjectArea', 'CatalogNumber', 'CourseName', 'TermCode', 'Year'))\\\r\n",
							"        .count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Join latesub and subvgrade"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.join(latesubDF, ['AssessmentName', 'CourseID', 'SubjectArea', 'CatalogNumber', 'CourseName', 'TermCode'], 'left')\\\r\n",
							"                        .select(subvgradeDF.AssessmentName, subvgradeDF.CourseID, subvgradeDF.SubjectArea, subvgradeDF.CatalogNumber,\r\n",
							"                                subvgradeDF.CourseName, subvgradeDF.TermCode, subvgradeDF.Year, latesubDF.InitialDueDateFormed,\r\n",
							"                                latesubDF.GlobalExtensionDueDateFormed, subvgradeDF.DueTime)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"subvgradeDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(subvgradeDF.groupBy('GlobalExtensionDueDateFormed').count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.withColumn('InitialDueDateFormed', when(isnull(subvgradeDF.InitialDueDateFormed), subvgradeDF.DueTime)\r\n",
							"                                                                .otherwise(subvgradeDF.InitialDueDateFormed))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"def change_year_(date, Year):\r\n",
							"    return date.replace(year=Year) if date else date\r\n",
							"\r\n",
							"change_year = udf(change_year_, TimestampType())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.withColumn('InitialDueDateFormed', when(year(subvgradeDF.InitialDueDateFormed) == 20, \r\n",
							"                                                                    change_year(subvgradeDF.InitialDueDateFormed, lit(2020)))\r\n",
							"                                                                .otherwise(subvgradeDF.InitialDueDateFormed))\r\n",
							"subvgradeDF = subvgradeDF.withColumn('GlobalExtensionDueDateFormed', when(year(subvgradeDF.GlobalExtensionDueDateFormed) == 20, \r\n",
							"                                                                    change_year(subvgradeDF.GlobalExtensionDueDateFormed, lit(2020)))\r\n",
							"                                                                .otherwise(subvgradeDF.GlobalExtensionDueDateFormed))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Lookup for DateSK"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.join(DateDF, to_date(subvgradeDF.InitialDueDateFormed) == DateDF.FullDateAlternateKey, 'left')\\\r\n",
							"                .select(subvgradeDF.AssessmentName, subvgradeDF.CourseID, subvgradeDF.SubjectArea, subvgradeDF.CatalogNumber,\r\n",
							"                    subvgradeDF.CourseName, subvgradeDF.TermCode, subvgradeDF.Year, subvgradeDF.InitialDueDateFormed,\r\n",
							"                    subvgradeDF.GlobalExtensionDueDateFormed, DateDF.DateKey.alias('InitialDueDateSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 29
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.join(DateDF, to_date(subvgradeDF.GlobalExtensionDueDateFormed) == DateDF.FullDateAlternateKey, 'left')\\\r\n",
							"                .select(subvgradeDF.AssessmentName, subvgradeDF.CourseID, subvgradeDF.SubjectArea, subvgradeDF.CatalogNumber,\r\n",
							"                    subvgradeDF.CourseName, subvgradeDF.TermCode, subvgradeDF.Year, subvgradeDF.InitialDueDateFormed,\r\n",
							"                    subvgradeDF.GlobalExtensionDueDateFormed, subvgradeDF.InitialDueDateSK, DateDF.DateKey.alias('GlobalExtensionDueDateSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 30
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"lookup for TimeSK"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.join(TimeDF, [hour(subvgradeDF.InitialDueDateFormed) == TimeDF.Hour,\r\n",
							"                                        minute(subvgradeDF.InitialDueDateFormed) == TimeDF.Minute,\r\n",
							"                                        second(subvgradeDF.InitialDueDateFormed) == TimeDF.Second], 'left')\\\r\n",
							"                            .select(subvgradeDF.AssessmentName, subvgradeDF.CourseID, subvgradeDF.SubjectArea, subvgradeDF.CatalogNumber,\r\n",
							"                                    subvgradeDF.CourseName, subvgradeDF.TermCode, subvgradeDF.Year, subvgradeDF.InitialDueDateFormed,\r\n",
							"                                    subvgradeDF.GlobalExtensionDueDateFormed, subvgradeDF.InitialDueDateSK, subvgradeDF.GlobalExtensionDueDateSK, TimeDF.TimeSK.alias('InitialDueTimeSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 31
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.join(TimeDF, [hour(subvgradeDF.GlobalExtensionDueDateFormed) == TimeDF.Hour,\r\n",
							"                                        minute(subvgradeDF.GlobalExtensionDueDateFormed) == TimeDF.Minute,\r\n",
							"                                        second(subvgradeDF.GlobalExtensionDueDateFormed) == TimeDF.Second], 'left')\\\r\n",
							"                            .select(subvgradeDF.AssessmentName, subvgradeDF.CourseID, subvgradeDF.SubjectArea, subvgradeDF.CatalogNumber,\r\n",
							"                                    subvgradeDF.CourseName, subvgradeDF.TermCode, subvgradeDF.Year, subvgradeDF.InitialDueDateFormed.alias('InitialDueTime'),\r\n",
							"                                    subvgradeDF.GlobalExtensionDueDateFormed.alias('GlobalExtensionDueTime'), subvgradeDF.InitialDueDateSK, subvgradeDF.GlobalExtensionDueDateSK, \r\n",
							"                                    subvgradeDF.InitialDueTimeSK, TimeDF.TimeSK.alias('GlobalextensionDueTimeSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 32
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 33
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Save results to "
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.withColumn('AssignmentSK', monotonically_increasing_id())\r\n",
							"subvgradeDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.DimAssignment\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 34
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"assignDF = spark.sql(\"SELECT * FROM `unisadw`.`dimassignment`\")\r\n",
							"assignDF = assignDF.withColumn('AssignmentSK', monotonically_increasing_id())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"assignDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"assignDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.DimAssignment\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"assignDF = spark.sql(\"SELECT * FROM `unisadw`.`dimassignmenttmp`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DimCourseResource')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"b24d8acb-c4cb-4e73-a611-cf7a7c7d5571": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "170253",
												"1": "EEET",
												"2": "1029",
												"3": "UO Electrical and Electronic Systems",
												"4": "2105",
												"5": "2021",
												"6": "22"
											},
											{
												"0": "170265",
												"1": "COMP",
												"2": "1047",
												"3": "UO Programming Concepts",
												"4": "2112",
												"5": "2021",
												"6": "106"
											},
											{
												"0": "170263",
												"1": "MATH",
												"2": "1079",
												"3": "UO Mathematical Methods for Engineers 2",
												"4": "2112",
												"5": "2021",
												"6": "54"
											},
											{
												"0": "163523",
												"1": "BUIL",
												"2": "2029",
												"3": "UO Introduction to Contract Administration",
												"4": "1912",
												"5": "2019",
												"6": "31"
											},
											{
												"0": "163523",
												"1": "BUIL",
												"2": "2029",
												"3": "UO Introduction to Contract Administration",
												"4": "2012",
												"5": "2020",
												"6": "69"
											},
											{
												"0": "163523",
												"1": "BUIL",
												"2": "2029",
												"3": "UO Introduction to Contract Administration",
												"4": "2112",
												"5": "2021",
												"6": "85"
											},
											{
												"0": "163523",
												"1": "BUIL",
												"2": "2029",
												"3": "UO Introduction to Contract Administration",
												"4": "1925",
												"5": "2019",
												"6": "68"
											},
											{
												"0": "163523",
												"1": "BUIL",
												"2": "2029",
												"3": "UO Introduction to Contract Administration",
												"4": "2025",
												"5": "2020",
												"6": "122"
											},
											{
												"0": "164242",
												"1": "MATH",
												"2": "1075",
												"3": "UO Quantitative Methods for Business",
												"4": "2014",
												"5": "2020",
												"6": "312"
											},
											{
												"0": "164242",
												"1": "MATH",
												"2": "1075",
												"3": "UO Quantitative Methods for Business",
												"4": "2005",
												"5": "2020",
												"6": "181"
											},
											{
												"0": "164242",
												"1": "MATH",
												"2": "1075",
												"3": "UO Quantitative Methods for Business",
												"4": "1905",
												"5": "2019",
												"6": "93"
											},
											{
												"0": "164242",
												"1": "MATH",
												"2": "1075",
												"3": "UO Quantitative Methods for Business",
												"4": "1914",
												"5": "2019",
												"6": "131"
											},
											{
												"0": "164101",
												"1": "BUIL",
												"2": "1024",
												"3": "UO Building Estimating",
												"4": "2014",
												"5": "2020",
												"6": "87"
											},
											{
												"0": "163504",
												"1": "BUIL",
												"2": "1028",
												"3": "UO Quantity Surveying Practice 1",
												"4": "1925",
												"5": "2019",
												"6": "43"
											},
											{
												"0": "163504",
												"1": "BUIL",
												"2": "1028",
												"3": "UO Quantity Surveying Practice 1",
												"4": "1912",
												"5": "2019",
												"6": "35"
											},
											{
												"0": "164085",
												"1": "BUIL",
												"2": "2027",
												"3": "UO Construction Cost Planning",
												"4": "2012",
												"5": "2020",
												"6": "25"
											},
											{
												"0": "163506",
												"1": "INFT",
												"2": "1024",
												"3": "UO Information Technology Fundamentals",
												"4": "2105",
												"5": "2021",
												"6": "138"
											},
											{
												"0": "164085",
												"1": "BUIL",
												"2": "2027",
												"3": "UO Construction Cost Planning",
												"4": "1912",
												"5": "2019",
												"6": "5"
											},
											{
												"0": "164085",
												"1": "BUIL",
												"2": "2027",
												"3": "UO Construction Cost Planning",
												"4": "1925",
												"5": "2019",
												"6": "24"
											},
											{
												"0": "164086",
												"1": "BUIL",
												"2": "3025",
												"3": "UO Project Appraisal",
												"4": "2012",
												"5": "2020",
												"6": "57"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "CourseID",
												"type": "bigint"
											},
											{
												"key": "1",
												"name": "SubjectArea",
												"type": "string"
											},
											{
												"key": "2",
												"name": "CatalogNumber",
												"type": "bigint"
											},
											{
												"key": "3",
												"name": "CourseName",
												"type": "string"
											},
											{
												"key": "4",
												"name": "TermCode",
												"type": "bigint"
											},
											{
												"key": "5",
												"name": "Year",
												"type": "bigint"
											},
											{
												"key": "6",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"1"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							},
							"a86442d7-3abc-49a8-bb25-c82c1e2494b4": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Submit Assessment 1: Part A (10%; Due Week 3)",
												"1": "164085",
												"2": "BUIL",
												"3": "2027",
												"4": "UO Construction Cost Planning",
												"5": "2025",
												"6": "2020",
												"7": "2020-10-12 12:00:00",
												"10": "20201012"
											},
											{
												"0": "Submission Point - PSP Programming Assignment 3 Part B",
												"1": "163541",
												"2": "COMP",
												"3": "1043",
												"4": "UO Problem Solving and Programming",
												"5": "2012",
												"6": "2020",
												"7": "2020-06-14 23:59:00",
												"10": "20200614"
											},
											{
												"0": "Part C: Trade Summary 2 (18%) and Part D: Tender Schedule and Cover Letter (12%) (Week 9)",
												"1": "164101",
												"2": "BUIL",
												"3": "1024",
												"4": "UO Building Estimating",
												"5": "1914",
												"6": "2019",
												"7": "2019-09-02 12:00:00",
												"10": "20190902"
											},
											{
												"0": "Submit Assessment 1: Part B (25%; Due Week 7)",
												"1": "163504",
												"2": "BUIL",
												"3": "1028",
												"4": "UO Quantity Surveying Practice 1",
												"5": "2012",
												"6": "2020",
												"7": "2020-05-25 12:00:00",
												"10": "20200525"
											},
											{
												"0": "Week 5 Challenge Question",
												"1": "163506",
												"2": "INFT",
												"3": "1024",
												"4": "UO Information Technology Fundamentals",
												"5": "1905",
												"6": "2019",
												"7": "2019-02-18 12:00:00",
												"10": "20190218"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part D & E: Systems, Construction, Maintenance and  Final Review (Week 10; 34%)",
												"1": "163522",
												"2": "CIVE",
												"3": "1006",
												"4": "UO Construction Materials",
												"5": "1905",
												"6": "2019"
											},
											{
												"0": "Assessment 2 Part A - Submission",
												"1": "163528",
												"2": "COMP",
												"3": "2033",
												"4": "UO Data Structures",
												"5": "2105",
												"6": "2021",
												"7": "2021-02-22 12:00:00",
												"10": "20210222"
											},
											{
												"0": "Assessment 2 - Part A: Introduction to Accident Database (15%)",
												"1": "164089",
												"2": "BUIL",
												"3": "3023",
												"4": "UO Construction Operations and Safety",
												"5": "2014",
												"6": "2020",
												"7": "2020-08-17 12:00:00",
												"10": "20200817"
											},
											{
												"0": "Assessment 2 Part C Viva Voice",
												"1": "164091",
												"2": "BUIL",
												"3": "3022",
												"4": "UO Advanced Contract Administration",
												"5": "2112",
												"6": "2021",
												"7": "2021-06-11 12:00:00",
												"10": "20210611"
											},
											{
												"0": "Assessment 2 Part B Viva Voce (20%)",
												"1": "164091",
												"2": "BUIL",
												"3": "3022",
												"4": "UO Advanced Contract Administration",
												"5": "1925",
												"6": "2019",
												"7": "2019-11-29 23:00:00",
												"10": "20191129"
											},
											{
												"0": "Assessment 1",
												"1": "163542",
												"2": "INFS",
												"3": "2040",
												"4": "UO Systems Design",
												"5": "1912",
												"6": "2019",
												"7": "2019-05-20 12:00:00",
												"10": "20190520"
											},
											{
												"0": "Project 2: Comparison of Classification Techniques",
												"1": "164145",
												"2": "INFS",
												"3": "3081",
												"4": "UO Predictive Analytics",
												"5": "2005",
												"6": "2020",
												"7": "2020-03-22 00:00:00",
												"10": "20200322"
											},
											{
												"0": "Submit Assessment 1 - Part A: Design report & presentation (45%; Due Week 5)",
												"1": "164082",
												"2": "CIVE",
												"3": "2016",
												"4": "UO Structures 2",
												"5": "1905",
												"6": "2019",
												"7": "2019-02-18 12:00:00",
												"10": "20190218"
											},
											{
												"0": "Assignment 2A",
												"1": "163527",
												"2": "INFT",
												"3": "1023",
												"4": "UO IT Project Management",
												"5": "2012",
												"6": "2020",
												"7": "2020-05-25 12:00:00",
												"10": "20200525"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part C: Construction & Maintenance (Week 10; 30%)",
												"1": "163522",
												"2": "CIVE",
												"3": "1006",
												"4": "UO Construction Materials",
												"5": "2005",
												"6": "2020"
											},
											{
												"0": "Submit Assessment 1: Part B (30%; Due Week 6)",
												"1": "164085",
												"2": "BUIL",
												"3": "2027",
												"4": "UO Construction Cost Planning",
												"5": "1925",
												"6": "2019",
												"7": "2019-11-04 12:00:00",
												"10": "20191104"
											},
											{
												"0": "Submit Assessment 2: Report - Part A - Reading Journal and Part B - Analytical Report (50%)",
												"1": "163461",
												"2": "BUIL",
												"3": "1027",
												"4": "UO Introduction to Construction Management",
												"5": "2014",
												"6": "2020"
											},
											{
												"0": "Submit Assessment 2: Report - Analytical Report, with Reading Journal Extract as Appendix (50% Due Week 9)",
												"1": "163461",
												"2": "BUIL",
												"3": "1027",
												"4": "UO Introduction to Construction Management",
												"5": "1914",
												"6": "2019"
											},
											{
												"0": "Assessment 1 Part A: Construction of Wall and Roof Model (20% Due Week 6)",
												"1": "163441",
												"2": "CIVE",
												"3": "1005",
												"4": "UO Construction 1",
												"5": "1925",
												"6": "2019"
											},
											{
												"0": "Assignment 2A",
												"1": "163527",
												"2": "INFT",
												"3": "1023",
												"4": "UO IT Project Management",
												"5": "2025",
												"6": "2020",
												"7": "2020-11-09 12:00:00",
												"10": "20201109"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "AssessmentName",
												"type": "string"
											},
											{
												"key": "1",
												"name": "CourseID",
												"type": "bigint"
											},
											{
												"key": "2",
												"name": "SubjectArea",
												"type": "string"
											},
											{
												"key": "3",
												"name": "CatalogNumber",
												"type": "bigint"
											},
											{
												"key": "4",
												"name": "CourseName",
												"type": "string"
											},
											{
												"key": "5",
												"name": "TermCode",
												"type": "bigint"
											},
											{
												"key": "6",
												"name": "Year",
												"type": "bigint"
											},
											{
												"key": "7",
												"name": "InitialDueDateFormed",
												"type": "timestamp"
											},
											{
												"key": "8",
												"name": "GlobalExtensionDueDateFormed",
												"type": "timestamp"
											},
											{
												"key": "9",
												"name": "GlobalDueDate",
												"type": "date"
											},
											{
												"key": "10",
												"name": "DateKey",
												"type": "int"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"2932d888-0343-4f70-bd17-3d30094e4b4d": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "2 days, 19 hours, 6 minutes, 26 seconds",
												"6": "F2",
												"7": "0.0",
												"8": "9/06/2021 3:53",
												"9": "CCXHBBBXA",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eb1"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "5 days, 14 hours, 46 minutes, 15 seconds",
												"6": "HD",
												"7": "100.0",
												"8": "6/06/2021 8:13",
												"9": "CCXHLBBGW",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ecb"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 3 hours, 48 minutes, 44 seconds",
												"6": "F2",
												"7": "0.0",
												"8": "11/06/2021 19:11",
												"9": "CXXXHHLXG",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ead"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 5 minutes, 7 seconds",
												"6": "D",
												"7": "76.90000153",
												"8": "11/06/2021 23:05",
												"9": "CCXHHGGCX",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ec1"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 7 hours, 37 minutes, 30 seconds",
												"6": "C",
												"7": "66.5",
												"8": "11/06/2021 15:22",
												"9": "CCXHLLXDW",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eb5"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 5 minutes, 7 seconds",
												"6": "F2",
												"7": "0.0",
												"8": "11/06/2021 23:05",
												"9": "CCXHHHZGX",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eaf"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 12 minutes, 28 seconds",
												"6": "C",
												"7": "65.69999695",
												"8": "11/06/2021 22:47",
												"9": "CCXHXGGWA",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eb6"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 3 hours, 48 minutes, 44 seconds",
												"6": "HD",
												"7": "86.59999847",
												"8": "11/06/2021 19:11",
												"9": "CCXHHWWLA",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ec7"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 22 hours, 21 minutes, 55 seconds",
												"6": "F1",
												"7": "45.0",
												"8": "11/06/2021 0:38",
												"9": "CCXHLCWXG",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eb7"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 3 hours, 48 minutes, 44 seconds",
												"6": "HD",
												"7": "87.5",
												"8": "11/06/2021 19:11",
												"9": "CCXHHDGZG",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ec8"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 22 hours, 21 minutes, 55 seconds",
												"6": "F1",
												"7": "45.0",
												"8": "11/06/2021 0:38",
												"9": "CCXHBCHDA",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eb2"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 12 minutes, 28 seconds",
												"6": "P1",
												"7": "59.79999924",
												"8": "11/06/2021 22:47",
												"9": "CCXHLZLLX",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eb8"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "NaN",
												"6": "F2",
												"7": "0.0",
												"8": "NaN",
												"9": "CCXCWBZZA",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eac"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 7 hours, 37 minutes, 30 seconds",
												"6": "C",
												"7": "70.69999695",
												"8": "11/06/2021 15:22",
												"9": "CCXHLHXZH",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ebe"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "2 days, 19 hours, 6 minutes, 26 seconds",
												"6": "C",
												"7": "66.80000305",
												"8": "9/06/2021 3:53",
												"9": "CCXHBXAGW",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eba"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 3 hours, 2 minutes, 20 seconds",
												"6": "D",
												"7": "75.0",
												"8": "11/06/2021 19:57",
												"9": "CCXHZWXXD",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ec0"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "NaN",
												"6": "F2",
												"7": "0.0",
												"8": "NaN",
												"9": "CCXHXAHCD",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eae"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 3 hours, 48 minutes, 44 seconds",
												"6": "HD",
												"7": "89.30000305",
												"8": "11/06/2021 19:11",
												"9": "CCXHBBXZB",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ec9"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 2 hours, 17 minutes, 43 seconds",
												"6": "HD",
												"7": "91.59999847",
												"8": "11/06/2021 20:42",
												"9": "CCXHHGHZL",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eca"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 22 hours, 31 minutes, 34 seconds",
												"6": "HD",
												"7": "95.0",
												"8": "11/06/2021 0:28",
												"9": "CCXHLLLLG",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ed2"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 12 minutes, 28 seconds",
												"6": "C",
												"7": "65.69999695",
												"8": "11/06/2021 22:47",
												"9": "CCXZHBCLB",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eb3"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 3 hours, 48 minutes, 44 seconds",
												"6": "F2",
												"7": "0.0",
												"8": "11/06/2021 19:11",
												"9": "CCXHBBZCL",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eb0"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 22 hours, 21 minutes, 55 seconds",
												"6": "F2",
												"7": "0.0",
												"8": "11/06/2021 0:38",
												"9": "CCXZGABZW",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eb4"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 2 hours, 17 minutes, 43 seconds",
												"6": "HD",
												"7": "93.40000153",
												"8": "11/06/2021 20:42",
												"9": "CCXZZXCHW",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ed3"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "2 days, 19 hours, 6 minutes, 26 seconds",
												"6": "C",
												"7": "68.19999695",
												"8": "9/06/2021 3:53",
												"9": "CCXHLLAXG",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ebc"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 2 hours, 17 minutes, 43 seconds",
												"6": "HD",
												"7": "93.40000153",
												"8": "11/06/2021 20:42",
												"9": "CCXHBXCCZ",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ece"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 7 hours, 37 minutes, 30 seconds",
												"6": "C",
												"7": "71.40000153",
												"8": "11/06/2021 15:22",
												"9": "CCXHZCXBA",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ec2"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 7 hours, 37 minutes, 30 seconds",
												"6": "C",
												"7": "71.40000153",
												"8": "11/06/2021 15:22",
												"9": "CCXHLHWZB",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ec3"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 12 minutes, 28 seconds",
												"6": "C",
												"7": "67.0",
												"8": "11/06/2021 22:47",
												"9": "CCXHZZXBD",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1eb9"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 7 hours, 37 minutes, 30 seconds",
												"6": "C",
												"7": "70.0",
												"8": "11/06/2021 15:22",
												"9": "CCXHHABHG",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ebd"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 5 minutes, 7 seconds",
												"6": "D",
												"7": "79.0",
												"8": "11/06/2021 23:05",
												"9": "CCXHLDBLH",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ec4"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 12 minutes, 28 seconds",
												"6": "C",
												"7": "67.0",
												"8": "11/06/2021 22:47",
												"9": "CCXHZHGDD",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ebb"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 5 minutes, 7 seconds",
												"6": "C",
												"7": "72.5",
												"8": "11/06/2021 23:05",
												"9": "CCXHCBGDC",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ec5"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "2 days, 19 hours, 6 minutes, 26 seconds",
												"6": "C",
												"7": "68.19999695",
												"8": "9/06/2021 3:53",
												"9": "CCXHHLDDD",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ebf"
												},
												"15": "2021-06-11 23:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "1007",
												"2": "170266",
												"3": "UO Sustainable Engineering Practice",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 3 hours, 48 minutes, 44 seconds",
												"6": "HD",
												"7": "86.59999847",
												"8": "11/06/2021 19:11",
												"9": "CCXHBCHGC",
												"10": "11/06/2021 23:00",
												"11": "ENGG",
												"12": "2112",
												"13": "2021",
												"14": {
													"$oid": "61303fb95f04836f445f1ec6"
												},
												"15": "2021-06-11 23:00:00"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "AssessmentName",
												"type": "string"
											},
											{
												"key": "1",
												"name": "CatalogNumber",
												"type": "bigint"
											},
											{
												"key": "2",
												"name": "CourseID",
												"type": "bigint"
											},
											{
												"key": "3",
												"name": "CourseName",
												"type": "string"
											},
											{
												"key": "4",
												"name": "Course Offering Description",
												"type": "string"
											},
											{
												"key": "5",
												"name": "Early / Late",
												"type": "string"
											},
											{
												"key": "6",
												"name": "Grade",
												"type": "string"
											},
											{
												"key": "7",
												"name": "Grade Numeric",
												"type": "double"
											},
											{
												"key": "8",
												"name": "Last Submission Time",
												"type": "string"
											},
											{
												"key": "9",
												"name": "Student ID",
												"type": "string"
											},
											{
												"key": "10",
												"name": "Student's Due Date",
												"type": "string"
											},
											{
												"key": "11",
												"name": "SubjectArea",
												"type": "string"
											},
											{
												"key": "12",
												"name": "TermCode",
												"type": "bigint"
											},
											{
												"key": "13",
												"name": "Year",
												"type": "bigint"
											},
											{
												"key": "14",
												"name": "_id",
												"type": "StructType(StructField($oid,StringType,true))"
											},
											{
												"key": "15",
												"name": "DueTime",
												"type": "timestamp"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"f53fd4ce-45aa-48e4-bba6-5cfb5091b9ed": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Submission Point Assessment 2.3",
												"1": "170254",
												"2": "ENGG",
												"3": "1005",
												"4": "UO Engineering Design and Innovation",
												"5": "2105",
												"6": "2021",
												"11": "51",
												"13": "2021-03-15 12:00:00"
											},
											{
												"0": "Submission Point - Assessment 2 (EWB Group Project Report)",
												"1": "170266",
												"2": "ENGG",
												"3": "1007",
												"4": "UO Sustainable Engineering Practice",
												"5": "2112",
												"6": "2021",
												"11": "42949672964",
												"13": "2021-06-04 12:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "170266",
												"2": "ENGG",
												"3": "1007",
												"4": "UO Sustainable Engineering Practice",
												"5": "2112",
												"6": "2021",
												"11": "8589934642",
												"13": "2021-06-11 23:00:00"
											},
											{
												"0": "Submission Point - Continuous Assessment 1.1",
												"1": "170266",
												"2": "ENGG",
												"3": "1007",
												"4": "UO Sustainable Engineering Practice",
												"5": "2112",
												"6": "2021",
												"11": "34359738421",
												"13": "2021-05-03 12:00:00"
											},
											{
												"0": "Challenge Question 5 (Week 8)",
												"1": "163506",
												"2": "INFT",
												"3": "1024",
												"4": "UO Information Technology Fundamentals",
												"5": "2005",
												"6": "2020",
												"11": "60129542153",
												"13": "0020-03-10 12:00:00"
											},
											{
												"0": "Submission Point - Continuous Assessment 1.1",
												"1": "170266",
												"2": "ENGG",
												"3": "1007",
												"4": "UO Sustainable Engineering Practice",
												"5": "2025",
												"6": "2020",
												"11": "51539607566",
												"13": "2020-10-19 12:00:00"
											},
											{
												"0": "Submission Point - Assessment 2.1",
												"1": "170254",
												"2": "ENGG",
												"3": "1005",
												"4": "UO Engineering Design and Innovation",
												"5": "2105",
												"6": "2021",
												"11": "51539607568",
												"13": "2021-03-01 12:00:00"
											},
											{
												"0": "Challenge Question 3 (Week 5)",
												"1": "163506",
												"2": "INFT",
												"3": "1024",
												"4": "UO Information Technology Fundamentals",
												"5": "2005",
												"6": "2020",
												"11": "60129542144",
												"13": "0020-02-17 12:00:00"
											},
											{
												"0": "Continuous Assessment 1.4 - Submission Point",
												"1": "170256",
												"2": "MENG",
												"3": "1014",
												"4": "UO Engineering Mechanics",
												"5": "2025",
												"6": "2020",
												"11": "34359738386",
												"13": "2020-11-16 12:00:00"
											},
											{
												"0": "SUBMIT Assessment 2 Part A - Problem Solving Exercise (25%)",
												"1": "170257",
												"2": "MATH",
												"3": "1076",
												"4": "UO Essential Mathematics 1: Algebra and Trigonometry",
												"5": "2025",
												"6": "2020",
												"11": "34359738424",
												"13": "2020-10-26 12:00:00"
											},
											{
												"0": "Assessment 2 Project Presentation (15%)",
												"1": "170266",
												"2": "ENGG",
												"3": "1007",
												"4": "UO Sustainable Engineering Practice",
												"5": "2025",
												"6": "2020",
												"11": "36",
												"13": "2020-11-27 12:00:00"
											},
											{
												"0": "Challenge Question 1 (Week 2)",
												"1": "163506",
												"2": "INFT",
												"3": "1024",
												"4": "UO Information Technology Fundamentals",
												"5": "2005",
												"6": "2020",
												"11": "42949672961",
												"13": "0020-01-28 12:00:00"
											},
											{
												"0": "Challenge Question 4 (Week 7)",
												"1": "163506",
												"2": "INFT",
												"3": "1024",
												"4": "UO Information Technology Fundamentals",
												"5": "2005",
												"6": "2020",
												"11": "51539607592",
												"13": "0020-03-02 12:00:00"
											},
											{
												"0": "Submission Point - Continuous Assessment 1.2",
												"1": "170266",
												"2": "ENGG",
												"3": "1007",
												"4": "UO Sustainable Engineering Practice",
												"5": "2025",
												"6": "2020",
												"11": "62",
												"13": "2020-11-27 12:00:00"
											},
											{
												"0": "Submission Point - Continuous Assessment 1.2",
												"1": "170266",
												"2": "ENGG",
												"3": "1007",
												"4": "UO Sustainable Engineering Practice",
												"5": "2112",
												"6": "2021",
												"11": "34359738397",
												"13": "2021-06-11 12:00:00"
											},
											{
												"0": "Submission Point - Assessment 2",
												"1": "170266",
												"2": "ENGG",
												"3": "1007",
												"4": "UO Sustainable Engineering Practice",
												"5": "2025",
												"6": "2020",
												"11": "25769803843",
												"13": "2020-11-20 12:00:00"
											},
											{
												"0": "SUBMIT Assessment 2 Part B - Research Project (25%)",
												"1": "170257",
												"2": "MATH",
												"3": "1076",
												"4": "UO Essential Mathematics 1: Algebra and Trigonometry",
												"5": "2025",
												"6": "2020",
												"11": "17179869195",
												"13": "2020-11-16 12:00:00"
											},
											{
												"0": "SUBMIT Assessment 2 Part B - Research Project (25%)",
												"1": "170257",
												"2": "MATH",
												"3": "1076",
												"4": "UO Essential Mathematics 1: Algebra and Trigonometry",
												"5": "2105",
												"6": "2021",
												"11": "25769803832",
												"13": "2021-03-09 12:00:00"
											},
											{
												"0": "SUBMIT Assessment 2 Part A - Problem Solving Exercise (25%)",
												"1": "170257",
												"2": "MATH",
												"3": "1076",
												"4": "UO Essential Mathematics 1: Algebra and Trigonometry",
												"5": "2105",
												"6": "2021",
												"11": "42949673008",
												"13": "2021-02-15 12:00:00"
											},
											{
												"0": "Challenge Question 2 (Week 3)",
												"1": "163506",
												"2": "INFT",
												"3": "1024",
												"4": "UO Information Technology Fundamentals",
												"5": "2005",
												"6": "2020",
												"11": "60129542148",
												"13": "0020-02-03 12:00:00"
											},
											{
												"0": "Continuous Assessment 1.4 - Submission Point",
												"1": "170256",
												"2": "MENG",
												"3": "1014",
												"4": "UO Engineering Mechanics",
												"5": "2112",
												"6": "2021",
												"11": "60129542145",
												"13": "2021-05-31 12:00:00"
											},
											{
												"0": "Submission Point Assessment 2.2",
												"1": "170254",
												"2": "ENGG",
												"3": "1005",
												"4": "UO Engineering Design and Innovation",
												"5": "2105",
												"6": "2021",
												"11": "25769803790",
												"13": "2021-03-19 12:00:00"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "AssessmentName",
												"type": "string"
											},
											{
												"key": "1",
												"name": "CourseID",
												"type": "bigint"
											},
											{
												"key": "2",
												"name": "SubjectArea",
												"type": "string"
											},
											{
												"key": "3",
												"name": "CatalogNumber",
												"type": "bigint"
											},
											{
												"key": "4",
												"name": "CourseName",
												"type": "string"
											},
											{
												"key": "5",
												"name": "TermCode",
												"type": "bigint"
											},
											{
												"key": "6",
												"name": "Year",
												"type": "bigint"
											},
											{
												"key": "7",
												"name": "InitialDueTime",
												"type": "timestamp"
											},
											{
												"key": "8",
												"name": "GlobalExtensionDueTime",
												"type": "timestamp"
											},
											{
												"key": "9",
												"name": "InitialDueDateSK",
												"type": "int"
											},
											{
												"key": "10",
												"name": "GlobalExtensionDueSK",
												"type": "int"
											},
											{
												"key": "11",
												"name": "AssignmentSK",
												"type": "bigint"
											},
											{
												"key": "12",
												"name": "DueTime",
												"type": "timestamp"
											},
											{
												"key": "13",
												"name": "DueTimeAltered",
												"type": "timestamp"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"resourceDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/learnonline.json', format='json')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"resourceDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"resourceDF = resourceDF.groupBy(['Year', 'ActivityResourceName', 'ActivityResourceType', 'AssessmentMethod', 'CatalogNumber',\r\n",
							"                                'CourseID', 'CourseName', 'SubjectArea', 'TermCode']).count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"resourceDF = resourceDF.withColumn('ResourceSK', monotonically_increasing_id()).write.mode(\"overwrite\").saveAsTable(\"unisadw.DimCourseResource\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"courseDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/coursesitevisits.json', format='json')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"courseDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"courseDF = courseDF.withColumnRenamed('Catalog Number', 'CatalogNumber')\r\n",
							"courseDF = courseDF.withColumnRenamed('Course ID', 'CourseID')\r\n",
							"courseDF = courseDF.withColumnRenamed('Course Name', 'CourseName')\r\n",
							"courseDF = courseDF.withColumnRenamed('Subject Area', 'SubjectArea')\r\n",
							"courseDF = courseDF.withColumnRenamed('Term Code', 'TermCode')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"courseDF = courseDF.groupBy(['CourseID', 'SubjectArea', 'CatalogNumber', 'CourseName', 'TermCode', 'Year']).count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(courseDF.limit(20))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"courseDF.withColumn('CourseSK', monotonically_increasing_id()).write.mode(\"overwrite\").saveAsTable(\"unisadw.DimCourse\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"AssignmentDF = spark.sql(\"SELECT * FROM `default`.`dimassignment`\")\r\n",
							"display(AssignmentDF.limit(20))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"AssignmentDF = AssignmentDF.withColumnRenamed('InitialDueDateFormed', 'InitialDueTime')\r\n",
							"AssignmentDF = AssignmentDF.withColumnRenamed('GlobalExtensionDueDateFormed', 'GlobalExtensionDueTime')\r\n",
							"AssignmentDF = AssignmentDF.withColumnRenamed('DateKey', 'InitialDueDateSK')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"AssignmentDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 26
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DateDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/local/QID1109_20210913_202220_1.parq', format='parquet')\r\n",
							"TimeDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/local/DimTime.parq', format='parquet')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"AssignmentDF = AssignmentDF.join(DateDF, AssignmentDF.GlobalDueDate == DateDF.FullDateAlternateKey, 'left')\\\r\n",
							"                            .select('AssessmentName', 'CourseID', 'SubjectArea', 'CatalogNumber', 'CourseName', 'TermCode', 'Year', 'InitialDueTime',\r\n",
							"                                    'GlobalExtensionDueTime', 'InitialDueDateSK', DateDF.DateKey.alias('GlobalExtensionDueSK'))\\\r\n",
							"                            .withColumn('AssignmentSK', monotonically_increasing_id())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/submissionvgrades.json', format='json')\r\n",
							"\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Assessment Name', 'AssessmentName')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Course ID', 'CourseID')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Subject Area', 'SubjectArea')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Catalog Number', 'CatalogNumber')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Course Name', 'CourseName')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Term Code', 'TermCode')\r\n",
							"subvgradeDF = subvgradeDF.withColumn(\"DueTime\", to_timestamp(col(\"Student's Due Date\"), \"dd/MM/yyyy HH:mm\"))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(subvgradeDF.where((subvgradeDF.CourseName=='UO Sustainable Engineering Practice') & (subvgradeDF.AssessmentName == 'Assessment 2 Project Presentation (15%)') & (subvgradeDF.TermCode == 2112)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.groupBy(['AssessmentName', 'CourseID', 'SubjectArea', 'CatalogNumber', 'CourseName', 'TermCode', 'Year']).agg(min('DueTime'))\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('min(DueTime)', 'DueTimeAltered')\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"AssignmentDF = spark.sql(\"SELECT * FROM `default`.`dimassignmentinprogress`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"AssignmentDF = AssignmentDF.join(subvgradeDF, ['AssessmentName', 'CourseID', 'SubjectArea', 'CatalogNumber', 'CourseName', 'TermCode', 'Year'])\\\r\n",
							"                            .select('AssessmentName', 'CourseID', 'SubjectArea', 'CatalogNumber', 'CourseName', 'TermCode', 'Year',\r\n",
							"                                    AssignmentDF.InitialDueTime, AssignmentDF.GlobalExtensionDueTime, AssignmentDF.InitialDueDateSK,\r\n",
							"                                    AssignmentDF.GlobalExtensionDueSK, AssignmentDF.AssignmentSK, AssignmentDF.DueTime, \r\n",
							"                                    subvgradeDF.DueTimeAltered)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(AssignmentDF.where(isnull(AssignmentDF.DueTime)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"AssignmentDF.write.mode(\"overwrite\").saveAsTable(\"default.DimAssignment\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"latesubDF = spark.sql(\"SELECT * FROM `default`.`latesubmerged`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DimResource')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *\r\n",
							"from pyspark.sql.window import Window\r\n",
							"w = Window.orderBy(\"ActivityResourceName\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimResource = spark.sql(\"SELECT * FROM `unisadw`.`dimcourseresource`\")\r\n",
							"logDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/NewLog.json', format='json')\r\n",
							"DimCourse = spark.sql(\"SELECT * FROM `unisadw`.`dimcourse`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 33
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('course', regexp_extract(upper(logDF.filename), r'NEWLOG(LOGS)?_?([A-Z]{4}\\s\\d{4})', 2))\r\n",
							"logDF = logDF.withColumn('StudyPeriod', regexp_extract(upper(logDF.filename), r'NEWLOG(LOGS)?_?([A-Z]{4}\\s\\d{4})\\s?_?(SP\\d{1})', 3))\r\n",
							"logDF = logDF.withColumn('Year', when(col('filename')=='NEWLoglogs_MATH 1077 SP3021_20210925-1114.csv', '2021')\r\n",
							"                                .otherwise(regexp_extract(upper(logDF.filename), r'NEWLOG(LOGS)?_?([A-Z]{4}\\s\\d{4})\\s?_?(SP\\d{1})\\s?(\\d{4})', 4)))\r\n",
							"logDF = logDF.withColumn('TermCode', when(col('StudyPeriod') == 'SP1', concat(substring(col('Year'), 3, 2), lit('05')))\r\n",
							"                                    .when(col('StudyPeriod') == 'SP3', concat(substring(col('Year'), 3, 2), lit('12')))\r\n",
							"                                    .when(col('StudyPeriod') == 'SP4', concat(substring(col('Year'), 3, 2), lit('14')))\r\n",
							"                                    .when(col('StudyPeriod') == 'SP6', concat(substring(col('Year'), 3, 2), lit('25'))))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 34
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('TimeFormed', to_timestamp(col('Time'), 'dd/MM/yy, HH:mm'))\r\n",
							"logDF = logDF.withColumn('DateFormed', to_date(logDF.TimeFormed))\r\n",
							"logDF = logDF.filter(logDF.TimeFormed.isNotNull())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 35
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('ActivityResourceType', when(trim(split(col('Event context'), ':').getItem(0)) == 'Other', col('Component'))\r\n",
							"                                                .when(trim(split(col('Event context'), ':').getItem(0)) == 'Course', col('Component'))\r\n",
							"                                                .otherwise(trim(split(col('Event context'), ':').getItem(0))))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 36
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('ActivityResourceName', trim(split(col('Event context'), ':').getItem(1)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 37
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.groupBy(['ActivityResourceName', 'ActivityResourceType', 'course', 'TermCode', 'Year']).count()\\\r\n",
							"            .withColumn('SubjectArea', trim(split(col('course'), ' ').getItem(0)))\\\r\n",
							"            .withColumn('CatalogNumber', trim(split(col('course'), ' ').getItem(1)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 38
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.select('ActivityResourceName', 'ActivityResourceType', 'SubjectArea', 'CatalogNumber', 'TermCode', 'Year')\\\r\n",
							"            .exceptAll(DimResource.select('ActivityResourceName', 'ActivityResourceType', 'SubjectArea', 'CatalogNumber', 'TermCode', 'Year'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 40
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.join(DimCourse, ['SubjectArea', 'CatalogNumber', 'TermCode'], 'left')\\\r\n",
							"            .select('ActivityResourceName', 'ActivityResourceType', 'SubjectArea', 'CatalogNumber', 'TermCode', logDF.Year, \r\n",
							"                    DimCourse.CourseSK, DimCourse.CourseID, DimCourse.CourseName, DimCourse.STEMfield)\\\r\n",
							"            .withColumn('AssessmentMethod', lit(None))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 41
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimResource = DimResource.select('CourseID', 'TermCode', 'Year', 'ActivityResourceName', 'ActivityResourceType', \r\n",
							"                                'AssessmentMethod', 'CatalogNumber', 'CourseName', 'SubjectArea', 'STEMfield', 'CourseSK')\\\r\n",
							"                        .union(logDF.select('CourseID', 'TermCode', 'Year', 'ActivityResourceName', 'ActivityResourceType', \r\n",
							"                                            'AssessmentMethod', 'CatalogNumber', 'CourseName', 'SubjectArea', 'STEMfield', 'CourseSK'))\\\r\n",
							"                        .withColumn('ResourceSK', row_number().over(w))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 42
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimResource.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 43
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 44
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimResource.write.mode(\"overwrite\").saveAsTable(\"default.dimcourseresource\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 45
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimResource.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 46
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DimStudent')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"8deb048c-0fbe-455c-b21f-0878675594fa": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"1": "F",
												"2": "N",
												"3": "DBIR",
												"4": [],
												"5": "Birkenhead",
												"6": "5015",
												"7": "SA",
												"8": "Australia",
												"9": "CCXZZLZBZ",
												"10": [
													2012
												],
												"11": "19970925",
												"12": "1997-09-25 00:00:00",
												"13": "0"
											},
											{
												"1": "F",
												"2": "N",
												"3": "DBIR",
												"4": [],
												"5": "Clarence Park",
												"6": "5034",
												"7": "SA",
												"8": "Australia",
												"9": "CCXZHZGHH",
												"10": [
													2012
												],
												"11": "19980709",
												"12": "1998-07-09 00:00:00",
												"13": "1"
											},
											{
												"1": "F",
												"2": "N",
												"3": "DBIR",
												"4": [],
												"5": "Erindale",
												"6": "5066",
												"7": "SA",
												"8": "Australia",
												"9": "CCXZHCXBZ",
												"10": [
													2012
												],
												"11": "19990424",
												"12": "1999-04-24 00:00:00",
												"13": "2"
											},
											{
												"1": "F",
												"2": "N",
												"3": "DBIR",
												"4": [],
												"5": "MARDEN",
												"6": "5070",
												"7": "SA",
												"8": "Australia",
												"9": "CCXZHZXDG",
												"10": [
													2012
												],
												"11": "19990403",
												"12": "1999-04-03 00:00:00",
												"13": "3"
											},
											{
												"1": "F",
												"2": "N",
												"3": "DBIR",
												"4": [],
												"5": "Pasadena",
												"6": "5042",
												"7": "SA",
												"8": "Australia",
												"9": "CCXZHZGCA",
												"10": [
													2012
												],
												"11": "19980511",
												"12": "1998-05-11 00:00:00",
												"13": "4"
											},
											{
												"1": "F",
												"2": "N",
												"3": "DBIR",
												"4": [],
												"5": "Seacombe Heights",
												"6": "5047",
												"7": "SA",
												"8": "Australia",
												"9": "CCXZHCCGZ",
												"10": [
													2012
												],
												"11": "19981112",
												"12": "1998-11-12 00:00:00",
												"13": "5"
											},
											{
												"1": "F",
												"2": "N",
												"3": "LBAN",
												"4": [],
												"5": "North Adelaide",
												"6": "5006",
												"7": "SA",
												"8": "Australia",
												"9": "CCXZDZCBA",
												"10": [
													2105
												],
												"11": "19960828",
												"12": "1996-08-28 00:00:00",
												"13": "6"
											},
											{
												"1": "F",
												"2": "N",
												"3": "SOUAU",
												"4": [],
												"5": "MORAYFIELD",
												"6": "4506",
												"7": "QLD",
												"8": "Australia",
												"9": "CCXZWWDDX",
												"10": [
													2105
												],
												"11": "19840830",
												"12": "1984-08-30 00:00:00",
												"13": "7"
											},
											{
												"1": "F",
												"2": "N",
												"3": "SOUAU",
												"4": [],
												"5": "REDLYNCH",
												"6": "4870",
												"7": "QLD",
												"8": "Australia",
												"9": "CCXCGCZHX",
												"10": [
													2105
												],
												"11": "19860211",
												"12": "1986-02-11 00:00:00",
												"13": "8"
											},
											{
												"1": "F",
												"2": "N",
												"3": "SOUAU",
												"4": [],
												"5": "ST KILDA",
												"6": "3182",
												"7": "VIC",
												"8": "Australia",
												"9": "CCXZDWDDD",
												"10": [
													2105
												],
												"11": "19961001",
												"12": "1996-10-01 00:00:00",
												"13": "9"
											},
											{
												"1": "F",
												"2": "N",
												"3": "XBBE",
												"4": [],
												"5": "ANNANDALE",
												"6": "4814",
												"7": "QLD",
												"8": "Australia",
												"9": "CCXHXHCBD",
												"10": [
													1925
												],
												"11": "19850105",
												"12": "1985-01-05 00:00:00",
												"13": "10"
											},
											{
												"1": "F",
												"2": "N",
												"3": "XBBE",
												"4": [],
												"5": "BELLEVUE HILL",
												"6": "2023",
												"7": "NSW",
												"8": "Australia",
												"9": "CCXHXZALX",
												"10": [
													1925
												],
												"11": "19970617",
												"12": "1997-06-17 00:00:00",
												"13": "11"
											},
											{
												"1": "F",
												"2": "N",
												"3": "XBBE",
												"4": [],
												"5": "BROADVIEW",
												"6": "5083",
												"7": "SA",
												"8": "Australia",
												"9": "CCXCZGWGC",
												"10": [
													1925
												],
												"11": "19940129",
												"12": "1994-01-29 00:00:00",
												"13": "12"
											},
											{
												"1": "F",
												"2": "N",
												"3": "XBBE",
												"4": [],
												"5": "CARLTON",
												"6": "3053",
												"7": "VIC",
												"8": "Australia",
												"9": "CCXHXZHWH",
												"10": [
													1925
												],
												"11": "19780517",
												"12": "1978-05-17 00:00:00",
												"13": "13"
											},
											{
												"1": "F",
												"2": "N",
												"3": "XBBE",
												"4": [],
												"5": "COBURG NORTH",
												"6": "3058",
												"7": "VIC",
												"8": "Australia",
												"9": "CCXZGCXXD",
												"10": [
													1925
												],
												"11": "19900915",
												"12": "1990-09-15 00:00:00",
												"13": "14"
											},
											{
												"1": "F",
												"2": "N",
												"3": "XBBE",
												"4": [],
												"5": "COOGEE",
												"6": "2034",
												"7": "NSW",
												"8": "Australia",
												"9": "CCXZAZZGL",
												"10": [
													2012
												],
												"11": "19871018",
												"12": "1987-10-18 00:00:00",
												"13": "15"
											},
											{
												"1": "F",
												"2": "N",
												"3": "XBBE",
												"4": [],
												"5": "CRANBOURNE NORTH",
												"6": "3977",
												"7": "VIC",
												"8": "Australia",
												"9": "CCXZAZWGC",
												"10": [
													1925
												],
												"11": "19780423",
												"12": "1978-04-23 00:00:00",
												"13": "16"
											},
											{
												"1": "F",
												"2": "N",
												"3": "XBBE",
												"4": [],
												"5": "Copacabana",
												"6": "2251",
												"7": "NSW",
												"8": "Australia",
												"9": "CCXHXXXLD",
												"10": [
													1925
												],
												"11": "19861111",
												"12": "1986-11-11 00:00:00",
												"13": "17"
											},
											{
												"1": "F",
												"2": "N",
												"3": "XBBE",
												"4": [],
												"5": "Cranebrook",
												"6": "2749",
												"7": "NSW",
												"8": "Australia",
												"9": "CCXHCLCGX",
												"10": [
													2012
												],
												"11": "19850906",
												"12": "1985-09-06 00:00:00",
												"13": "18"
											},
											{
												"1": "F",
												"2": "N",
												"3": "XBBE",
												"4": [],
												"5": "FELIXSTOW",
												"6": "5070",
												"7": "SA",
												"8": "Australia",
												"9": "CCXHCHXAL",
												"10": [
													2012
												],
												"11": "19771211",
												"12": "1977-12-11 00:00:00",
												"13": "19"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "AcademicLoadDesc",
												"type": "string"
											},
											{
												"key": "1",
												"name": "GenderCode",
												"type": "string"
											},
											{
												"key": "2",
												"name": "InternationalStudentFlag",
												"type": "string"
											},
											{
												"key": "3",
												"name": "ProgramCode",
												"type": "string"
											},
											{
												"key": "4",
												"name": "ProgramDescs",
												"type": "ArrayType(StringType,true)"
											},
											{
												"key": "5",
												"name": "StudentAddressCityCode",
												"type": "string"
											},
											{
												"key": "6",
												"name": "StudentAddressPostcode",
												"type": "int"
											},
											{
												"key": "7",
												"name": "StudentAddressStateCode",
												"type": "string"
											},
											{
												"key": "8",
												"name": "StudentCountryDesc",
												"type": "string"
											},
											{
												"key": "9",
												"name": "StudentID",
												"type": "string"
											},
											{
												"key": "10",
												"name": "TermCodes",
												"type": "ArrayType(IntegerType,true)"
											},
											{
												"key": "11",
												"name": "BirthDateSK",
												"type": "int"
											},
											{
												"key": "12",
												"name": "BirthDate",
												"type": "timestamp"
											},
											{
												"key": "13",
												"name": "StudentSK",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"6"
											],
											"isStacked": false
										}
									}
								}
							},
							"2f2da85f-ffcf-4fc3-8270-8ffcb62d784a": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "",
												"1": "",
												"2": "290"
											},
											{
												"0": "4",
												"1": "20",
												"2": "1437"
											},
											{
												"0": "4",
												"1": "19",
												"2": "702"
											},
											{
												"0": "1",
												"1": "19",
												"2": "478"
											},
											{
												"0": "6",
												"1": "18",
												"2": "16"
											},
											{
												"0": "1",
												"1": "20",
												"2": "936"
											},
											{
												"0": "6",
												"1": "19",
												"2": "655"
											},
											{
												"0": "3",
												"1": "20",
												"2": "1084"
											},
											{
												"0": "3",
												"1": "21",
												"2": "1730"
											},
											{
												"0": "6",
												"1": "20",
												"2": "1097"
											},
											{
												"0": "4",
												"1": "21",
												"2": "76"
											},
											{
												"0": "3",
												"1": "19",
												"2": "528"
											},
											{
												"0": "1",
												"1": "21",
												"2": "1818"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "StudyPeriod",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Year",
												"type": "string"
											},
											{
												"key": "2",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"2"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"StudentDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/newstudentlistv2.json', format='json')\r\n",
							"DateDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/local/QID1109_20210913_202220_1.parq', format='parquet')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *\r\n",
							"import pandas as pd"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"def mergeState(states):\r\n",
							"    stateDF = pd.DataFrame(data=states, columns=columnNames.value)\r\n",
							"\r\n",
							"    stateDF = stateDF.sort_values(by='TermCode').fillna(method='ffill').fillna(method='bfill').reset_index(drop=True)\r\n",
							"    stateDF = stateDF.rename(columns={'TermCode': 'EffectiveTerm'})\r\n",
							"    stateDF['ExpiryTerm'] = 0\r\n",
							"    stateDF['keep'] = True\r\n",
							"\r\n",
							"    index = 0\r\n",
							"    sindex = 1\r\n",
							"    columns = ['AcademicLoadDesc', 'GenderCode', 'InternationalStudentFlag', 'ProgramCode', 'StudentAddressCityCode',\r\n",
							"                'StudentAddressStateCode', 'StudentCountryDesc', 'BirthDateSK']\r\n",
							"    \r\n",
							"    while sindex < stateDF.shape[0]:\r\n",
							"        if stateDF.loc[index, columns].equals(stateDF.loc[sindex, columns]):\r\n",
							"            stateDF.loc[sindex, 'keep'] = False\r\n",
							"        else:\r\n",
							"            stateDF.loc[index, 'ExpiryTerm'] = stateDF.loc[sindex, 'EffectiveTerm']\r\n",
							"            index = sindex\r\n",
							"            \r\n",
							"        sindex = sindex + 1\r\n",
							"    \r\n",
							"    stateDF.loc[stateDF[stateDF['keep']].index[-1], 'ExpiryTerm'] = 9999\r\n",
							"    return stateDF[stateDF['keep']].to_dict(orient='record')\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 35
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.filter(StudentDF.StudentID.isNotNull())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Fix degree code"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('ProgramCode', when(StudentDF.ProgramDesc == 'Associate Degree in Engineering', 'XTEN')\r\n",
							"                                                .when(StudentDF.ProgramDesc == 'Bachelor of Business (Management)', 'XBBG')\r\n",
							"                                                .when(StudentDF.ProgramDesc == 'Bachelor of Commerce (Accounting)', 'XBCA')\r\n",
							"                                                .when(StudentDF.ProgramDesc == 'Bachelor of Information Technology', 'XBIT')\r\n",
							"                                                .when(StudentDF.ProgramDesc == 'Bachelor of Information Technology and Data Analytics', 'XBCP')\r\n",
							"                                                .when(StudentDF.ProgramDesc == 'Bachelor of Psychology', 'XBPY')\r\n",
							"                                                .when(StudentDF.ProgramDesc == 'Bachelor of Social Work', 'MBSW')\r\n",
							"                                                .when(StudentDF.ProgramDesc == 'Bachelor of Software Engineering (Honours)', 'LHSG')\r\n",
							"                                                .when(StudentDF.ProgramDesc == 'OUA Short Courses UGRD', 'OUA Short Courses UGRD')\r\n",
							"                                                .otherwise(StudentDF.ProgramCode))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Country Australia"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('StudentCountryDesc', when(isnull(StudentDF.StudentCountryDesc) & (StudentDF.InternationalStudentFlag == 'N'), 'Australia')\r\n",
							"                                                        .when((StudentDF.StudentCountryDesc == '') & (StudentDF.InternationalStudentFlag == 'N'), 'Australia')\r\n",
							"                                                        .when((StudentDF.StudentCountryDesc == 'NaN') & (StudentDF.InternationalStudentFlag == 'N'), 'Australia')\r\n",
							"                                                        .otherwise(StudentDF.StudentCountryDesc))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Change postcode to int"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF =StudentDF.withColumn('StudentAddressPostcode', StudentDF.StudentAddressPostcode.cast(IntegerType()))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Get study period, termcode, year"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(StudentDF.withColumn('StudyPeriod', regexp_extract(StudentDF.termYear, r'SP(\\d?)', 1))\r\n",
							"                .withColumn('Year', when(StudentDF.termYear == 'UPDATED_INFT 1024 SP4 2020 NO Assessment Submission Data', 20)\r\n",
							"                                    .otherwise(regexp_extract(element_at(split(StudentDF.termYear, '[_ ]'), -1), r'20(\\d+)', 1)))\r\n",
							"                .groupBy(['StudyPeriod', 'Year']).count())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('StudyPeriod', regexp_extract(StudentDF.termYear, r'SP(\\d?)', 1))\\\r\n",
							"                        .withColumn('Year', when(StudentDF.termYear == 'UPDATED_INFT 1024 SP4 2020 NO Assessment Submission Data', 20)\r\n",
							"                                            .otherwise(regexp_extract(element_at(split(StudentDF.termYear, '[_ ]'), -1), r'20(\\d+)', 1)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('TermCode', when(StudentDF.StudyPeriod == '1', concat(StudentDF.Year, lit('05')).cast(IntegerType()))\r\n",
							"                                            .when(StudentDF.StudyPeriod == '3', concat(StudentDF.Year, lit('12')).cast(IntegerType()))\r\n",
							"                                            .when(StudentDF.StudyPeriod == '4', concat(StudentDF.Year, lit('14')).cast(IntegerType()))\r\n",
							"                                            .when(StudentDF.StudyPeriod == '6', concat(StudentDF.Year, lit('25')).cast(IntegerType()))\r\n",
							"                                            .otherwise(None))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Form Birth Date"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('BirthDate', to_date(StudentDF.StudentDOB, \"dd/MM/yy\"))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Remove duplicates"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"StudentDF = StudentDF.groupBy(['AcademicLoadDesc', 'GenderCode', 'InternationalStudentFlag', \r\n",
							"                                'ProgramCode', 'StudentAddressCityCode', 'StudentAddressPostcode', 'StudentAddressStateCode', \r\n",
							"                                'StudentCountryDesc', 'BirthDate', 'StudentID'])\\\r\n",
							"                        .agg(collect_set('TermCode').alias('TermCodes'), collect_set('ProgramDesc').alias('ProgramDescs'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Lookup for dimdate SK"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.join(DateDF, StudentDF.BirthDate == DateDF.FullDateAlternateKey, 'left')\\\r\n",
							"                    .select(StudentDF.AcademicLoadDesc, StudentDF.GenderCode, StudentDF.InternationalStudentFlag, StudentDF.ProgramCode, \r\n",
							"                    StudentDF.ProgramDescs, StudentDF.StudentAddressCityCode, StudentDF.StudentAddressPostcode, StudentDF.StudentAddressStateCode, \r\n",
							"                    StudentDF.StudentCountryDesc, StudentDF.StudentID, StudentDF.TermCodes, DateDF.DateKey.alias('BirthDateSK'), \r\n",
							"                    DateDF.FullDateAlternateKey.alias('BirthDate'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(StudentDF.limit(20))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.select('AcademicLoadDesc', 'GenderCode', 'InternationalStudentFlag', 'ProgramCode', 'ProgramDescs', \r\n",
							"                            'StudentAddressCityCode', 'StudentAddressPostcode', 'StudentAddressStateCode', 'StudentCountryDesc',\r\n",
							"                            'StudentID', explode(col('TermCodes')).alias('TermCode'), 'BirthDateSK')\r\n",
							"StudentDF = StudentDF.withColumn('StudentAddressPostcode', when(isnull(StudentDF.StudentAddressPostcode), \r\n",
							"                                                                        StudentDF.StudentAddressCityCode.cast(IntegerType()))\r\n",
							"                                                            .otherwise(StudentDF.StudentAddressPostcode))\r\n",
							"StudentDF = StudentDF.withColumn('ProgramDesc', StudentDF.ProgramDescs.__getitem__(0).cast(StringType()))\r\n",
							"StudentDF = StudentDF.withColumn('AddressDesc', concat_ws(',', StudentDF.StudentAddressCityCode, \r\n",
							"                                                            StudentDF.StudentAddressStateCode, StudentDF.StudentAddressPostcode))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.groupBy(['StudentID', 'TermCode']).\\\r\n",
							"                        agg(collect_set(StudentDF.AcademicLoadDesc).alias('AcademicLoadDesc'), \r\n",
							"                        collect_set(StudentDF.GenderCode).__getitem__(0).cast(StringType()).alias('GenderCode'),\r\n",
							"                        collect_set(StudentDF.InternationalStudentFlag).__getitem__(0).cast(StringType()).alias('InternationalStudentFlag'), \r\n",
							"                        collect_set(StudentDF.ProgramCode).alias('ProgramCode'),\r\n",
							"                        collect_set(StudentDF.ProgramDesc).alias('ProgramDesc'), \r\n",
							"                        collect_set(StudentDF.StudentAddressCityCode).alias('StudentAddressCityCode'),\r\n",
							"                        collect_set(StudentDF.StudentAddressPostcode).alias('StudentAddressPostcode'),\r\n",
							"                        collect_set(StudentDF.StudentAddressStateCode).alias('StudentAddressStateCode'), \r\n",
							"                        collect_set(StudentDF.AddressDesc).alias('AddressDesc'),\r\n",
							"                        collect_set(StudentDF.StudentCountryDesc).alias('StudentCountryDesc'),\r\n",
							"                        collect_set(StudentDF.BirthDateSK).__getitem__(0).cast(IntegerType()).alias('BirthDateSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('AcademicLoadDesc', when(size(StudentDF.AcademicLoadDesc) == 0, lit(None))\r\n",
							"                                                    .otherwise(StudentDF.AcademicLoadDesc))\r\n",
							"StudentDF = StudentDF.withColumn('ProgramCode', when(size(StudentDF.ProgramCode) == 0, lit(None))\r\n",
							"                                                    .otherwise(StudentDF.ProgramCode))\r\n",
							"StudentDF = StudentDF.withColumn('StudentAddressStateCode', when(size(StudentDF.StudentAddressStateCode) == 0, lit(None))\r\n",
							"                                                    .otherwise(StudentDF.StudentAddressStateCode))\r\n",
							"StudentDF = StudentDF.withColumn('StudentCountryDesc', when(size(StudentDF.StudentCountryDesc) == 0, lit(None))\r\n",
							"                                                    .otherwise(StudentDF.StudentCountryDesc))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"columnNames = sc.broadcast(StudentDF.columns)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 47
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.schema"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 48
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"newSchema = StructType([StructField('StudentID', StringType(), True),\r\n",
							"                        StructField('EffectiveTerm', IntegerType(), True),\r\n",
							"                        StructField('AcademicLoadDesc', ArrayType(StringType(), True), True),\r\n",
							"                        StructField('GenderCode', StringType(), True),\r\n",
							"                        StructField('InternationalStudentFlag', StringType(), True),\r\n",
							"                        StructField('ProgramCode', ArrayType(StringType(), True), True),\r\n",
							"                        StructField('ProgramDesc', ArrayType(StringType(), True), True),\r\n",
							"                        StructField('StudentAddressCityCode', ArrayType(StringType(), True), True),\r\n",
							"                        StructField('StudentAddressPostcode', ArrayType(IntegerType(), True), True),\r\n",
							"                        StructField('StudentAddressStateCode', ArrayType(StringType(), True), True),\r\n",
							"                        StructField('AddressDesc', ArrayType(StringType(), True), True),\r\n",
							"                        StructField('StudentCountryDesc', ArrayType(StringType(), True), True),\r\n",
							"                        StructField('BirthDateSK', IntegerType(), True),\r\n",
							"                        StructField('ExpiryTerm', IntegerType(), True),\r\n",
							"                        StructField('keep', BooleanType(), True)])"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"StudentDF = spark.createDataFrame(StudentDF.rdd.map(lambda r: (r['StudentID'], r)).groupByKey().mapValues(mergeState).flatMap(lambda x: x[1]), schema=newSchema)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 37
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('StudentSK', monotonically_increasing_id()).drop(col('keep'))\r\n",
							"StudentDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.DimStudent\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 38
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FactAssignmentActivity')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"b82763a0-75ed-4a8c-bc4f-70b5db54a4d9": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "2012",
												"1": "1239443"
											},
											{
												"0": "2014",
												"1": "1503655"
											},
											{
												"0": "2005",
												"1": "1040822"
											},
											{
												"0": "1905",
												"1": "581961"
											},
											{
												"0": "2105",
												"1": "2029977"
											},
											{
												"0": "2025",
												"1": "1311243"
											},
											{
												"0": "1925",
												"1": "818665"
											},
											{
												"0": "1914",
												"1": "751774"
											},
											{
												"0": "1912",
												"1": "675906"
											},
											{
												"0": "2112",
												"1": "1853280"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "TermCode",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"4d7efbbe-f406-4cc7-98bc-3c701c42efc8": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_CIVE 2014 SP42019 20210921-1137.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_BUIL 4030 SP12020_20210921-2043.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_INFS 2040 SP32020_20210920-1118.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP42019_20210921-1438.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_BUIL 4030 SP12020_20210921-2043.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_INFS 2040 SP32019_20210920-1119.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLogBUIL 2027_SP3 2020.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_INFS 1024 sp12020_20210920-1554.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_BUIL 3022 sp62019_20210920-1058.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP42019_20210921-1438.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_INFS 1024 sp12020_20210920-1554.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_INFS 2040 SP32019_20210920-1119.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_INFS 3079 SP32021_20210921-1329.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_MENG 1014 SP62020_20210925-1116.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP42019_20210921-1438.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_ENGG 1007 SP32021_20210921-1152.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP42019_20210921-1438.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_INFS 3079 SP32021_20210921-1329.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_INFS 3079 SP32021_20210921-1329.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLogBUIL 2027_SP3 2020.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP42019_20210921-1438.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLogBUIL 2027_SP3 2020.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP42019_20210921-1438.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_BUIL 3022 sp62019_20210920-1058.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_INFS 2039 SP42020_20210921-1323.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_MENG 1014 SP32021_20210921-1150.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP42019_20210921-1438.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP42019_20210921-1438.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_INFS 1024 sp12020_20210920-1554.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_INFS 2039 SP42020_20210921-1323.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_BUIL 3022 sp62019_20210920-1058.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_BUIL 4030 SP12019_20210921-2045.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course module updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP42019_20210921-1438.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_INFS 3079 SP32021_20210921-1329.csv",
												"1": "Course module created"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1043 SP32021_20210921-1220.csv",
												"1": "Course activity completion updated"
											},
											{
												"0": "NEWLoglogs_COMP 1044 SP12021_20210921-1445.csv",
												"1": "Course activity completion updated"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "filename",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Time",
												"type": "string"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "count",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							},
							"a9189ff5-350c-4552-8a98-1d9873936a4e": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "UO Building Estimating",
												"1": "BUIL 1024",
												"2": "1914",
												"3": "224"
											},
											{
												"0": "Part E",
												"1": "BUIL 1024",
												"2": "1914",
												"3": "260"
											},
											{
												"0": "Part C",
												"1": "BUIL 1024",
												"2": "1914",
												"3": "465"
											},
											{
												"0": "Part A",
												"1": "BUIL 1024",
												"2": "1914",
												"3": "43"
											},
											{
												"0": "Part B",
												"1": "BUIL 1024",
												"2": "1914",
												"3": "378"
											},
											{
												"0": "UO Quantity Surveying Practice 1",
												"1": "BUIL 1028",
												"2": "1912",
												"3": "894"
											},
											{
												"0": "HURDLE Assessment",
												"1": "BUIL 1028",
												"2": "1912",
												"3": "2582"
											},
											{
												"0": "Submit Assessment 2",
												"1": "BUIL 1028",
												"2": "1912",
												"3": "4286"
											},
											{
												"0": "Submit Assessment 1",
												"1": "BUIL 1028",
												"2": "2012",
												"3": "6149"
											},
											{
												"0": "Practice with Building P on Week 9",
												"1": "BUIL 1028",
												"2": "2012",
												"3": "86"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "AssessmentName",
												"type": "string"
											},
											{
												"key": "1",
												"name": "course",
												"type": "string"
											},
											{
												"key": "2",
												"name": "TermCode",
												"type": "string"
											},
											{
												"key": "3",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"3"
											],
											"isStacked": false
										}
									}
								}
							},
							"801e3c0f-8169-447c-988e-6a49100e6d34": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Label",
												"1": "129663"
											},
											{
												"0": "Course",
												"1": "6433428"
											},
											{
												"0": "Interactive Content",
												"1": "7202"
											},
											{
												"0": "SCORM package",
												"1": "399"
											},
											{
												"0": "Glossary",
												"1": "52"
											},
											{
												"0": "Chat",
												"1": "29"
											},
											{
												"0": "URL",
												"1": "6524"
											},
											{
												"0": "Scheduler",
												"1": "238"
											},
											{
												"0": "Choice",
												"1": "890"
											},
											{
												"0": "Book",
												"1": "337"
											},
											{
												"0": "Quiz",
												"1": "18880"
											},
											{
												"0": "Workshop",
												"1": "800"
											},
											{
												"0": "Other",
												"1": "10857"
											},
											{
												"0": "Wiki",
												"1": "288"
											},
											{
												"0": "File",
												"1": "124718"
											},
											{
												"0": "External tool",
												"1": "153"
											},
											{
												"0": "Page",
												"1": "13618"
											},
											{
												"0": "Dialogue",
												"1": "131"
											},
											{
												"0": "Group self-selection",
												"1": "86"
											},
											{
												"0": "Folder",
												"1": "2858"
											},
											{
												"0": "Lesson",
												"1": "229"
											},
											{
												"0": "UniSA Learning Progress",
												"1": "9790"
											},
											{
												"0": "Forum",
												"1": "12741"
											},
											{
												"0": "Zoom meeting",
												"1": "3053"
											},
											{
												"0": "Database",
												"1": "1806"
											},
											{
												"0": "Feedback",
												"1": "3380"
											},
											{
												"0": "UniSA Media Library",
												"1": "3"
											},
											{
												"0": "Assignment",
												"1": "33288"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "split(Event context, :)[0]",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"18c7c365-b3b9-4ddf-aa80-261554f10632": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Overview report",
												"1": "317"
											},
											{
												"0": "Course participation",
												"1": "1017"
											},
											{
												"0": "Forum summary report",
												"1": "2"
											},
											{
												"0": "Grade history",
												"1": "8"
											},
											{
												"0": "Book printing",
												"1": "13"
											},
											{
												"0": "SCORM package",
												"1": "1316"
											},
											{
												"0": "Activity report",
												"1": "247"
											},
											{
												"0": "Single view",
												"1": "1794"
											},
											{
												"0": "Glossary",
												"1": "4424"
											},
											{
												"0": "Chat",
												"1": "3600"
											},
											{
												"0": "URL",
												"1": "74507"
											},
											{
												"0": "Submission comments",
												"1": "1558"
											},
											{
												"0": "Scheduler",
												"1": "27708"
											},
											{
												"0": "Live logs",
												"1": "176"
											},
											{
												"0": "Extensions",
												"1": "88689"
											},
											{
												"0": "Online text submissions",
												"1": "7128"
											},
											{
												"0": "H5P",
												"1": "544099"
											},
											{
												"0": "Choice",
												"1": "12049"
											},
											{
												"0": "Lightbox Gallery",
												"1": "33"
											},
											{
												"0": "Book",
												"1": "11454"
											},
											{
												"0": "Quiz",
												"1": "1546490"
											},
											{
												"0": "Workshop",
												"1": "15294"
											},
											{
												"0": "Mahara portfolio",
												"1": "79"
											},
											{
												"0": "User report",
												"1": "152315"
											},
											{
												"0": "Wiki",
												"1": "6842"
											},
											{
												"0": "File",
												"1": "796162"
											},
											{
												"0": "Excel spreadsheet",
												"1": "255"
											},
											{
												"0": "External tool",
												"1": "2920"
											},
											{
												"0": "UniSA Media Library Video Assignment",
												"1": "142"
											},
											{
												"0": "Page",
												"1": "131378"
											},
											{
												"0": "Logs",
												"1": "3920"
											},
											{
												"0": "OpenDocument spreadsheet",
												"1": "545"
											},
											{
												"0": "Recycle bin",
												"1": "9296"
											},
											{
												"0": "File submissions",
												"1": "83541"
											},
											{
												"0": "Plain text file",
												"1": "7"
											},
											{
												"0": "Dialogue",
												"1": "13557"
											},
											{
												"0": "Group self-selection",
												"1": "6326"
											},
											{
												"0": "Folder",
												"1": "106267"
											},
											{
												"0": "System",
												"1": "6815441"
											},
											{
												"0": "Lesson",
												"1": "76908"
											},
											{
												"0": "Forum",
												"1": "2673005"
											},
											{
												"0": "Zoom meeting",
												"1": "38520"
											},
											{
												"0": "Database",
												"1": "40802"
											},
											{
												"0": "Feedback",
												"1": "9215"
											},
											{
												"0": "UniSA Media Library",
												"1": "25"
											},
											{
												"0": "Survey",
												"1": "26"
											},
											{
												"0": "Assignment",
												"1": "1476955"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "612"
											},
											{
												"0": "Grader report",
												"1": "15074"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Component",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"c15199b9-580e-4674-8cc9-c74ef9ec69a9": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Assessment 1 - Part B: Written report & presentation (45%; Due Week 5)",
												"1": "CIVE 2016",
												"2": "2014"
											},
											{
												"0": "Submit Assessment 2: Stage 1 - Lab report (10%; Due Week 7)",
												"1": "CIVE 2016",
												"2": "2014"
											},
											{
												"0": "Submit Assessment 2: Stages 2,3 & 4 (30%; Due Week 10)",
												"1": "CIVE 2016",
												"2": "2014"
											},
											{
												"0": "Submit Assessment 1 - Part A: Design report & presentation (45%; Due Week 5)",
												"1": "CIVE 2016",
												"2": "1905"
											},
											{
												"0": "Submit Assessment 2: Stages 2,3 & 4 (30%; Due Week 10)",
												"1": "CIVE 2016",
												"2": "1905"
											},
											{
												"0": "Submit Assessment 2: Stage 1 - Lab report (10%; Due Week 7)",
												"1": "CIVE 2016",
												"2": "1905"
											},
											{
												"0": "Assessment 1 - Part B: Written report & presentation (45%; Due Week 5)",
												"1": "CIVE 2016",
												"2": "2105"
											},
											{
												"0": "Submit Assessment 2: Stage 1 - Lab report (10%; Due Week 7)",
												"1": "CIVE 2016",
												"2": "2105"
											},
											{
												"0": "Submit Assessment 2: Stages 2,3 & 4 (30%; Due Week 10)",
												"1": "CIVE 2016",
												"2": "2105"
											},
											{
												"0": "Assessment 1 - Part B: Written report & presentation (45%; Due Week 5)",
												"1": "CIVE 2016",
												"2": "1914"
											},
											{
												"0": "Submit Assessment 2: Stage 1 - Lab report (10%; Due Week 7)",
												"1": "CIVE 2016",
												"2": "1914"
											},
											{
												"0": "Submit Assessment 2: Stages 2,3 & 4 (30%; Due Week 10)",
												"1": "CIVE 2016",
												"2": "1914"
											},
											{
												"0": "Part E: Tender Pitch Video (6%; Week 10)",
												"1": "BUIL 1024",
												"2": "1914"
											},
											{
												"0": "Part A: My role as a building estimator (18%; Week 3)",
												"1": "BUIL 1024",
												"2": "1914"
											},
											{
												"0": "Part B: Trade Summary 1 (6%; Week 5)",
												"1": "BUIL 1024",
												"2": "1914"
											},
											{
												"0": "Part C: Trade Summary 2 (18%) and Part D: Tender Schedule and Cover Letter (12%) (Week 9)",
												"1": "BUIL 1024",
												"2": "1914"
											},
											{
												"0": "Submit Assessment 2: Report - Part A - Reading Journal and Part B - Analytical Report (50%)",
												"1": "BUIL 1027",
												"2": "2105"
											},
											{
												"0": "Submit Assessment 2: Report - Part A - Reading Journal and Part B - Analytical Report (50%)",
												"1": "BUIL 1027",
												"2": "2014"
											},
											{
												"0": "Submit Assessment 2: Report - Part A - Reading Journal Extract as Appendix and Part B - Analytical Report (50% Due Week 9)",
												"1": "BUIL 1027",
												"2": "2005"
											},
											{
												"0": "Submit Assessment 2: Report - Analytical Report, with Reading Journal Extract as Appendix (50% Due Week 9)",
												"1": "BUIL 1027",
												"2": "1905"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "AssessmentName",
												"type": "string"
											},
											{
												"key": "1",
												"name": "concat_ws( , SubjectArea, CatalogNumber)",
												"type": "string"
											},
											{
												"key": "2",
												"name": "TermCode",
												"type": "string"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "count",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							},
							"3cf8516f-4bac-41ad-bde4-02230258dbdb": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Submit Assessment 2",
												"1": "8119"
											},
											{
												"1": "114"
											},
											{
												"0": "SUBMIT Supplementary Assessment UO Structures 2",
												"1": "225"
											},
											{
												"0": "Assessment 2 Details",
												"1": "1837"
											},
											{
												"0": "UO Structures 2",
												"1": "1869"
											},
											{
												"0": "Assessment 1 Details",
												"1": "1540"
											},
											{
												"0": "Submit Assessment 1 - Part A",
												"1": "654"
											},
											{
												"0": "Assessment 1 - Part B",
												"1": "6234"
											},
											{
												"0": "Ass 1 Details",
												"1": "402"
											},
											{
												"0": "test",
												"1": "6"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "AssessmentName",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"a02101ac-8534-41f4-944a-7201386d8d3f": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Assignment",
												"1": "The user with id '17065' has viewed the submission status page for the assignment with course module id '140148'.",
												"2": "Assignment: Submit Assessment 1: Part A (10%; Due Week 2)",
												"3": "The status of the submission has been viewed.",
												"4": "CCXZBWGDG.X",
												"5": "13/09/21, 19:09",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-09-13 19:09:00",
												"12": "2021-09-13",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '17065' viewed the feedback for the user with id '17065' for the assignment with course module id '140148'.",
												"2": "Assignment: Submit Assessment 1: Part A (10%; Due Week 2)",
												"3": "Feedback viewed",
												"4": "CCXZBWGDG.X",
												"5": "13/09/21, 19:09",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-09-13 19:09:00",
												"12": "2021-09-13",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '17065' viewed the 'assign' activity with course module id '140148'.",
												"2": "Assignment: Submit Assessment 1: Part A (10%; Due Week 2)",
												"3": "Course module viewed",
												"4": "CCXZBWGDG.X",
												"5": "13/09/21, 19:09",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-09-13 19:09:00",
												"12": "2021-09-13",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' has viewed the submission status page for the assignment with course module id '140152'.",
												"2": "Assignment: Submit Assessment 1: Part C (25%; Due Week 10)",
												"3": "The status of the submission has been viewed.",
												"4": "CCXZGZCGB.X",
												"5": "16/05/21, 00:15",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-16 00:15:00",
												"12": "2021-05-16",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the feedback for the user with id '24013' for the assignment with course module id '140152'.",
												"2": "Assignment: Submit Assessment 1: Part C (25%; Due Week 10)",
												"3": "Feedback viewed",
												"4": "CCXZGZCGB.X",
												"5": "16/05/21, 00:15",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-16 00:15:00",
												"12": "2021-05-16",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the 'assign' activity with course module id '140152'.",
												"2": "Assignment: Submit Assessment 1: Part C (25%; Due Week 10)",
												"3": "Course module viewed",
												"4": "CCXZGZCGB.X",
												"5": "16/05/21, 00:15",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-16 00:15:00",
												"12": "2021-05-16",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' has viewed the submission status page for the assignment with course module id '140150'.",
												"2": "Assignment: Submit Assessment 1: Part B (25%; Due Week 7)",
												"3": "The status of the submission has been viewed.",
												"4": "CCXZGZCGB.X",
												"5": "16/05/21, 00:14",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-16 00:14:00",
												"12": "2021-05-16",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the feedback for the user with id '24013' for the assignment with course module id '140150'.",
												"2": "Assignment: Submit Assessment 1: Part B (25%; Due Week 7)",
												"3": "Feedback viewed",
												"4": "CCXZGZCGB.X",
												"5": "16/05/21, 00:14",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-16 00:14:00",
												"12": "2021-05-16",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the 'assign' activity with course module id '140150'.",
												"2": "Assignment: Submit Assessment 1: Part B (25%; Due Week 7)",
												"3": "Course module viewed",
												"4": "CCXZGZCGB.X",
												"5": "16/05/21, 00:14",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-16 00:14:00",
												"12": "2021-05-16",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' has viewed the submission status page for the assignment with course module id '140150'.",
												"2": "Assignment: Submit Assessment 1: Part B (25%; Due Week 7)",
												"3": "The status of the submission has been viewed.",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:44",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:44:00",
												"12": "2021-05-14",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the feedback for the user with id '24013' for the assignment with course module id '140150'.",
												"2": "Assignment: Submit Assessment 1: Part B (25%; Due Week 7)",
												"3": "Feedback viewed",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:44",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:44:00",
												"12": "2021-05-14",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the 'assign' activity with course module id '140150'.",
												"2": "Assignment: Submit Assessment 1: Part B (25%; Due Week 7)",
												"3": "Course module viewed",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:44",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:44:00",
												"12": "2021-05-14",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' has viewed the submission status page for the assignment with course module id '140152'.",
												"2": "Assignment: Submit Assessment 1: Part C (25%; Due Week 10)",
												"3": "The status of the submission has been viewed.",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:42",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:42:00",
												"12": "2021-05-14",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the feedback for the user with id '24013' for the assignment with course module id '140152'.",
												"2": "Assignment: Submit Assessment 1: Part C (25%; Due Week 10)",
												"3": "Feedback viewed",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:42",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:42:00",
												"12": "2021-05-14",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the 'assign' activity with course module id '140152'.",
												"2": "Assignment: Submit Assessment 1: Part C (25%; Due Week 10)",
												"3": "Course module viewed",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:42",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:42:00",
												"12": "2021-05-14",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' has viewed the submission status page for the assignment with course module id '140400'.",
												"2": "Assignment: Practice with Building P on Week 9",
												"3": "The status of the submission has been viewed.",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:38",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:38:00",
												"12": "2021-05-14",
												"13": "Practice with Building P on Week 9"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the 'assign' activity with course module id '140400'.",
												"2": "Assignment: Practice with Building P on Week 9",
												"3": "Course module viewed",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:38",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:38:00",
												"12": "2021-05-14",
												"13": "Practice with Building P on Week 9"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' has viewed the submission status page for the assignment with course module id '140152'.",
												"2": "Assignment: Submit Assessment 1: Part C (25%; Due Week 10)",
												"3": "The status of the submission has been viewed.",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:38",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:38:00",
												"12": "2021-05-14",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the feedback for the user with id '24013' for the assignment with course module id '140152'.",
												"2": "Assignment: Submit Assessment 1: Part C (25%; Due Week 10)",
												"3": "Feedback viewed",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:38",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:38:00",
												"12": "2021-05-14",
												"13": "Submit Assessment 1"
											},
											{
												"0": "Assignment",
												"1": "The user with id '24013' viewed the 'assign' activity with course module id '140152'.",
												"2": "Assignment: Submit Assessment 1: Part C (25%; Due Week 10)",
												"3": "Course module viewed",
												"4": "CCXZGZCGB.X",
												"5": "14/05/21, 15:38",
												"6": "NEWLogBUIL 1028 SP3 2020.csv",
												"7": "BUIL 1028",
												"8": "SP3",
												"9": "2020",
												"10": "2012",
												"11": "2021-05-14 15:38:00",
												"12": "2021-05-14",
												"13": "Submit Assessment 1"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Component",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Description",
												"type": "string"
											},
											{
												"key": "2",
												"name": "Event context",
												"type": "string"
											},
											{
												"key": "3",
												"name": "ActivityName",
												"type": "string"
											},
											{
												"key": "4",
												"name": "Student ID",
												"type": "string"
											},
											{
												"key": "5",
												"name": "Time",
												"type": "string"
											},
											{
												"key": "6",
												"name": "filename",
												"type": "string"
											},
											{
												"key": "7",
												"name": "course",
												"type": "string"
											},
											{
												"key": "8",
												"name": "StudyPeriod",
												"type": "string"
											},
											{
												"key": "9",
												"name": "Year",
												"type": "string"
											},
											{
												"key": "10",
												"name": "TermCode",
												"type": "int"
											},
											{
												"key": "11",
												"name": "TimeFormed",
												"type": "timestamp"
											},
											{
												"key": "12",
												"name": "DateFormed",
												"type": "date"
											},
											{
												"key": "13",
												"name": "AssessmentName",
												"type": "string"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"10"
											],
											"isStacked": false
										}
									}
								}
							},
							"79f1a57e-1558-4e18-9f62-0fc1c7bbe911": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "CCXZBWGDG.X",
												"1": "CCXZBWGDG"
											},
											{
												"0": "CCXZBWGDG.X",
												"1": "CCXZBWGDG"
											},
											{
												"0": "CCXZBWGDG.X",
												"1": "CCXZBWGDG"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											},
											{
												"0": "CCXZGZCGB.X",
												"1": "CCXZGZCGB"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Student ID",
												"type": "string"
											},
											{
												"key": "1",
												"name": "StudentID",
												"type": "string"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "count",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							},
							"ce30dacc-dc29-448c-b3b7-8f70c4d654bb": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "CCXHHDGBD",
												"1": "81"
											},
											{
												"0": "XAWXLXLHW",
												"1": "71"
											},
											{
												"0": "CCXCAALZH",
												"1": "64"
											},
											{
												"0": "LXZZD",
												"1": "195"
											},
											{
												"0": "CCXHHLHHX",
												"1": "59"
											},
											{
												"0": "CCXZWBLZG",
												"1": "67"
											},
											{
												"0": "CCXHHLLZB",
												"1": "80"
											},
											{
												"0": "CCXHHBHDH",
												"1": "97"
											},
											{
												"0": "CCXZLWADL",
												"1": "61"
											},
											{
												"0": "CXXXBXGZA",
												"1": "69"
											},
											{
												"0": "CCXZZXLBZ",
												"1": "50"
											},
											{
												"0": "CXXXDHLAX",
												"1": "111"
											},
											{
												"0": "CCXHCWXCW",
												"1": "138"
											},
											{
												"0": "CCXHCBGDB",
												"1": "46"
											},
											{
												"0": "CCXHHWAZB",
												"1": "69"
											},
											{
												"0": "CCXHZDGHH",
												"1": "1"
											},
											{
												"0": "CCZCCH",
												"1": "119"
											},
											{
												"0": "WGLDG",
												"1": "78"
											},
											{
												"0": "CCXHHGLLH",
												"1": "31"
											},
											{
												"0": "CCXHZAWCB",
												"1": "87"
											},
											{
												"0": "CCXHXBCAZ",
												"1": "34"
											},
											{
												"0": "CCXZWABXW",
												"1": "36"
											},
											{
												"0": "CCXCWGXLB",
												"1": "95"
											},
											{
												"0": "CCXHHGBZD",
												"1": "140"
											},
											{
												"0": "CCXZDWGZX",
												"1": "46"
											},
											{
												"0": "CCXHCAZAD",
												"1": "314"
											},
											{
												"0": "CCXHHHCGA",
												"1": "110"
											},
											{
												"0": "CCXCCDCBH",
												"1": "103"
											},
											{
												"0": "CXXXHXWHL",
												"1": "114"
											},
											{
												"0": "BHZBD",
												"1": "118"
											},
											{
												"0": "CCXZAXAZX",
												"1": "132"
											},
											{
												"0": "CCXZWWZXH",
												"1": "44"
											},
											{
												"0": "CCXHZZGLA",
												"1": "290"
											},
											{
												"0": "CCXZXZLGX",
												"1": "75"
											},
											{
												"0": "CCXCAGXAB",
												"1": "45"
											},
											{
												"0": "CCXZDLHDB",
												"1": "57"
											},
											{
												"0": "CCXCALWWC",
												"1": "36"
											},
											{
												"0": "CCXHHLALZ",
												"1": "56"
											},
											{
												"0": "CCXHZDLWB",
												"1": "61"
											},
											{
												"0": "CCXZWZCHX",
												"1": "95"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "474665"
											},
											{
												"0": "CCXXBXBLX",
												"1": "27"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "StudentID",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *\r\n",
							"import nltk"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/NewLog.json', format='json')\r\n",
							"logDF = logDF.filter(logDF.filename != 'NEWLogBUIL 1024 _1094_SP42020.csv')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.drop('_id').distinct()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('course', regexp_extract(upper(logDF.filename), r'NEWLOG(LOGS)?_?([A-Z]{4}\\s\\d{4})', 2))\r\n",
							"logDF = logDF.withColumn('StudyPeriod', regexp_extract(upper(logDF.filename), r'NEWLOG(LOGS)?_?([A-Z]{4}\\s\\d{4})\\s?_?(SP\\d{1})', 3))\r\n",
							"logDF = logDF.withColumn('Year', when(col('filename')=='NEWLoglogs_MATH 1077 SP3021_20210925-1114.csv', '2021')\r\n",
							"                                .otherwise(regexp_extract(upper(logDF.filename), r'NEWLOG(LOGS)?_?([A-Z]{4}\\s\\d{4})\\s?_?(SP\\d{1})\\s?(\\d{4})', 4)))\r\n",
							"logDF = logDF.withColumn('TermCode', when(col('StudyPeriod') == 'SP1', concat(substring(col('Year'), 3, 2), lit('05')))\r\n",
							"                                    .when(col('StudyPeriod') == 'SP3', concat(substring(col('Year'), 3, 2), lit('12')))\r\n",
							"                                    .when(col('StudyPeriod') == 'SP4', concat(substring(col('Year'), 3, 2), lit('14')))\r\n",
							"                                    .when(col('StudyPeriod') == 'SP6', concat(substring(col('Year'), 3, 2), lit('25'))))\r\n",
							"logDF = logDF.withColumn('TermCode', col('TermCode').cast(IntegerType()))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.groupBy('TermCode').count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 36
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('TimeFormed', to_timestamp(col('Time'), 'dd/MM/yy, HH:mm'))\r\n",
							"logDF = logDF.withColumn('DateFormed', to_date(logDF.TimeFormed))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.filter(logDF.TimeFormed.isNotNull())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter(isnull(logDF.TimeFormed)).select('filename', 'Time').collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 46
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimStudent = spark.sql(\"SELECT * FROM `unisadw`.`dimstudent`\")\r\n",
							"DimDate = spark.sql(\"SELECT * FROM `unisadw`.`dimdate`\")\r\n",
							"DimTime = spark.sql(\"SELECT * FROM `unisadw`.`dimtime`\")\r\n",
							"DimAssignment = spark.sql(\"SELECT * FROM `unisadw`.`dimassignment`\")\r\n",
							"DimActivity = spark.sql(\"SELECT * FROM `unisadw`.`dimactivity`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.filter((col('Component') == 'Assignment') | (split(col('Event context'), ':').getItem(0) == 'Assignment'))\r\n",
							"logDF = logDF.withColumn('AssessmentName', trim(split(col('Event context'), ':').getItem(1)))\r\n",
							"logDF = logDF.withColumnRenamed('Event name', 'ActivityName')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.groupBy(['AssessmentName', 'course', 'TermCode']).count().limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(DimAssignment.select('AssessmentName', concat_ws(' ', col('SubjectArea'), col('CatalogNumber')), 'TermCode')\\\r\n",
							"            .exceptAll(logDF.groupBy(['AssessmentName', 'course', 'TermCode']).count().select('AssessmentName', 'course', 'TermCode')).limit(20))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter(col('course') == 'CIVE 2016').groupBy('AssessmentName').count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter(col('Student ID').contains('.')).limit(20))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('StudentID', when(col('Student ID').contains('.'), regexp_extract(col('Student ID'), r'(\\w+).', 1))\r\n",
							"                                    .otherwise(col('Student ID')))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter(col('Student ID').contains('.')).select('Student ID', 'StudentID').limit(20))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.join(DimDate, logDF.DateFormed == DimDate.FullDateAlternateKey, 'left')\\\r\n",
							"            .join(DimTime, [hour(logDF.TimeFormed) == DimTime.Hour,\r\n",
							"                            minute(logDF.TimeFormed) == DimTime.Minute,\r\n",
							"                            second(logDF.TimeFormed) == DimTime.Second], 'left')\\\r\n",
							"            .join(DimStudent, [DimStudent.StudentID == logDF.StudentID,\r\n",
							"                                logDF.TermCode >= DimStudent.EffectiveTerm,\r\n",
							"                                logDF.TermCode < DimStudent.ExpiryTerm], 'left')\\\r\n",
							"            .join(DimAssignment, [logDF.AssessmentName == DimAssignment.AssessmentName, \r\n",
							"                                    logDF.TermCode == DimAssignment.TermCode,\r\n",
							"                                    logDF.course == concat_ws(' ', DimAssignment.SubjectArea, DimAssignment.CatalogNumber)], 'left')\\\r\n",
							"            .join(DimActivity, 'ActivityName', 'left')\\\r\n",
							"            .select(logDF.TimeFormed.alias('EngageTime'), logDF.StudentID, DimDate.DateKey.alias('EngageDateSK'), DimTime.TimeSK.alias('EngageTimeSK'), \r\n",
							"                                DimStudent.StudentSK, DimAssignment.AssignmentSK, DimActivity.ActivitySK)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter(isnull(col('StudentSK'))).groupBy('StudentID').count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.drop('StudentID')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.factassignmentengagement\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter(col('Component') == 'System').groupBy(split(col('Event context'), ':').getItem(0)).count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.groupBy('Component').count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 20
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FactCourseSiteVisit')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"8caa181f-f090-47c9-8ca2-a27f2ab604ee": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Lesson",
												"1": "Lesson",
												"2": "59283"
											},
											{
												"0": "Other",
												"1": "System",
												"2": "9884"
											},
											{
												"0": "Other",
												"1": "Wiki",
												"2": "1"
											},
											{
												"0": "Assignment",
												"1": "Assignment",
												"2": "1047252"
											},
											{
												"0": "Interactive Content",
												"1": "H5P",
												"2": "452836"
											},
											{
												"0": "Other",
												"1": "Choice",
												"2": "114"
											},
											{
												"0": "Database",
												"1": "Database",
												"2": "15911"
											},
											{
												"0": "Other",
												"1": "Quiz",
												"2": "10699"
											},
											{
												"0": "Assignment",
												"1": "UniSA Media Library Video Assignment",
												"2": "142"
											},
											{
												"0": "Other",
												"1": "Lightbox Gallery",
												"2": "23"
											},
											{
												"0": "Quiz",
												"1": "Quiz",
												"2": "922316"
											},
											{
												"0": "Course",
												"1": "Overview report",
												"2": "268"
											},
											{
												"0": "Course",
												"1": "Wiki",
												"2": "4"
											},
											{
												"0": "Course",
												"1": "Feedback",
												"2": "40"
											},
											{
												"0": "Other",
												"1": "Dialogue",
												"2": "2"
											},
											{
												"0": "File",
												"1": "File",
												"2": "520277"
											},
											{
												"0": "Course",
												"1": "Grader report",
												"2": "10912"
											},
											{
												"0": "Folder",
												"1": "System",
												"2": "2559"
											},
											{
												"0": "Course",
												"1": "Course participation",
												"2": "551"
											},
											{
												"0": "Course",
												"1": "Plain text file",
												"2": "7"
											},
											{
												"0": "Group self-selection",
												"1": "System",
												"2": "77"
											},
											{
												"0": "Course",
												"1": "URL",
												"2": "1"
											},
											{
												"0": "Course",
												"1": "Extensions",
												"2": "63734"
											},
											{
												"0": "Other",
												"1": "Forum",
												"2": "4563"
											},
											{
												"0": "Book",
												"1": "Book printing",
												"2": "10"
											},
											{
												"0": "Course",
												"1": "Glossary",
												"2": "2"
											},
											{
												"0": "Assignment",
												"1": "Mahara portfolio",
												"2": "79"
											},
											{
												"0": "Other",
												"1": "Folder",
												"2": "1061"
											},
											{
												"0": "Other",
												"1": "File",
												"2": "3261"
											},
											{
												"0": "Other",
												"1": "Page",
												"2": "1644"
											},
											{
												"0": "Other",
												"1": "Assignment",
												"2": "1295"
											},
											{
												"0": "External tool",
												"1": "System",
												"2": "144"
											},
											{
												"0": "Label",
												"1": "{\"$numberDouble\":\"NaN\"}",
												"2": "206"
											},
											{
												"0": "SCORM package",
												"1": "SCORM package",
												"2": "1240"
											},
											{
												"0": "Other",
												"1": "Book printing",
												"2": "2"
											},
											{
												"0": "Quiz",
												"1": "System",
												"2": "17137"
											},
											{
												"0": "Workshop",
												"1": "System",
												"2": "795"
											},
											{
												"0": "Course",
												"1": "Assignment",
												"2": "96089"
											},
											{
												"0": "Scheduler",
												"1": "System",
												"2": "229"
											},
											{
												"0": "Course",
												"1": "System",
												"2": "5365096"
											},
											{
												"0": "Other",
												"1": "H5P",
												"2": "1629"
											},
											{
												"0": "Course",
												"1": "Live logs",
												"2": "149"
											},
											{
												"0": "Other",
												"1": "Group self-selection",
												"2": "3"
											},
											{
												"0": "Course",
												"1": "Choice",
												"2": "4"
											},
											{
												"0": "UniSA Learning Progress",
												"1": "System",
												"2": "9356"
											},
											{
												"0": "Other",
												"1": "UniSA Media Library",
												"2": "6"
											},
											{
												"0": "Zoom meeting",
												"1": "Zoom meeting",
												"2": "29663"
											},
											{
												"0": "Page",
												"1": "Page",
												"2": "123383"
											},
											{
												"0": "Chat",
												"1": "System",
												"2": "29"
											},
											{
												"0": "Other",
												"1": "Feedback",
												"2": "19"
											},
											{
												"0": "Assignment",
												"1": "System",
												"2": "31741"
											},
											{
												"0": "Group self-selection",
												"1": "Group self-selection",
												"2": "5043"
											},
											{
												"0": "URL",
												"1": "URL",
												"2": "63303"
											},
											{
												"0": "External tool",
												"1": "External tool",
												"2": "2454"
											},
											{
												"0": "Other",
												"1": "URL",
												"2": "876"
											},
											{
												"0": "UniSA Media Library",
												"1": "System",
												"2": "3"
											},
											{
												"0": "Other",
												"1": "File submissions",
												"2": "110"
											},
											{
												"0": "Other",
												"1": "Survey",
												"2": "15"
											},
											{
												"0": "Other",
												"1": "Lesson",
												"2": "28"
											},
											{
												"0": "Course",
												"1": "Lesson",
												"2": "7"
											},
											{
												"0": "Course",
												"1": "Recycle bin",
												"2": "9296"
											},
											{
												"0": "Chat",
												"1": "Chat",
												"2": "2490"
											},
											{
												"0": "Scheduler",
												"1": "Scheduler",
												"2": "21694"
											},
											{
												"0": "Course",
												"1": "Single view",
												"2": "1095"
											},
											{
												"0": "Course",
												"1": "UniSA Media Library",
												"2": "5"
											},
											{
												"0": "Feedback",
												"1": "Feedback",
												"2": "8558"
											},
											{
												"0": "Choice",
												"1": "System",
												"2": "771"
											},
											{
												"0": "Lesson",
												"1": "System",
												"2": "227"
											},
											{
												"0": "Course",
												"1": "OpenDocument spreadsheet",
												"2": "524"
											},
											{
												"0": "Book",
												"1": "System",
												"2": "335"
											},
											{
												"0": "Course",
												"1": "Grade history",
												"2": "8"
											},
											{
												"0": "Course",
												"1": "Database",
												"2": "3"
											},
											{
												"0": "Choice",
												"1": "Choice",
												"2": "10505"
											},
											{
												"0": "Dialogue",
												"1": "Dialogue",
												"2": "11966"
											},
											{
												"0": "Assignment",
												"1": "Online text submissions",
												"2": "4002"
											},
											{
												"0": "Course",
												"1": "Forum",
												"2": "79099"
											},
											{
												"0": "Interactive Content",
												"1": "System",
												"2": "6768"
											},
											{
												"0": "Course",
												"1": "External tool",
												"2": "10"
											},
											{
												"0": "Other",
												"1": "External tool",
												"2": "23"
											},
											{
												"0": "Other",
												"1": "Book",
												"2": "79"
											},
											{
												"0": "Course",
												"1": "H5P",
												"2": "37"
											},
											{
												"0": "Other",
												"1": "Database",
												"2": "115"
											},
											{
												"0": "Other",
												"1": "Scheduler",
												"2": "168"
											},
											{
												"0": "Other",
												"1": "Workshop",
												"2": "7"
											},
											{
												"0": "Course",
												"1": "File",
												"2": "1"
											},
											{
												"0": "Feedback",
												"1": "System",
												"2": "3186"
											},
											{
												"0": "Glossary",
												"1": "System",
												"2": "46"
											},
											{
												"0": "File",
												"1": "System",
												"2": "75654"
											},
											{
												"0": "Assignment",
												"1": "Submission comments",
												"2": "1323"
											},
											{
												"0": "Folder",
												"1": "Folder",
												"2": "78808"
											},
											{
												"0": "Other",
												"1": "Zoom meeting",
												"2": "208"
											},
											{
												"0": "Other",
												"1": "Submission comments",
												"2": "1"
											},
											{
												"0": "Other",
												"1": "SCORM package",
												"2": "3"
											},
											{
												"0": "Forum",
												"1": "Forum summary report",
												"2": "2"
											},
											{
												"0": "Course",
												"1": "Quiz",
												"2": "33297"
											},
											{
												"0": "Course",
												"1": "Scheduler",
												"2": "1"
											},
											{
												"0": "SCORM package",
												"1": "System",
												"2": "306"
											},
											{
												"0": "Page",
												"1": "System",
												"2": "13099"
											},
											{
												"0": "Course",
												"1": "Workshop",
												"2": "10"
											},
											{
												"0": "Label",
												"1": "System",
												"2": "125797"
											},
											{
												"0": "Assignment",
												"1": "File submissions",
												"2": "71266"
											},
											{
												"0": "Wiki",
												"1": "System",
												"2": "263"
											},
											{
												"0": "Workshop",
												"1": "Workshop",
												"2": "13631"
											},
											{
												"0": "Course",
												"1": "Activity report",
												"2": "233"
											},
											{
												"0": "URL",
												"1": "System",
												"2": "5107"
											},
											{
												"0": "Course",
												"1": "Logs",
												"2": "3119"
											},
											{
												"0": "Book",
												"1": "Book",
												"2": "10826"
											},
											{
												"0": "Dialogue",
												"1": "System",
												"2": "130"
											},
											{
												"0": "Course",
												"1": "Zoom meeting",
												"2": "1421"
											},
											{
												"0": "UniSA Media Library",
												"1": "UniSA Media Library",
												"2": "4"
											},
											{
												"0": "Glossary",
												"1": "Glossary",
												"2": "3196"
											},
											{
												"0": "Forum",
												"1": "Forum",
												"2": "2196158"
											},
											{
												"0": "Database",
												"1": "System",
												"2": "1786"
											},
											{
												"0": "Course",
												"1": "Excel spreadsheet",
												"2": "249"
											},
											{
												"0": "Course",
												"1": "User report",
												"2": "110980"
											},
											{
												"0": "Zoom meeting",
												"1": "System",
												"2": "2878"
											},
											{
												"0": "Forum",
												"1": "System",
												"2": "11906"
											},
											{
												"0": "Wiki",
												"1": "Wiki",
												"2": "6291"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "split(Event context, :)[0]",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Component",
												"type": "string"
											},
											{
												"key": "2",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"2"
											],
											"isStacked": false
										}
									}
								}
							},
							"7979bf43-04da-45dc-9ce3-7caa2a85e040": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Calendar event deleted",
												"1": "1618"
											},
											{
												"0": "Question updated",
												"1": "2724"
											},
											{
												"0": "Capability assigned",
												"1": "84"
											},
											{
												"0": "Course section created",
												"1": "29984"
											},
											{
												"0": "Course viewed",
												"1": "4709468"
											},
											{
												"0": "Badge created",
												"1": "2"
											},
											{
												"0": "Question category moved",
												"1": "35"
											},
											{
												"0": "Grade item created",
												"1": "1815"
											},
											{
												"0": "Role assigned",
												"1": "18119"
											},
											{
												"0": "User graded",
												"1": "244735"
											},
											{
												"0": "Grouping deleted",
												"1": "80"
											},
											{
												"0": "Grade item updated",
												"1": "7380"
											},
											{
												"0": "User unenrolled from course",
												"1": "5347"
											},
											{
												"0": "Questions exported",
												"1": "65"
											},
											{
												"0": "Calendar event updated",
												"1": "52407"
											},
											{
												"0": "Group created",
												"1": "1010"
											},
											{
												"0": "Questions imported",
												"1": "9"
											},
											{
												"0": "Course created",
												"1": "167"
											},
											{
												"0": "Group unassigned from grouping",
												"1": "191"
											},
											{
												"0": "Calendar event created",
												"1": "8300"
											},
											{
												"0": "Group member removed",
												"1": "6584"
											},
											{
												"0": "Question category updated",
												"1": "140"
											},
											{
												"0": "Course module instance list viewed",
												"1": "26"
											},
											{
												"0": "Course summary viewed",
												"1": "38"
											},
											{
												"0": "User list viewed",
												"1": "2184"
											},
											{
												"0": "Grouping updated",
												"1": "10"
											},
											{
												"0": "Question deleted",
												"1": "4635"
											},
											{
												"0": "Capability unassigned",
												"1": "84"
											},
											{
												"0": "Course section updated",
												"1": "31588"
											},
											{
												"0": "Tag added to an item",
												"1": "336"
											},
											{
												"0": "Course backup created",
												"1": "216"
											},
											{
												"0": "Question moved",
												"1": "416"
											},
											{
												"0": "Grade deleted",
												"1": "128717"
											},
											{
												"0": "Group updated",
												"1": "379"
											},
											{
												"0": "Course user report viewed",
												"1": "144"
											},
											{
												"0": "User profile viewed",
												"1": "45406"
											},
											{
												"0": "Group member added",
												"1": "25661"
											},
											{
												"0": "Course content deleted",
												"1": "132"
											},
											{
												"0": "Question category deleted",
												"1": "46"
											},
											{
												"0": "Grouping created",
												"1": "1186"
											},
											{
												"0": "Group deleted",
												"1": "702"
											},
											{
												"0": "Enrolment instance updated",
												"1": "1"
											},
											{
												"0": "Role unassigned",
												"1": "5500"
											},
											{
												"0": "User enrolled in course",
												"1": "17754"
											},
											{
												"0": "Question created",
												"1": "1294"
											},
											{
												"0": "Group assigned to grouping",
												"1": "3574"
											},
											{
												"0": "Question category created",
												"1": "504"
											},
											{
												"0": "Enrolment instance created",
												"1": "845"
											},
											{
												"0": "Course restored",
												"1": "181"
											},
											{
												"0": "Question category viewed",
												"1": "2567"
											},
											{
												"0": "Question viewed",
												"1": "445"
											},
											{
												"0": "Notes viewed",
												"1": "4"
											},
											{
												"0": "Course updated",
												"1": "257"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Event name",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"62496e7f-0fee-447d-99f9-b7f0ef15e086": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "CCXCAGXAB",
												"1": "2005",
												"2": "766"
											},
											{
												"0": "CCXXBXBLX",
												"1": "2005",
												"2": "388"
											},
											{
												"0": "CCBHBX",
												"1": "2014",
												"2": "625"
											},
											{
												"0": "CCXHHDGBD",
												"1": "2025",
												"2": "507"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "1912",
												"2": "219350"
											},
											{
												"0": "CCXHZZGLA",
												"1": "2012",
												"2": "1474"
											},
											{
												"0": "CCXHHHCGA",
												"1": "2025",
												"2": "1221"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "2105",
												"2": "578692"
											},
											{
												"0": "CCXZZXLBZ",
												"1": "2025",
												"2": "405"
											},
											{
												"0": "CCXZDWGZX",
												"1": "1912",
												"2": "901"
											},
											{
												"0": "CCXCAALZH",
												"1": "2005",
												"2": "1055"
											},
											{
												"0": "CXXXBXGZA",
												"1": "1912",
												"2": "1410"
											},
											{
												"0": "CCXHHGLLH",
												"1": "2025",
												"2": "347"
											},
											{
												"0": "CCXHZZGLA",
												"1": "2014",
												"2": "878"
											},
											{
												"0": "CCXHHLALZ",
												"1": "2105",
												"2": "131"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "2025",
												"2": "343010"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "2014",
												"2": "377738"
											},
											{
												"0": "CCXCCDCBH",
												"1": "2005",
												"2": "1957"
											},
											{
												"0": "CCXHHGBZD",
												"1": "2025",
												"2": "1329"
											},
											{
												"0": "CCXHZBCLZ",
												"1": "2014",
												"2": "2"
											},
											{
												"0": "CCXZWZCHX",
												"1": "2025",
												"2": "1969"
											},
											{
												"0": "CCXHZDLWB",
												"1": "2014",
												"2": "724"
											},
											{
												"0": "CCXHHLHHX",
												"1": "2025",
												"2": "394"
											},
											{
												"0": "CCXZWABXW",
												"1": "1912",
												"2": "601"
											},
											{
												"0": "CCXZLWADL",
												"1": "2005",
												"2": "608"
											},
											{
												"0": "CCXHZZGLA",
												"1": "2025",
												"2": "891"
											},
											{
												"0": "CCXHCBGDB",
												"1": "2012",
												"2": "454"
											},
											{
												"0": "WGLDG",
												"1": "2105",
												"2": "1074"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "2012",
												"2": "321680"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "1925",
												"2": "260467"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "2005",
												"2": "299068"
											},
											{
												"0": "CCXHHBHDH",
												"1": "2025",
												"2": "691"
											},
											{
												"0": "LXZZD",
												"1": "1914",
												"2": "1263"
											},
											{
												"0": "CCXHZDGHH",
												"1": "2014",
												"2": "148"
											},
											{
												"0": "CCXHCWXCW",
												"1": "2025",
												"2": "679"
											},
											{
												"0": "XAWXLXLHW",
												"1": "2005",
												"2": "365"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "1914",
												"2": "222512"
											},
											{
												"0": "BHZBD",
												"1": "1905",
												"2": "1737"
											},
											{
												"0": "CCXHHLLZB",
												"1": "2025",
												"2": "925"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "2112",
												"2": "500296"
											},
											{
												"0": "CCXHCAZAD",
												"1": "2025",
												"2": "1081"
											},
											{
												"0": "CCZCCH",
												"1": "2105",
												"2": "793"
											},
											{
												"0": "CCXHXBCAZ",
												"1": "2014",
												"2": "253"
											},
											{
												"0": "CCXZWBLZG",
												"1": "2105",
												"2": "631"
											},
											{
												"0": "CCXZAXAZX",
												"1": "2005",
												"2": "704"
											},
											{
												"0": "CCXZXZLGX",
												"1": "2005",
												"2": "363"
											},
											{
												"0": "CCXCWGXLB",
												"1": "2005",
												"2": "1052"
											},
											{
												"0": "CCXCALWWC",
												"1": "2005",
												"2": "394"
											},
											{
												"0": "CCXZWWZXH",
												"1": "2005",
												"2": "500"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "1905",
												"2": "182089"
											},
											{
												"0": "CCXHZAWCB",
												"1": "2025",
												"2": "1070"
											},
											{
												"0": "CCXZDLHDB",
												"1": "1914",
												"2": "215"
											},
											{
												"0": "CCXHHWAZB",
												"1": "2025",
												"2": "1803"
											},
											{
												"0": "CXXXDHLAX",
												"1": "2005",
												"2": "1844"
											},
											{
												"0": "CXXXHXWHL",
												"1": "2005",
												"2": "554"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "StudentID",
												"type": "string"
											},
											{
												"key": "1",
												"name": "TermCode",
												"type": "string"
											},
											{
												"key": "2",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"2"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/NewLog.json', format='json')\r\n",
							"logDF = logDF.filter(logDF.filename != 'NEWLogBUIL 1024 _1094_SP42020.csv')\r\n",
							"logDF = logDF.drop('_id').distinct()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('course', regexp_extract(upper(logDF.filename), r'NEWLOG(LOGS)?_?([A-Z]{4}\\s\\d{4})', 2))\r\n",
							"logDF = logDF.withColumn('StudyPeriod', regexp_extract(upper(logDF.filename), r'NEWLOG(LOGS)?_?([A-Z]{4}\\s\\d{4})\\s?_?(SP\\d{1})', 3))\r\n",
							"logDF = logDF.withColumn('Year', when(col('filename')=='NEWLoglogs_MATH 1077 SP3021_20210925-1114.csv', '2021')\r\n",
							"                                .otherwise(regexp_extract(upper(logDF.filename), r'NEWLOG(LOGS)?_?([A-Z]{4}\\s\\d{4})\\s?_?(SP\\d{1})\\s?(\\d{4})', 4)))\r\n",
							"logDF = logDF.withColumn('TermCode', when(col('StudyPeriod') == 'SP1', concat(substring(col('Year'), 3, 2), lit('05')))\r\n",
							"                                    .when(col('StudyPeriod') == 'SP3', concat(substring(col('Year'), 3, 2), lit('12')))\r\n",
							"                                    .when(col('StudyPeriod') == 'SP4', concat(substring(col('Year'), 3, 2), lit('14')))\r\n",
							"                                    .when(col('StudyPeriod') == 'SP6', concat(substring(col('Year'), 3, 2), lit('25'))))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('TimeFormed', to_timestamp(col('Time'), 'dd/MM/yy, HH:mm'))\r\n",
							"logDF = logDF.withColumn('DateFormed', to_date(logDF.TimeFormed))\r\n",
							"logDF = logDF.filter(logDF.TimeFormed.isNotNull())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter((col('Component') == 'System') & (split(col('Event context'), ':').getItem(0) == 'Course')).groupBy('Event name').count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.groupBy([split(col('Event context'), ':').getItem(0), col('Component')]).count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('ActivityResourceType', when(trim(split(col('Event context'), ':').getItem(0)) == 'Other', col('Component'))\r\n",
							"                                                .when(trim(split(col('Event context'), ':').getItem(0)) == 'Course', col('Component'))\r\n",
							"                                                .otherwise(trim(split(col('Event context'), ':').getItem(0))))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('ActivityResourceName', trim(split(col('Event context'), ':').getItem(1)))\r\n",
							"logDF = logDF.withColumn('SubjectArea', trim(split(col('course'), ' ').getItem(0)))\r\n",
							"logDF = logDF.withColumn('CatalogNumber', trim(split(col('course'), ' ').getItem(1)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 18
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimStudent = spark.sql(\"SELECT * FROM `unisadw`.`dimstudent`\")\r\n",
							"DimDate = spark.sql(\"SELECT * FROM `unisadw`.`dimdate`\")\r\n",
							"DimTime = spark.sql(\"SELECT * FROM `unisadw`.`dimtime`\")\r\n",
							"DimActivity = spark.sql(\"SELECT * FROM `unisadw`.`dimactivity`\")\r\n",
							"DimResource = spark.sql(\"SELECT * FROM `default`.`dimcourseresource`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('StudentID', when(col('Student ID').contains('.'), regexp_extract(col('Student ID'), r'(\\w+).', 1))\r\n",
							"                                    .otherwise(col('Student ID')))\r\n",
							"logDF = logDF.withColumnRenamed('Event name', 'ActivityName')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.join(DimDate, logDF.DateFormed == DimDate.FullDateAlternateKey, 'left')\\\r\n",
							"            .join(DimTime, [hour(logDF.TimeFormed) == DimTime.Hour,\r\n",
							"                            minute(logDF.TimeFormed) == DimTime.Minute,\r\n",
							"                            second(logDF.TimeFormed) == DimTime.Second], 'left')\\\r\n",
							"            .join(DimStudent, [DimStudent.StudentID == logDF.StudentID,\r\n",
							"                                logDF.TermCode >= DimStudent.EffectiveTerm,\r\n",
							"                                logDF.TermCode < DimStudent.ExpiryTerm], 'left')\\\r\n",
							"            .join(DimResource, ['ActivityResourceName', 'ActivityResourceType', 'SubjectArea', 'CatalogNumber', 'TermCode'], 'left')\\\r\n",
							"            .join(DimActivity, 'ActivityName', 'left')\\\r\n",
							"            .select(logDF.TimeFormed.alias('EngageTime'), logDF.StudentID, logDF.TermCode, DimDate.DateKey.alias('EngageDateSK'), DimTime.TimeSK.alias('EngageTimeSK'), \r\n",
							"                    DimStudent.StudentSK, DimResource.ResourceSK, DimActivity.ActivitySK)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter(isnull(logDF.StudentSK)).groupBy(['StudentID', 'TermCode']).count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.drop('StudentID')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.factlearnonlineengagement\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimResource.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimcourseresource\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FactLog')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "python"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FullJoin')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "c634f91f-c29a-4c6c-bc46-854703ee145a"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "sql"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"USE unisadw;"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"DROP TABLE engagementheadinfo;\r\n",
							"DROP TABLE engagementheadcourse;"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"SHOW TABLES"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Student Demographics"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE studentINFO\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/MLdataset/'\r\n",
							"AS\r\n",
							"SELECT  dimstudent.StudentID, dimstudent.AcademicLoadDesc, dimstudent.GenderCode, dimstudent.InternationalStudentFlag,\r\n",
							"        (2021 - dimdate.CalendarYear) AS StudentAge, dimstudent.MajorProgramCode,\r\n",
							"        dimstudent.City1, dimstudent.City2, dimstudent.StateProvince1, dimstudent.StateProvince2, \r\n",
							"        dimstudent.Country1, dimstudent.Country2, CAST(snapshotengagement.OfficialGrade as int) as gradeNumeric,\r\n",
							"        dimcourse.SubjectArea, dimcourse.CatalogNumber, dimcourse.TermCode, dimcourse.NumberOfStudents, dimcourse.STEMfield,\r\n",
							"        dimgrade.Grade, dimgrade.GradePoint, dimcourse.CourseID,\r\n",
							"        snapshotengagement.EngagementCount, snapshotengagement.VisitCount, snapshotengagement.ViewsDownLoads,\r\n",
							"        snapshotengagement.MinutesDelivered\r\n",
							"FROM snapshotengagement, dimstudent, dimcourse, dimgrade, dimdate\r\n",
							"WHERE snapshotengagement.CourseSK=dimcourse.CourseSK\r\n",
							"AND snapshotengagement.StudentSK=dimstudent.StudentSK\r\n",
							"AND snapshotengagement.OfficialGradeSK=dimgrade.GradeSK\r\n",
							"AND dimstudent.BirthDateSK=dimdate.DateKey\r\n",
							"AND StudentID IS NOT NULL"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Number Of Late Submission"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE latesubinfo\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/DataPrep/LateSub/'\r\n",
							"AS\r\n",
							"SELECT dimstudent.StudentID, dimassignment.CourseID, dimassignment.TermCode,\r\n",
							"        COUNT(*) AS NumberOfLateSubmissions, \r\n",
							"        sum((CAST(LastSubmissionTime as long) - cast(IndividualDueTime as long))/3600) AS TotalLateHours\r\n",
							"FROM snapshotfactsubmission, dimstudent, dimassignment, dimgrade\r\n",
							"WHERE snapshotfactsubmission.AssignmentSK=dimassignment.AssignmentSK\r\n",
							"AND snapshotfactsubmission.StudentSK=dimstudent.StudentSK\r\n",
							"AND snapshotfactsubmission.GradeSK=dimgrade.GradeSK\r\n",
							"AND dimassignment.TermCode!='2112'\r\n",
							"AND snapshotfactsubmission.LastSubmissionTime>snapshotfactsubmission.IndividualDueTime\r\n",
							"GROUP BY dimstudent.StudentID, dimassignment.TermCode, dimassignment.CourseID"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Number of No Submission"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE nosubinfo\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/DataPrep/NoSub/'\r\n",
							"AS\r\n",
							"SELECT dimstudent.StudentID, dimassignment.TermCode,\r\n",
							"        COUNT(*) AS NumberOfInvalidSubmission\r\n",
							"FROM snapshotfactsubmission, dimstudent, dimassignment\r\n",
							"WHERE snapshotfactsubmission.AssignmentSK=dimassignment.AssignmentSK\r\n",
							"AND snapshotfactsubmission.StudentSK=dimstudent.StudentSK\r\n",
							"AND dimassignment.TermCode!='2112'\r\n",
							"AND snapshotfactsubmission.LastSubmissionTime IS NULL\r\n",
							"GROUP BY dimstudent.StudentID, dimassignment.TermCode"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Late submissions in 6 weeks"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE latesubheadinfo\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/DataPrep/LateSub6weeks/'\r\n",
							"AS\r\n",
							"SELECT dimstudent.StudentID, dimassignment.TermCode,\r\n",
							"        COUNT(*) AS NumberOfLateSubmissions,\r\n",
							"        AVG((CAST(LastSubmissionTime as long) - cast(IndividualDueTime as long))/3600) AS avg_latehours\r\n",
							"FROM snapshotfactsubmission, dimstudent, dimassignment, dimcourse\r\n",
							"WHERE snapshotfactsubmission.StudentSK=dimstudent.StudentSK\r\n",
							"AND snapshotfactsubmission.AssignmentSK=dimassignment.AssignmentSK\r\n",
							"AND dimassignment.CourseSK=dimcourse.CourseSK\r\n",
							"AND DATEDIFF(dimcourse.CommenceDate, dimassignment.InitialDueTime)/7<=6\r\n",
							"AND snapshotfactsubmission.LastSubmissionTime>snapshotfactsubmission.IndividualDueTime\r\n",
							"GROUP BY dimstudent.StudentID, dimassignment.TermCode"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE latesubheadcourse\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/DataPrep/LateSub6weeksCourse/'\r\n",
							"AS\r\n",
							"SELECT dimstudent.StudentID, dimassignment.TermCode, dimcourse.CourseID,\r\n",
							"        COUNT(*) AS NumberOfLateSubmissions,\r\n",
							"        AVG((CAST(LastSubmissionTime as long) - cast(IndividualDueTime as long))/3600) AS avg_latehours\r\n",
							"FROM snapshotfactsubmission, dimstudent, dimassignment, dimcourse\r\n",
							"WHERE snapshotfactsubmission.StudentSK=dimstudent.StudentSK\r\n",
							"AND snapshotfactsubmission.AssignmentSK=dimassignment.AssignmentSK\r\n",
							"AND dimassignment.CourseSK=dimcourse.CourseSK\r\n",
							"AND DATEDIFF(dimcourse.CommenceDate, dimassignment.InitialDueTime)/7<=6\r\n",
							"AND snapshotfactsubmission.LastSubmissionTime>snapshotfactsubmission.IndividualDueTime\r\n",
							"GROUP BY dimstudent.StudentID, dimassignment.TermCode, dimcourse.CourseID"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Invalid Submissions in 6 weeks"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE nosubheadinfo\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/DataPrep/NoSub6weeks/'\r\n",
							"AS\r\n",
							"SELECT dimstudent.StudentID, dimassignment.TermCode,\r\n",
							"        COUNT(*) AS NumberOfInvalidSubmission\r\n",
							"FROM snapshotfactsubmission, dimstudent, dimassignment, dimcourse\r\n",
							"WHERE snapshotfactsubmission.StudentSK=dimstudent.StudentSK\r\n",
							"AND snapshotfactsubmission.AssignmentSK=dimassignment.AssignmentSK\r\n",
							"AND dimassignment.CourseSK=dimcourse.CourseSK\r\n",
							"AND DATEDIFF(dimcourse.CommenceDate, dimassignment.InitialDueTime)/7<=6\r\n",
							"AND snapshotfactsubmission.LastSubmissionTime IS NULL\r\n",
							"GROUP BY dimstudent.StudentID, dimassignment.TermCode"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE nosubheadcourse\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/DataPrep/NoSub6weeksCourse/'\r\n",
							"AS\r\n",
							"SELECT dimstudent.StudentID, dimassignment.TermCode, dimcourse.CourseID,\r\n",
							"        COUNT(*) AS NumberOfInvalidSubmission\r\n",
							"FROM snapshotfactsubmission, dimstudent, dimassignment, dimcourse\r\n",
							"WHERE snapshotfactsubmission.StudentSK=dimstudent.StudentSK\r\n",
							"AND snapshotfactsubmission.AssignmentSK=dimassignment.AssignmentSK\r\n",
							"AND dimassignment.CourseSK=dimcourse.CourseSK\r\n",
							"AND DATEDIFF(dimcourse.CommenceDate, dimassignment.InitialDueTime)/7<=6\r\n",
							"AND snapshotfactsubmission.LastSubmissionTime IS NULL\r\n",
							"GROUP BY dimstudent.StudentID, dimassignment.TermCode, dimcourse.CourseID"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Enrolment Summary"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE enrolmentinfo\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/DataPrep/Enrolment/'\r\n",
							"AS\r\n",
							"SELECT StudentID, TermCode,\r\n",
							"        AcademicLoadDesc, GenderCode, InternationalStudentFlag, (2021 - dimdate.CalendarYear) AS Age,\r\n",
							"        MajorProgramCode, City1, StateProvince1, Country1,\r\n",
							"        COUNT(distinct CourseID) AS NumberOfEnrolments,\r\n",
							"        AVG(OfficialGrade) AS GradeAverage,\r\n",
							"        AVG(dimgrade.GradePoint) AS GPA,\r\n",
							"        sum(ViewsDownLoads) AS TotalVideoView,\r\n",
							"        sum(MinutesDelivered) AS TotalMinutesDelivered,\r\n",
							"        sum(EngagementCount) AS TotalEngagementCount,\r\n",
							"        collect_set(CourseName) AS enrolledCourses\r\n",
							"FROM snapshotengagement, dimstudent, dimcourse, dimgrade, dimdate\r\n",
							"WHERE snapshotengagement.StudentSK=dimstudent.StudentSK\r\n",
							"AND snapshotengagement.CourseSK=dimcourse.CourseSK\r\n",
							"AND snapshotengagement.OfficialGradeSK=dimgrade.GradeSK\r\n",
							"AND dimstudent.BirthDateSK=dimdate.DateKey\r\n",
							"GROUP BY dimstudent.StudentID, dimcourse.TermCode, \r\n",
							"        AcademicLoadDesc, GenderCode, InternationalStudentFlag, dimdate.CalendarYear,\r\n",
							"        MajorProgramCode, City1, StateProvince1, Country1"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Past Semester Engagement"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE engagementinfo\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/DataPrep/Engagement/'\r\n",
							"AS\r\n",
							"SELECT StudentID, TermCode, ActivityResourceType, COUNT(*) AS EngagementCount\r\n",
							"FROM factlearnonlineengagement, dimstudent, dimcourseresource\r\n",
							"WHERE factlearnonlineengagement.StudentSK=dimstudent.StudentSK\r\n",
							"AND factlearnonlineengagement.ResourceSK=dimcourseresource.ResourceSK\r\n",
							"AND dimcourseresource.TermCode!='2112'\r\n",
							"GROUP BY dimstudent.StudentID, dimcourseresource.TermCode, dimcourseresource.ActivityResourceType"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Number of Engagements in 6 weeks"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE engagementheadinfo\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/DataPrep/Engagement6weeks/'\r\n",
							"AS\r\n",
							"SELECT dimstudent.StudentID, dimcourseresource.TermCode, \r\n",
							"        dimcourseresource.ActivityResourceType,\r\n",
							"        COUNT(*) AS NumberOfEngagements\r\n",
							"FROM factlearnonlineengagement, dimstudent, dimcourseresource, dimcourse\r\n",
							"WHERE factlearnonlineengagement.StudentSK=dimstudent.StudentSK\r\n",
							"AND factlearnonlineengagement.ResourceSK=dimcourseresource.ResourceSK\r\n",
							"AND dimcourseresource.CourseSK=dimcourse.CourseSK\r\n",
							"AND DATEDIFF(dimcourse.CommenceDate, factlearnonlineengagement.EngageTime)/7<=6\r\n",
							"GROUP BY dimstudent.StudentID, dimcourseresource.TermCode, \r\n",
							"        dimcourseresource.ActivityResourceType"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CREATE TABLE engagementheadcourse\r\n",
							"LOCATION 'abfss://datalake@dus02store.dfs.core.windows.net/DataPrep/Engagement6weeksCourse/'\r\n",
							"AS\r\n",
							"SELECT dimstudent.StudentID, dimcourseresource.TermCode, dimcourse.CourseID,\r\n",
							"        dimcourseresource.ActivityResourceType,\r\n",
							"        COUNT(*) AS NumberOfEngagements\r\n",
							"FROM factlearnonlineengagement, dimstudent, dimcourseresource, dimcourse\r\n",
							"WHERE factlearnonlineengagement.StudentSK=dimstudent.StudentSK\r\n",
							"AND factlearnonlineengagement.ResourceSK=dimcourseresource.ResourceSK\r\n",
							"AND dimcourseresource.CourseSK=dimcourse.CourseSK\r\n",
							"AND DATEDIFF(dimcourse.CommenceDate, factlearnonlineengagement.EngageTime)/7<=6\r\n",
							"GROUP BY dimstudent.StudentID, dimcourseresource.TermCode, dimcourse.CourseID,\r\n",
							"        dimcourseresource.ActivityResourceType"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MLdataset')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "1",
						"spark.autotune.trackingId": "b0eff59e-23fa-4133-84d2-faf0f911201e"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"courseDF = spark.sql(\"SELECT * FROM `default`.`dimcourse`\")\r\n",
							"courseDF = courseDF.withColumn('CommenceDate', when(col('TermCode')==1825, to_date(lit('2018-09-17'), 'yyyy-MM-dd'))\r\n",
							"                                                .when(col('TermCode')==1905, to_date(lit('2019-01-14'), 'yyyy-MM-dd'))\r\n",
							"                                                .when(col('TermCode')==1912, to_date(lit('2019-04-08'), 'yyyy-MM-dd'))\r\n",
							"                                                .when(col('TermCode')==1914, to_date(lit('2019-06-17'), 'yyyy-MM-dd'))\r\n",
							"                                                .when(col('TermCode')==1925, to_date(lit('2019-09-23'), 'yyyy-MM-dd'))\r\n",
							"                                                .when(col('TermCode')==2005, to_date(lit('2020-01-03'), 'yyyy-MM-dd'))\r\n",
							"                                                .when(col('TermCode')==2012, to_date(lit('2020-04-06'), 'yyyy-MM-dd'))\r\n",
							"                                                .when(col('TermCode')==2014, to_date(lit('2020-06-05'), 'yyyy-MM-dd'))\r\n",
							"                                                .when(col('TermCode')==2025, to_date(lit('2020-09-21'), 'yyyy-MM-dd'))\r\n",
							"                                                .when(col('TermCode')==2105, to_date(lit('2021-01-11'), 'yyyy-MM-dd'))\r\n",
							"                                                .when(col('TermCode')==2112, to_date(lit('2021-04-05'), 'yyyy-MM-dd')))\r\n",
							"courseDF = courseDF.withColumn('NumberOfStudents', lit(0))\r\n",
							"courseDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimcourse\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NewDimStudent')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"d0fb87a0-7a08-4444-80f0-1c7b837c6c88": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "CCXZAGWZD",
												"1": "2005",
												"2": [
													"Full-Time"
												],
												"3": "M",
												"4": "N",
												"5": [
													"XBBE"
												],
												"6": [],
												"7": [
													"Thirroul",
													"WOLLONGONG"
												],
												"8": [
													2500,
													2515
												],
												"9": [
													"NSW"
												],
												"10": [
													"WOLLONGONG,NSW,2500",
													"Thirroul,NSW,2515"
												],
												"11": [
													"Australia"
												],
												"12": "19991018"
											},
											{
												"0": "CCXZAGWZD",
												"1": "2025",
												"2": [
													"Full-Time"
												],
												"3": "M",
												"4": "N",
												"5": [
													"XBBE"
												],
												"6": [],
												"7": [
													"Thirroul",
													"WOLLONGONG"
												],
												"8": [
													2500,
													2515
												],
												"9": [
													"NSW"
												],
												"10": [
													"WOLLONGONG,NSW,2500",
													"Thirroul,NSW,2515"
												],
												"11": [
													"Australia"
												],
												"12": "19991018"
											},
											{
												"0": "CCXZAXXXG",
												"1": "1912",
												"2": [
													"Part-Time"
												],
												"3": "M",
												"4": "N",
												"5": [
													"XBBE"
												],
												"6": [],
												"7": [
													"HILLSIDE",
													"THORNHILL PARK"
												],
												"8": [
													3037,
													3335
												],
												"9": [
													"VIC"
												],
												"10": [
													"THORNHILL PARK,VIC,3335",
													"HILLSIDE,VIC,3037"
												],
												"11": [
													"Australia"
												],
												"12": "19960608"
											},
											{
												"0": "CCXZBGXWH",
												"1": "1912",
												"2": [
													"Full-Time"
												],
												"3": "M",
												"4": "N",
												"5": [
													"XBBE"
												],
												"6": [],
												"7": [
													"WALKLEY HEIGHTS",
													"RANKIN PARK"
												],
												"8": [
													5098,
													2287
												],
												"9": [
													"SA",
													"NSW"
												],
												"10": [
													"RANKIN PARK,NSW,2287",
													"WALKLEY HEIGHTS,SA,5098"
												],
												"11": [
													"Australia"
												],
												"12": "19920426"
											},
											{
												"0": "CCXZBGXWH",
												"1": "2014",
												"2": [
													"Full-Time"
												],
												"3": "M",
												"4": "N",
												"5": [
													"XBBE"
												],
												"6": [],
												"7": [
													"WALKLEY HEIGHTS",
													"RANKIN PARK"
												],
												"8": [
													5098,
													2287
												],
												"9": [
													"SA",
													"NSW"
												],
												"10": [
													"RANKIN PARK,NSW,2287",
													"WALKLEY HEIGHTS,SA,5098"
												],
												"11": [
													"Australia"
												],
												"12": "19920426"
											},
											{
												"0": "CCXZGADZW",
												"1": "2012",
												"2": [
													"Full-Time"
												],
												"3": "M",
												"4": "Y",
												"5": [
													"IHCN"
												],
												"6": [],
												"7": [
													"XI'AN",
													"ADELAIDE"
												],
												"8": [
													710065,
													5000
												],
												"9": [
													"SA",
													"61"
												],
												"10": [
													"XI'AN,61,710065",
													"ADELAIDE,SA,5000"
												],
												"11": [
													"Australia"
												],
												"12": "19981201"
											},
											{
												"0": "CCXZGALGB",
												"1": "2012",
												"2": [
													"Full-Time"
												],
												"3": "M",
												"4": "Y",
												"5": [
													"IHCN"
												],
												"6": [],
												"7": [
													"ADELAIDE",
													"WEIFANG"
												],
												"8": [
													5000,
													262400
												],
												"9": [
													"SA",
													"37"
												],
												"10": [
													"ADELAIDE,SA,5000",
													"WEIFANG,37,262400"
												],
												"11": [
													"Australia"
												],
												"12": "19990325"
											},
											{
												"0": "CCXZGALGZ",
												"1": "2012",
												"2": [
													"Full-Time"
												],
												"3": "M",
												"4": "Y",
												"5": [
													"IHCN"
												],
												"6": [],
												"7": [
													"XI'AN",
													"ADELAIDE"
												],
												"8": [
													710082,
													5000
												],
												"9": [
													"SA",
													"61"
												],
												"10": [
													"ADELAIDE,SA,5000",
													"XI'AN,61,710082"
												],
												"11": [
													"Australia"
												],
												"12": "19990313"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "StudentID",
												"type": "string"
											},
											{
												"key": "1",
												"name": "TermCode",
												"type": "int"
											},
											{
												"key": "2",
												"name": "AcademicLoadDesc",
												"type": "ArrayType(StringType,true)"
											},
											{
												"key": "3",
												"name": "GenderCode",
												"type": "string"
											},
											{
												"key": "4",
												"name": "InternationalStudentFlag",
												"type": "string"
											},
											{
												"key": "5",
												"name": "ProgramCode",
												"type": "ArrayType(StringType,true)"
											},
											{
												"key": "6",
												"name": "ProgramDesc",
												"type": "ArrayType(StringType,true)"
											},
											{
												"key": "7",
												"name": "StudentAddressCityCode",
												"type": "ArrayType(StringType,true)"
											},
											{
												"key": "8",
												"name": "StudentAddressPostcode",
												"type": "ArrayType(IntegerType,true)"
											},
											{
												"key": "9",
												"name": "StudentAddressStateCode",
												"type": "ArrayType(StringType,true)"
											},
											{
												"key": "10",
												"name": "AddressDesc",
												"type": "ArrayType(StringType,true)"
											},
											{
												"key": "11",
												"name": "StudentCountryDesc",
												"type": "ArrayType(StringType,true)"
											},
											{
												"key": "12",
												"name": "BirthDateSK",
												"type": "int"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = spark.sql(\"SELECT * FROM `default`.`dimstudent`\")\r\n",
							"StudentDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 40
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.select('AcademicLoadDesc', 'GenderCode', 'InternationalStudentFlag', 'ProgramCode', 'ProgramDescs', \r\n",
							"                            'StudentAddressCityCode', 'StudentAddressPostcode', 'StudentAddressStateCode', 'StudentCountryDesc',\r\n",
							"                            'StudentID', explode(col('TermCodes')).alias('TermCode'), 'BirthDateSK')\r\n",
							"StudentDF = StudentDF.withColumn('StudentAddressPostcode', when(isnull(StudentDF.StudentAddressPostcode), \r\n",
							"                                                                        StudentDF.StudentAddressCityCode.cast(IntegerType()))\r\n",
							"                                                            .otherwise(StudentDF.StudentAddressPostcode))\r\n",
							"StudentDF = StudentDF.withColumn('ProgramDesc', StudentDF.ProgramDescs.__getitem__(0).cast(StringType()))\r\n",
							"StudentDF = StudentDF.withColumn('AddressDesc', concat_ws(',', StudentDF.StudentAddressCityCode, \r\n",
							"                                                            StudentDF.StudentAddressStateCode, StudentDF.StudentAddressPostcode))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 41
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 43
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.groupBy(['StudentID', 'TermCode']).\\\r\n",
							"                        agg(collect_set(StudentDF.AcademicLoadDesc).alias('AcademicLoadDesc'), \r\n",
							"                        collect_set(StudentDF.GenderCode).__getitem__(0).cast(StringType()).alias('GenderCode'),\r\n",
							"                        collect_set(StudentDF.InternationalStudentFlag).__getitem__(0).cast(StringType()).alias('InternationalStudentFlag'), \r\n",
							"                        collect_set(StudentDF.ProgramCode).alias('ProgramCode'),\r\n",
							"                        collect_set(StudentDF.ProgramDesc).alias('ProgramDesc'), \r\n",
							"                        collect_set(StudentDF.StudentAddressCityCode).alias('StudentAddressCityCode'),\r\n",
							"                        collect_set(StudentDF.StudentAddressPostcode).alias('StudentAddressPostcode'),\r\n",
							"                        collect_set(StudentDF.StudentAddressStateCode).alias('StudentAddressStateCode'), \r\n",
							"                        collect_set(StudentDF.AddressDesc).alias('AddressDesc'),\r\n",
							"                        collect_set(StudentDF.StudentCountryDesc).alias('StudentCountryDesc'),\r\n",
							"                        collect_set(StudentDF.BirthDateSK).__getitem__(0).cast(IntegerType()).alias('BirthDateSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 42
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.where(size(col('BirthDateSK'))>1).count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 35
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(StudentDF.where(size(col('StudentAddressCityCode'))>1).limit(20))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 44
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.DimStudent\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 46
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/NewLogFact')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"c713b816-6324-4545-a613-aca61642d488": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Label",
												"1": "130117"
											},
											{
												"0": "Course",
												"1": "7001363"
											},
											{
												"0": "Interactive Content",
												"1": "552370"
											},
											{
												"0": "SCORM package",
												"1": "1712"
											},
											{
												"0": "Glossary",
												"1": "4489"
											},
											{
												"0": "Chat",
												"1": "3629"
											},
											{
												"0": "URL",
												"1": "80546"
											},
											{
												"0": "Scheduler",
												"1": "27738"
											},
											{
												"0": "Choice",
												"1": "12787"
											},
											{
												"0": "Book",
												"1": "11704"
											},
											{
												"0": "Quiz",
												"1": "1502440"
											},
											{
												"0": "Workshop",
												"1": "16076"
											},
											{
												"0": "Other",
												"1": "41698"
											},
											{
												"0": "Wiki",
												"1": "7125"
											},
											{
												"0": "File",
												"1": "921190"
											},
											{
												"0": "External tool",
												"1": "3035"
											},
											{
												"0": "Page",
												"1": "143321"
											},
											{
												"0": "{\"$numberDouble\"",
												"1": "8439"
											},
											{
												"0": "Dialogue",
												"1": "13719"
											},
											{
												"0": "Group self-selection",
												"1": "6406"
											},
											{
												"0": "Folder",
												"1": "108015"
											},
											{
												"0": "Lesson",
												"1": "77101"
											},
											{
												"0": "Forum",
												"1": "2600327"
											},
											{
												"0": "UniSA Learning Progress",
												"1": "9815"
											},
											{
												"0": "Zoom meeting",
												"1": "39347"
											},
											{
												"0": "Database",
												"1": "42393"
											},
											{
												"0": "Feedback",
												"1": "12534"
											},
											{
												"0": "Assignment",
												"1": "1495996"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "ActivityType",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"526e4285-8a03-45b7-99a5-3987d6329f3f": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "15579"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "count(DISTINCT ActivityName)",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							},
							"f0ac29d9-f2ad-49e7-b830-09e13aac744a": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": " UO Building Estimating",
												"1": "808881"
											},
											{
												"0": " 2.2 Project Tendering",
												"1": "5530"
											},
											{
												"0": " Learning Activity",
												"1": "204693"
											},
											{
												"0": " Q&amp;A Estimation of Earthworks",
												"1": "1659"
											},
											{
												"0": " 2.1 Demolition, site clearing and earthworks",
												"1": "6794"
											},
											{
												"0": " Building Site Hazard Identification and Risk Assessment",
												"1": "557"
											},
											{
												"0": " Week 3 Activities Forum",
												"1": "7746"
											},
											{
												"0": " Announcements",
												"1": "220660"
											},
											{
												"0": " Quiz 1 (10%; Week 2)",
												"1": "33101"
											},
											{
												"0": " Part E",
												"1": "28046"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "ActivityName",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"a9e1630d-bf7f-47eb-9cca-fd2c676bd67d": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Learning Activity: Ground Problems (6 questions)"
											},
											{
												"0": "SUBMIT Assessment 2 Part C: Risk Analysis (Excel file) &  Executive Summary (Word Document) (20%)"
											},
											{
												"0": "Table 1: Outline of selected site and proposed new building"
											},
											{
												"0": "Week 5.3 LIVE CLASS (11): Sheets generation in Revit Q&A (27.10.2019)"
											},
											{
												"0": "New Learning Resource (Adelaide Botanical High School)"
											},
											{
												"0": "Quiz 2: Material Properties & Fire-engineered Design (10% Due Week 4)"
											},
											{
												"0": "CostX Files: Practice Answers - Part B"
											},
											{
												"0": "Week 11 Practical S"
											},
											{
												"0": "Quiz: Chapter 9 on Exception Handling (Week 8)"
											},
											{
												"0": "UniSA Payroll Calendar 2018"
											},
											{
												"0": "Construction Materials: Maintenance"
											},
											{
												"0": "3.2 Slides and notes - Design for Fire: Material Selection"
											},
											{
												"0": "7.2 Slides: Design Development and Contract Contingency"
											},
											{
												"0": "Learning Activity: 4.3 NPV Exercise"
											},
											{
												"0": "8.1 Learning Activity: ASMM Clause and unit"
											},
											{
												"0": "Week 8 Q&A Forum"
											},
											{
												"0": "OVERVIEW ¿ ACTIVE FIRE SAFETY SYSTEMS - in different Australian states"
											},
											{
												"0": "Practical 10 Normalisation 1.0.2"
											},
											{
												"0": "UO Database Fundamentals (Sample Exam 4) (Ref: SP32020)"
											},
											{
												"0": "8.3 Slides & Notes: Building Cores for MSBs"
											},
											{
												"0": "Slides and Notes - 10.1 International Trade ¿ Benefits and Costs"
											},
											{
												"0": "Online Exams Preparation & Mandatory Training (RPnow)"
											},
											{
												"0": "1.1 Slides & Notes - Fire Safety Overview"
											},
											{
												"0": "Assessment 2 - Part A: Introduction to Accident Database (15%)"
											},
											{
												"0": "Construction Management and Quantity & Building Surveying: Library help and guide"
											},
											{
												"0": "Revit Q&A Meeting 1 (22.05.2019)"
											},
											{
												"0": "Week4 Practical S"
											},
											{
												"0": "UO Programming Fundamentals (Final Exam) (Ref: SP42019)"
											},
											{
												"0": "All quizzes listed"
											},
											{
												"0": "S2 Week 5 - Topic 5 - Column Design"
											},
											{
												"0": "Practice activity: Building Option 1A - Part C"
											},
											{
												"0": "Slides and Notes: QSP Topic 8.1 - Windows  Doors"
											},
											{
												"0": "Quiz 3: Electrical systems and contract, BIM and clash detection  (Week 8; 17.5%)"
											},
											{
												"0": "UO Business Intelligence (Final Exam) (Ref: SP42019)"
											},
											{
												"0": "10.2 Slides & Notes: Roofing Systems"
											},
											{
												"0": "Learning Task 4.3 Build Visuals Using the Q&A Feature"
											},
											{
												"0": "Forum: MSDS"
											},
											{
												"0": "CostX Files: Practice Answers - Week 7"
											},
											{
												"0": "SQL - Text (String) Calculations"
											},
											{
												"0": "Answer to the Question Set 5: Arrays"
											},
											{
												"0": "Project Assessments 2.1 - 2.4 Discussion (Q&A)"
											},
											{
												"0": "Learning Activity: 4.2 NPV Exercise"
											},
											{
												"0": "Gartner¿s Pace-Layered Strategy Quiz"
											},
											{
												"0": "Forum: New Materials"
											},
											{
												"0": "Week 10 Q&A Forum"
											},
											{
												"0": "CostX Files: Practice Answers - Part E Hurdle Building Type 1"
											},
											{
												"0": "UO Quantitative Methods for Business (Secondary Exam) (Ref: SP42019)"
											},
											{
												"0": "Week 8 LIVE CLASS (14): Construction Documents Q&A (24.05.2021)"
											},
											{
												"0": "3.3 Slides & Notes: Pre-Cast Walls"
											},
											{
												"0": "Database: Steps in Extensive Processing"
											},
											{
												"0": "Learning Activity: Setting Up CostX"
											},
											{
												"0": "SEDHY001 UO Structures 1 Supplementary Assessment Details 2020 SP6 Harrison Sedgwick"
											},
											{
												"0": "Excel example: Creating a Chart"
											},
											{
												"0": "1.2 Slides: Value for money"
											},
											{
												"0": "3.3 Slides: Functional and Non-Functional Areas"
											},
											{
												"0": "Quiz: Chapter 2 & 3 on Console IO and Flow of Control (Week 2)"
											},
											{
												"0": "Zoom drop in week - 8 : Quality and Risk theme"
											},
											{
												"0": "Learning Activity: Soil reactivity (5 questions)"
											},
											{
												"0": "Discussion Forum - Database Modelling & Design"
											},
											{
												"0": "9.2  Slides & Notes: Technical Aspects  Cladding Types"
											},
											{
												"0": "Week11 Optimisation"
											},
											{
												"0": "UO Database Fundamentals (Secondary Exam) ¿ Part B (Ref: SP32021)"
											},
											{
												"0": "Week 10: Operating, Maintenance & Post-Occupancy (24.11.2020)"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 2) (Ref: SP62020)"
											},
											{
												"0": "Slides and Notes: Revision of Vectors and Trigonometry"
											},
											{
												"0": "Answer to the Question Set 4: Defining Classes Part 2"
											},
											{
												"0": "Topic 8 concepts"
											},
											{
												"0": "Week 4 PrePracANS"
											},
											{
												"0": "Week 8: Shop Drawings & Offsite Fabrication (draft review) (10.11.2020)"
											},
											{
												"0": "Week 8 - ActivitiesSOLUTIONS"
											},
											{
												"0": "String Functions - MSDN"
											},
											{
												"0": "Week11 Index"
											},
											{
												"0": "Learning Task 8.3: review resources on Fixing Instructions"
											},
											{
												"0": "Week 7 Submission"
											},
											{
												"0": "Discussion Forum - Questions and Challenges: File I/O"
											},
											{
												"0": "Week 9 practice results"
											},
											{
												"0": "Week 5.2 LIVE CLASS (9): Sheets generation in Revit (2) (22.10.2020))"
											},
											{
												"0": "1.3 Slides & Notes: Reading Industrial Drawings and Plans"
											},
											{
												"0": "Assessment 1 Part B: Written Report and Works Schedule (20% Due Week 7)"
											},
											{
												"0": "Normalisation explained simply"
											},
											{
												"0": "Submit Assessment 2: Part D (12%; Due Week 9)"
											},
											{
												"0": "Quiz 2: Hydraulics, Air conditioning (Week 6; 13.34%)"
											},
											{
												"0": "6.2 Slides: Complex and Smart Buildings"
											},
											{
												"0": "HURDLE Assessment: Part A - Hurdle Building Type 1"
											},
											{
												"0": "Assessment 2 Part A Q&A Forum"
											},
											{
												"0": "Mock Exam: Paper 2"
											},
											{
												"0": "UO Engineering Mechanics (Secondary Exam) (Ref: SP32021)-Chisweto,Wadzanai Brian"
											},
											{
												"0": "Week 9.1: Assessment 2-B: Construction Hand drawing (1) (Monday 31/05/2021, 8:00 pm)"
											},
											{
												"0": "UO Programming Fundamentals (Secondary Exam) (Access Plan) (Ref: SP42020)"
											},
											{
												"0": "Quiz 2: Air Conditioning Systems, Calculations and Hydraulic Services  (Week 6; 10%)"
											},
											{
												"0": "Week 2 - Discussion and Q&A forum"
											},
											{
												"0": "UO Database Fundamentals (Final Exam) ¿ Part B (Ref: SP32021)"
											},
											{
												"0": "Replaced by the H5P Activity: Activity 2A - Knowledge Check Questions"
											},
											{
												"0": "UO Programming Fundamentals (Live Programming Test 1) (Ref: SP12020)"
											},
											{
												"0": "HURDLE Assessment: Part B - Hurdle Building Type 1"
											},
											{
												"0": "Week 5.2 Learning Activity Forum - SPACE GASS Truss Forum"
											},
											{
												"0": "Slides & notes - Comparing Nodes"
											},
											{
												"0": "S2 Week 10 topic 2: Design factors - part 2"
											},
											{
												"0": "3.1 Slides: Functional Unit Costs"
											},
											{
												"0": "3.4 Slides: Functional Analysis for Cost Planning"
											},
											{
												"0": "Week 8: Self-Review Quiz (4 questions)"
											},
											{
												"0": "Assessment 2 Part A - Q&A Forum"
											},
											{
												"0": "Week 7.2 LIVE CLASS (13): Assessment 2-A: Construction Documents (3) (5.11.2020)"
											},
											{
												"0": "Practice activity: Part B - Building Type 1"
											},
											{
												"0": "Quiz 4: BIM & Software; Electrical Systems, Commissioning; Shop Drawings (Week 9; 10%)"
											},
											{
												"0": "Answer to the Question Set 10: Interfaces and Inner Classes"
											},
											{
												"0": "Continuous Assessment Week 5 & 6 Practical Submission Point"
											},
											{
												"0": "Assessment 1: Project Part B: Thermal Comfort (10%; Submit Week 10)"
											},
											{
												"0": "UO Quantitative Methods for Business Part A (Final Exam) (Ref: SP12021)"
											},
											{
												"0": "HURDLE Assessment: Week 2 work on Building P"
											},
											{
												"0": "Week 6 - Activities"
											},
											{
												"0": "Assessment 1: Part A2 - Mathematics and Physics Quiz Attempt 2 (12%)"
											},
											{
												"0": "Practice Activity: Part D - Building Type 1"
											},
											{
												"0": "Week 6 submission"
											},
											{
												"0": "Week 6 LIVE CLASS (10):  (29.10.2020)"
											},
											{
												"0": "Week 9 LIVE CLASS (14): Construction Hand drawings Q&A (21.11.2019)"
											},
											{
												"0": "Self-Check Quiz: Week 2"
											},
											{
												"0": "UO Introduction to Engineering Physics (Final Exam) (Ref: SP1 2021)"
											},
											{
												"0": "Week 7 Q&A Forum"
											},
											{
												"0": "Q&A - Project Management"
											},
											{
												"0": "SA Quiz 3 - Chapter 4 & 5 (Week 8)"
											},
											{
												"0": "6.2 Slides: Averages, Norms, and Deviations"
											},
											{
												"0": "UO Engineering Mechanics (Secondary Exam) (Ref: SP32021)"
											},
											{
												"0": "StudentEnrolmentUML 2016 SP2"
											},
											{
												"0": "HazardSystem"
											},
											{
												"0": "Assessment 2-Quiz A: Q&A"
											},
											{
												"0": "Week 1 & 2 Drop in session"
											},
											{
												"0": "Assessment 2: Assignment Scenario 2 Forum"
											},
											{
												"0": "Learning  Activity: Soil Profile"
											},
											{
												"0": "Learning Task 7.2: Quiz on Lining instructions"
											},
											{
												"0": "Week 8 LIVE CLASS (11): Construction Documents Q&A (28.05.2020)"
											},
											{
												"0": "UO Database Fundamentals (Secondary Exam) ¿ Part A (Ref: SP32020)"
											},
											{
												"0": "UO Engineering Mechanics (Secondary Exam) (Ref: SP62020)"
											},
											{
												"0": "Quiz 2: Hydraulics, Air conditioning (Week 5; 10%)"
											},
											{
												"0": "Image differences pixel number revit"
											},
											{
												"0": "Week 0: Pre-teaching Week"
											},
											{
												"0": "SUBMIT Assessment 2 - Part A - Building Assessment & Part B - Performance Solutions for Liam Humphries"
											},
											{
												"0": "Learning Task 9.1 Read Topic 1, Chapter 7, Section 7.8 Issues of Legality, Privacy and Ethics pp. 300¿303"
											},
											{
												"0": "CostX Files: Practice Answers - Part B revised"
											},
											{
												"0": "6.2 Slides & Notes: types of MSB"
											},
											{
												"0": "Textbook 2013 to 2017 & Study Guide comparisons"
											},
											{
												"0": "Prac-Wk2-PT-b-NetRep.pka"
											},
											{
												"0": "Submit Assessment 2: Part A: Building & Fire Scenario (25% Due Week 6)"
											},
											{
												"0": "SA Quiz 4 - Chapter B & 10 (Week 10)"
											},
											{
												"0": "OFFICE - Learning Activity 9.2: Drawings  Specifications"
											},
											{
												"0": "CostX Files: Practice Answers - Part B Hurdle Building Type 1"
											},
											{
												"0": "Submit Assessment 2: Part B: Passive Fire Protection (10% Due Week 8)"
											},
											{
												"0": "UO Database Fundamentals (Special Final Exam) ¿ Part A (Ref: SP32021)"
											},
											{
												"0": "Assessment 2 Part 2 Q&A Forum"
											},
											{
												"0": "Learning Activity: Structural Steelwork"
											},
											{
												"0": "2.2.3 Learning Activity: Take Off Quantities Quiz"
											},
											{
												"0": "Extra Truss Analysis Example"
											},
											{
												"0": "Week 4.1 Live class meeting (1): Roof, room tag, schedules (12.10.2020)"
											},
											{
												"0": "Continuous Assessment Week 7 & 8 Practical Submission Point"
											},
											{
												"0": "Learning Task 3.1 Read Chapter 2, Section 2.8 of Business Intelligence: A Managerial Approach"
											},
											{
												"0": "Viva Q & A"
											},
											{
												"0": "UO Database Fundamentals (Secondary Exam) ¿ Part B (Ref: SP42020)"
											},
											{
												"0": "4.3 Slides & Notes: Concrete Floor Construction"
											},
											{
												"0": "Quiz 3: Electrical, Construction and Psychrometrics (Week 7; 10%)"
											},
											{
												"0": "Self-Check Quiz: Week 8"
											},
											{
												"0": "Assignment Two Q & A Forum"
											},
											{
												"0": "Chapter X: Fire Protection Systems"
											},
											{
												"0": "UO Predictive Analytics (Final Exam) (Ref: SP42020)"
											},
											{
												"0": "6.3 Slides: Cost Control of Engineering Services"
											},
											{
												"0": "Wk4 Examples 2016 SP2"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part A: Construction Documents (Week 4; 20%)"
											},
											{
												"0": "Zoom meeting week 3: assessment 2 (report)"
											},
											{
												"0": "Assessment 1: Part A1 - Mathematics and Physics Quiz Attempt 1 (3%)"
											},
											{
												"0": "normalizationnotes"
											},
											{
												"0": "Assessment 1: Part A - BQ Quiz 1 (15%; Due Week 4)"
											},
											{
												"0": "UO Predictive Analytics (Secondary Exam) (Ref: SP12020)"
											},
											{
												"0": "Week 3: Drop-in Zoom meeting  (3) (28.01.2021)"
											},
											{
												"0": "Week 2 Q&A Forum"
											},
											{
												"0": "DBMS Structure ¿ Design Discussion"
											},
											{
												"0": "SUBMIT Assessment 2: Part C Energy Efficiency (Week 8; 10%)"
											},
											{
												"0": "Transcript: Problem Solving Process"
											},
											{
												"0": "Quiz - Self-Review Environment and Material Properties"
											},
											{
												"0": "Quiz 3: passive Fire Protection  (10% Due Week 7)"
											},
											{
												"0": "Assessment 2 Quiz 1 - Q&A"
											},
											{
												"0": "Assessment 1 Part A (Q&A)"
											},
											{
												"0": "Continuous Assessment Q&A Forum"
											},
											{
												"0": "Learning Task 8.1 Topic 3, Chapter 6 on Governing Digital Data pp. 365¿367"
											},
											{
												"0": "PART A: My Construction Company and Trade Summary 1 (Week 5, 20%)"
											},
											{
												"0": "Slides & notes - The Standard Normal Distribution"
											},
											{
												"0": "Submit Assessment 1: Part B (30%; Due Week 6)"
											},
											{
												"0": "Practical - Challenges & Questions"
											},
											{
												"0": "SUBMIT Assessment 2: Part B Ventilation (Week 6; 10%)"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 5) (Ref: SP32020)"
											},
											{
												"0": "Learning Activity: The scope of the AS 1684"
											},
											{
												"0": "Assessment 1 Part C - Q&A"
											},
											{
												"0": "UO Quantitative Methods for Business (Final Exam) (Ref: SP12021)"
											},
											{
												"0": "Assessment 2 Quiz 1 (Q&A)"
											},
											{
												"0": "Submit Assessment 2: Part A Construction of Roof Model and Part B: Works Schedule (40% Due Week 7)"
											},
											{
												"0": "Submit Assessment 2: Part C: Active Fire Protection and Performance (25% Due Week 10)"
											},
											{
												"0": "Mock Exam: paper 1"
											},
											{
												"0": "Learning Activity: Apply the perspectives"
											},
											{
												"0": "SUBMIT Assessment 2: (OLD) Part C Energy Efficiency (Week 8; 10%)"
											},
											{
												"0": "Discussion Forum - Questions and Challenges: Arrays"
											},
											{
												"0": "Learning Task 7.5: Data joining in Tableau"
											},
											{
												"0": "SP5 Indexes"
											},
											{
												"0": "Week 5 PracticalANS"
											},
											{
												"0": "Learning Activity: 8.2 Sensitivity Analysis Exercise"
											},
											{
												"0": "Week 4- Discussion and Q&A forum"
											},
											{
												"0": "Week 2.1: Introduction to Autodesk Revit & assessment 1 (Monday 12/04/2021, 8:30 pm)"
											},
											{
												"0": "Submit Assessment 1: Video Presentation and Audio (40% Due Week 7)"
											},
											{
												"0": "Assessment 1 Quiz 2 - Q&A Forum"
											},
											{
												"0": "Week 7- Discussion and Q&A forum"
											},
											{
												"0": "UO Programming Fundamentals (Secondary Exam) (Ref: SP12020)"
											},
											{
												"0": "3.2 Slides: Functional Briefs"
											},
											{
												"0": "Week 8 - Activities"
											},
											{
												"0": "Submission Point Assessment 1c: Programming (Query Processing)"
											},
											{
												"0": "Assessment 1 - Part B: Written report & presentation (45%; Due Week 5)"
											},
											{
												"0": "Week 3 PrePrac Questions"
											},
											{
												"0": "Normalisation ¿ Challenges & Questions"
											},
											{
												"0": "Discussion Forum - Problem Solving Exercise (Database Modelling & Design)"
											},
											{
												"0": "Week 4.1 Live class meeting (1): Roof, doors, windows and furnishing (16.10.2019)"
											},
											{
												"0": "Further notes ¿ BUIL 1024 ¿ Assessment 2 Part B"
											},
											{
												"0": "5.3 Slides & Notes: General Masonry Construction"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part B & C: Processing, Structural Properties, Environmental Properties & Specifications (Week 6; 24%)"
											},
											{
												"0": "Check your knowledge: Data Analytics"
											},
											{
												"0": "9.3 Slides & Notes: Comparing Cladding Systems"
											},
											{
												"0": "UO IT Fundamentals (Secondary Exam) Access Plan Part A (Ref: SP42019)"
											},
											{
												"0": "Characteristic objects - A Design Choice - Explore this with your peers & tutor"
											},
											{
												"0": "Learning Task 9.2.1: Quiz Instructions"
											},
											{
												"0": "UO Network Fundamentals (Final Exam) (Ref: SP32020)"
											},
											{
												"0": "UML Translation Video"
											},
											{
												"0": "Assessment 2: Part A - BQ Quiz 1 (15%) (Option 2)"
											},
											{
												"0": "Learning Task 8.4 Gartner¿s Pace-Layered Strategy"
											},
											{
												"0": "3.1 Slides & Notes: Types of Concrete Walls"
											},
											{
												"0": "Slides  and Notes: QSP Topic 4.1 - Billing"
											},
											{
												"0": "SUBMIT your Assessment 2: Parts A & B (Week 8; 30%)"
											},
											{
												"0": "IceCreams"
											},
											{
												"0": "Assessment 2B Q&A Forum"
											},
											{
												"0": "Slides and Notes: 1.2 Introduction to Cost X"
											},
											{
												"0": "7.4 Slides & Notes: Concrete frames and composite frames"
											},
											{
												"0": "UO Database Fundamentals (Special Final Exam) ¿ Part A (Ref: SP62020)"
											},
											{
												"0": "Assessment 2: Truss Analysis and Design Report Test (35%, Week 10)"
											},
											{
												"0": "Learning Activity: Roof Bracing"
											},
											{
												"0": "Continuous Assessments 1.1-1.6 discussion (Q&A)"
											},
											{
												"0": "Notes: Stored Procedures"
											},
											{
												"0": "UO Programming Fundamentals (Secondary Exam) (Access Plan ¿ Part A) (Ref: SP12020)"
											},
											{
												"0": "Simpsons Database (SP2)"
											},
											{
												"0": "7.4 Slides: Functional Analysis for Cost Planning"
											},
											{
												"0": "CostX Files: Practice Answers - Part D Hurdle Building Type 1"
											},
											{
												"0": "IceCreamExamples"
											},
											{
												"0": "Submit Assessment 1 - Part B: Regulation of Defective Residential Building Work (25%)"
											},
											{
												"0": "Learning Activity ¿ Discuss the past and current trends in the construction industry in Australia"
											},
											{
												"0": "Topic 10 Videos"
											},
											{
												"0": "SUBMIT your Assessment 2 - Part A: Construction Documents (Week 8; 20%)"
											},
											{
												"0": "Assessment 2 Part B - Q&A Forum"
											},
											{
												"0": "Learning Activity 4.2 - Part 1 of 2 - Formative"
											},
											{
												"0": "Submit Assessment 2: Report - Part A - Reading Journal and Part B - Analytical Report (50%)"
											},
											{
												"0": "Topic 4 concepts - Data Manipulation Language"
											},
											{
												"0": "UO Database Fundamentals (Secondary Exam) ¿ Part B (Ref: SP62020)"
											},
											{
												"0": "Autodesk Revit Q&A Forum"
											},
											{
												"0": "Normalisation"
											},
											{
												"0": "Part A: Discuss where 6 floor finishes types may be utilised. Give an example for each finish."
											},
											{
												"0": "UO Quantitative Methods for Business Part B (Final Exam) (Ref: SP12021)"
											},
											{
												"0": "Week 10 LIVE CLASS (17): Construction Hand drawings Review & end of course celebration (23.11.2020)"
											},
											{
												"0": "CostX Files: Practice Answers - Part C"
											},
											{
												"0": "UO Predictive Analytics (Final Exam) (Access Plan ¿ Part B) (Ref: SP12020)"
											},
											{
												"0": "UO Problem Solving and Programming (Final Exam) (Access Plan) - Part A (Ref: SP62020)"
											},
											{
												"0": "Slides and Notes: Components of a Force"
											},
											{
												"0": "Assessment 2 Part A: 1 Intro & 2 Locate Sites and Plans (5% due Week 2)"
											},
											{
												"0": "Building for growth: An Analysis of the Australian Building and Construction Industries"
											},
											{
												"0": "Luby Supplementary Assessment"
											},
											{
												"0": "Topic 3 concepts"
											},
											{
												"0": "Example Questions - Virtual Laboratory 1 & 2"
											},
											{
												"0": "Assessment 2:  PART A: BRIEF REPORT ADVICE (45% Week 10)"
											},
											{
												"0": "Week5 Slides S"
											},
											{
												"0": "Week 3.1 Live Class (1) : Mass modelling in Revit (2) (20.04.2020)"
											},
											{
												"0": "SUBMIT Assessment 2: Part B Ventilation (Week 5; 10%)"
											},
											{
												"0": "MATH 1075 SP1 2021 Part A Final Exam Answer Sheet"
											},
											{
												"0": "UO Problem Solving and Programming (Secondary Exam) (Ref: SP62020)"
											},
											{
												"0": "Mac Book users only: Tutorial for using Autodesk Revit Via Virtual Box (17.10.2019)"
											},
											{
												"0": "learning task 8.1: Resources"
											},
											{
												"0": "Virtual Labs 1 & 2 Assessments Discussion (Q & A)"
											},
											{
												"0": "YOURHOME-Materials-AutoclaveAeratedConcrete"
											},
											{
												"0": "Concept Video Handout: Functions - part II"
											},
											{
												"0": "UO Business Intelligence (Secondary Exam) (Ref: SP42020)"
											},
											{
												"0": "Continuous Assessment Week 3 & 4 Practical Submission Point"
											},
											{
												"0": "Assignment Help and Guides: Library help"
											},
											{
												"0": "UO Information Technology Fundamentals (Secondary Exam) (Ref: SP42020)"
											},
											{
												"0": "UO Business Intelligence (Final Exam) (Ref: SP12019)"
											},
											{
												"0": "Pairs for Assessment 2: Project"
											},
											{
												"0": "Submit Assessment 1: Part A Construction of Roof Model and Part B: Works Schedule (40% Due Week 7)"
											},
											{
												"0": "Week 1 content discussion (Q&A)"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part A: Introduction & History of construction materials (Week 1; 10%)"
											},
											{
												"0": "Construction Materials: Properties: Verification"
											},
											{
												"0": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion"
											},
											{
												"0": "Answer to the Question Set 8: Exception Handling"
											},
											{
												"0": "Learning Activity: Design Factors (Subgrade strength) (4 questions)"
											},
											{
												"0": "Activity 3O - Week 3 Review Quiz: Rearrangements"
											},
											{
												"0": "SUBMIT your Assessment 2 - Part C - Review & Reflection on Team Progress (Week 10; 5%)"
											},
											{
												"0": "Quiz 3: BIM & Software; Electrical Systems, Commissioning; Shop Drawings (Week 8; 13.34%)"
											},
											{
												"0": "Phase 2: User Stories  Conceptual Scenarios Template"
											},
											{
												"0": "HURDLE Assessment: Part D - Hurdle Building Type 1"
											},
											{
												"0": "Learning Task 8.3 Read Topic 4, Chapter 14 on Applying Data Gov. in Ecommerce pp. 384¿388"
											},
											{
												"0": "Assessment 1 Q&A Forum"
											},
											{
												"0": "Slides & Notes - Activity on Node (AoN) Diagrams"
											},
											{
												"0": "True or False: There is a negative cross price elasticity between 3D scanners and BIM. Explain your answer and add a graph"
											},
											{
												"0": "Submit Assessment 2: Part E (10%; Due Week 9)"
											},
											{
												"0": "Week 3.3 Live Class (3) : Revit Q&A  (14.10.2019)"
											},
											{
												"0": "Learning Activity: Materials-related injuries - post here"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 1) (Ref: SP62020)"
											},
											{
												"0": "Week 7: Contract Documents, BIM & Clash Detection (03.11.2020)"
											},
											{
												"0": "UO Business Intelligence (Final Exam) (Ref: SP42020)"
											},
											{
												"0": "Week 9 Database: Emergency lighting and signage"
											},
											{
												"0": "Learning Activity: 6.1 IRR Exercise"
											},
											{
												"0": "Slide deck from Week 2 Drop-in Session ¿ Empathy"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part D & E: Systems, Construction, Maintenance and  Final Review (Week 10; 34%)"
											},
											{
												"0": "5.1 Slides: The Cost of Design Decisions"
											},
											{
												"0": "Using AD/AS model Explain in which direction do the two polices change the aggregate demand."
											},
											{
												"0": "SUBMIT your Assessment 1 - Part B - Construction Connection Details & Conclusion (Week 4; 17.5%)"
											},
											{
												"0": "Week 9 content discussion (Q&A)"
											},
											{
												"0": "Suggestions for amendments for next term"
											},
											{
												"0": "Week 4 - Activities"
											},
											{
												"0": "UO Predictive Analytics (Sample Final Exam) (Ref: SP12020)"
											},
											{
												"0": "Learning Activity - ASMM & Rules Governing Measurement of Substructure"
											},
											{
												"0": "Week 9 Q&A Forum"
											},
											{
												"0": "Week 9 Drop-in session ppt"
											},
											{
												"0": "Slides & notes - Rescheduling Projects"
											},
											{
												"0": "Submit Assessment 2: Part B (15%; Due Week 4)"
											},
											{
												"0": "Formative Version of Mathematics and Physics Quiz Attempt 1 - DOES NOT COUNT TOWARDS COURSE GRADE"
											},
											{
												"0": "Submission Point - Part 2: Dashboard"
											},
											{
												"0": "Assessment 2 Part 1 Q&A Forum"
											},
											{
												"0": "TriggerExamples"
											},
											{
												"0": "UO Database Fundamentals (Final Exam) ¿ Part A (Ref: SP62020)"
											},
											{
												"0": "Topic 6 Videos"
											},
											{
												"0": "Learning Activity: Retaining structures (5 questions)"
											},
											{
												"0": "Has been replaced by the H5P activity: Activity 5A - Knowledge Check Questions"
											},
											{
												"0": "Assessment 1b: Post-it note application - Submit point"
											},
											{
												"0": "2.3 Slides & Notes: Fabrication and erection"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part B: Structural, Fire & Environmental properties (Week 6; 20%)"
											},
											{
												"0": "UO Programming Fundamentals (Live Programming Test 2) (Ref: SP12020)"
											},
											{
												"0": "UO Network Fundamentals (Final Exam) (Ref: SP32019)"
											},
											{
												"0": "HURDLE Assessment: Part E - Hurdle Building Type 1"
											},
											{
												"0": "Assessment 2 Part B: Substructure (15% Due Week 4)"
											},
											{
												"0": "Graphs Parts A & B - Quiz"
											},
											{
												"0": "Assessment 1: Project Part E: Acoustics and Lighting (10%; Submit Week 10)"
											},
											{
												"0": "Assessment 2 Q&A Forum"
											},
											{
												"0": "Slides & notes - Introduction to Network Diagrams"
											},
											{
												"0": "Transcript: An Introduction to Programming"
											},
											{
												"0": "Learning Task 7.1 Review Chapter 5 of Business Intelligence: A Managerial Approach"
											},
											{
												"0": "HURDLE Assessment: Week 3 work on Building P"
											},
											{
												"0": "Complex M:N Join Statement ¿ Questions & Challenges"
											},
											{
												"0": "Assessment 2: Part B - Online Quiz (20%; Due Week 10)"
											},
											{
												"0": "Learning Task 9.2: Hot Water Services"
											},
											{
												"0": "UO Essential Mathematics 2: Calculus (Secondary Exam) (Ref: SP3 2021)"
											},
											{
												"0": "UO IT Fundamentals (Final Exam) Access Plan Part B (Ref: SP42019)"
											},
											{
												"0": "Practical Q&A Forum"
											},
											{
												"0": "Slides and Notes: 2.1 - ASMM"
											},
											{
												"0": "2.1.1 Learning Activity: Using ASMM Quiz"
											},
											{
												"0": "Self-Check Quiz: Week 6"
											},
											{
												"0": "Week 3 Practical S"
											},
											{
												"0": "3.1 Slides: Introduction to Building Elements"
											},
											{
												"0": "Basic Index Theory (Youtube)URL"
											},
											{
												"0": "Week 5 PrePracQuestions"
											},
											{
												"0": "Sets & Maps - Quiz"
											},
											{
												"0": "Assessment 1 Part B Q&A Forum"
											},
											{
												"0": "Learning Task 4.1 Read Chapter 1, section 1.5 to 1.6 of Business Intelligence: A Managerial Approach"
											},
											{
												"0": "Learning Activity: What is soil and how is it formed? (5 questions)"
											},
											{
												"0": "S2 Week 10 topic 2: Design factors - part 1"
											},
											{
												"0": "Excel file: Student Engagement record"
											},
											{
												"0": "SUBMIT Assessment 2: (OLD) Part D Lighting and Acoustics (Week 10; 10%)"
											},
											{
												"0": "UO Programming Fundamentals (Sample Final Exam) (Ref: SP42020)"
											},
											{
												"0": "Week 4 content discussion (Q&A)"
											},
											{
												"0": "HURDLE Assessment: Submit Week 4 work on Building P"
											},
											{
												"0": "Inheritance & Relational Schemas"
											},
											{
												"0": "Assessment 1-Part A: Q&A"
											},
											{
												"0": "Week 6: Self-Review Quiz (6 questions)"
											},
											{
												"0": "LTIFR Scenarios 1 and 2"
											},
											{
												"0": "Week 5 content discussion (Q&A)"
											},
											{
												"0": "SUBMIT your Assessment 2 - Part A: Construction Documents (Week 8; 35%)"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 7) (Ref: SP62020)"
											},
											{
												"0": "UO Big Data Analytics (Secondary Exam) (Ref: SP12021)"
											},
											{
												"0": "Part B: Quiz"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 4) (Ref: SP62020)"
											},
											{
												"0": "UO Problem Solving and Programming (Final Exam) (Ref: SP62019)"
											},
											{
												"0": "Aggregate examples"
											},
											{
												"0": "SUBMIT Assessment 2 - Part A: Background & Analysis of Firm (30%; Week 6)"
											},
											{
												"0": "Concept video handout: Control Structures - for loop"
											},
											{
												"0": "Part C: List three major types of heavy duty pavements and examine the properties and construction detailing of each and compare in note form their application and various advantages and /or disadvantages."
											},
											{
												"0": "SUBMIT Assessment 1 - Part A: Design and Documentation (Week 5; 20%)"
											},
											{
												"0": "UO Quantitative Methods for Business (Final Exam) (Ref: SP12020)"
											},
											{
												"0": "Construction Requirements and Safety Plans Task Instructions"
											},
											{
												"0": "Learning Activity 7.2: Answer"
											},
											{
												"0": "HURDLE Assessment: Submit Week 7 work on Building P"
											},
											{
												"0": "Concrete works"
											},
											{
												"0": "UO Predictive Analytics (Final Exam) (Ref: SP12020)"
											},
											{
												"0": "4.1 Slides: Introduction to Building Elements"
											},
											{
												"0": "Week 9: Self-Review Quiz (5 questions)"
											},
											{
												"0": "Functional Dependencies"
											},
											{
												"0": "Assessment 1 Part B: Construct a Wall and Roof Model - (15% Due Week 5)"
											},
											{
												"0": "UO Programming Fundamentals (Live Programming Test 4) (Ref: SP12020)"
											},
											{
												"0": "Learning Activity: Rafter Design (10 questions)"
											},
											{
												"0": "Deleting data: Challenges & Questions"
											},
											{
												"0": "Assessment 2 - Part B: Accident Database Analysis (35%)"
											},
											{
												"0": "Week 9.1 LIVE CLASS (15): Hand drawing (16.11.2020)"
											},
											{
												"0": "Week 4.2: Model detailing in Revit (2) (15.10.2020)"
											},
											{
												"0": "UO Network Fundamentals (Secondary Exam) (Ref: SP32019)"
											},
											{
												"0": "Self-Check Quiz: Week 5"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 1) (Ref: SP32020)"
											},
											{
												"0": "Learning Activity: Designing Purlins"
											},
											{
												"0": "2.1 Slides & Notes: Framing Design Components"
											},
											{
												"0": "Discussion Forum - Questions and Challenges: Defining Classes Part 1"
											},
											{
												"0": "Week 7 Learning Activity Forum: Exits and Escape Paths for the Bean Bar Cafe and Jamal's Gym"
											},
											{
												"0": "Week 4.2: LIVE CLASS MEETING (2) (30.04.2020)"
											},
											{
												"0": "2017 SP2"
											},
											{
												"0": "UO Problem Solving and Programming (Final Exam) (Access Plan) - Part B (Ref: SP62020)"
											},
											{
												"0": "Learning Activity: Deep footing (5 questions)"
											},
											{
												"0": "Week 1 Q&A Forum"
											},
											{
												"0": "Assessment 2 Part B: 3 Substructure (15%, due end of Week 4)"
											},
											{
												"0": "Week 7: Self-Review Quiz"
											},
											{
												"0": "Week 6: Electrical Systems (27.10.2020)"
											},
											{
												"0": "UO Programming Concepts (Final Exam) (Ref: SP32021)"
											},
											{
												"0": "Learning Activity: Wall Bracing (3 questions)"
											},
											{
												"0": "Transcript: Python Standard Library"
											},
											{
												"0": "3.2 Construction Professionals - Slides and Notes:"
											},
											{
												"0": "UO IT Fundamentals (Final Exam) Access Plan Part B (Ref: SP12020)"
											},
											{
												"0": "Week 10 LIVE CLASS (17): Construction Hand drawings Review & end of course celebration (10.06.2021)"
											},
											{
												"0": "7.3 Slides: Cost Control of Engineering Services"
											},
											{
												"0": "Submit Assessment 1: Part C (20%; Due Week 9)"
											},
											{
												"0": "Practice activity: Part C - Building Type 1"
											},
											{
												"0": "Slides and Notes: Structures and loads"
											},
											{
												"0": "UO Quantitative Methods for Business (Secondary Exam) (Ref: SP12021)"
											},
											{
												"0": "Lecture files - ppt & Pdfs (back Up)"
											},
											{
												"0": "Week7a L"
											},
											{
												"0": "Learning Activity:  Pavements and Pavement Materials (5 questions)"
											},
											{
												"0": "Amendments & clarifications Part A"
											},
											{
												"0": "Week 8 LIVE CLASS (13): Construction Documents Q&A (14.11.2019)"
											},
											{
												"0": "UO Predictive Analytics (Secondary Exam) (Ref: SP1 2021)"
											},
											{
												"0": "Week9 SPs"
											},
											{
												"0": "Boyce-Codd Normal Form"
											},
											{
												"0": "5.2 Slides: Averages, Norms, and Deviations"
											},
											{
												"0": "SUBMIT your Assessment 2 - Part B.1 - Review & Reflection on Team Progress (Week 10; 15%)"
											},
											{
												"0": "Learning  Activity: Soil Classification"
											},
											{
												"0": "UO Programming Fundamentals (Final Exam) (Ref: SP12020)"
											},
											{
												"0": "Week 9 Drop in session"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 2) (Ref: SP32021)"
											},
											{
												"0": "Week 7 LIVE CLASS (12): Construction Documents Q&A (9.11.2019)"
											},
											{
												"0": "Answer to the Question Set 7: Polymorphism and Abstract Classes"
											},
											{
												"0": "Assessment 1 Quiz 3 - Q&A Forum"
											},
											{
												"0": "Submit Assessment 2: Stages 2,3 & 4 (30%; Due Week 10)"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 4) (Ref: SP32020)"
											},
											{
												"0": "UO IT Fundamentals (Final Exam) (Ref: SP42019)"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 8) (Ref: SP32020)"
											},
											{
												"0": "Share your reading journal entry for Halicioglu, Arditi, & Gunhan, 2012"
											},
											{
												"0": "3.4 Slides & Notes: In-Situ Walls"
											},
											{
												"0": "Assessment 2A Q&A Forum"
											},
											{
												"0": "Has been replaced by the H5P activity: Activity 10B - Knowledge Check Quiz"
											},
											{
												"0": "Week 9 LIVE CLASS (13): Construction Hand drawings Q&A (04.06.2020)"
											},
											{
												"0": "Clustered vs. Nonclustered Index Structures in SQL Server [HD, 720p]"
											},
											{
												"0": "Fire Safety of Concrete Buildings: Cement Concrete & Aggregates Australia"
											},
											{
												"0": "CreateSimpsonsExample 2016 SP2"
											},
											{
												"0": "UO Programming Fundamentals (Secondary Exam) (Ref: SP42020)"
											},
											{
												"0": "UO Programming Fundamentals (Live Programming Test 8) (Ref: SP12020)"
											},
											{
												"0": "Assessments Q & A Forum"
											},
											{
												"0": "Learning Task - 7.2 - Let¿s go deeper with functions¿"
											},
											{
												"0": "Week 10- Discussion and Q&A forum"
											},
											{
												"0": "QSP Tutorial 3.4: Measuring a Raft Slab Using CostX"
											},
											{
												"0": "Worked example of using different types of IndexesURL"
											},
											{
												"0": "Clustered and Non-Clustered Indexes explained"
											},
											{
												"0": "Assessment 1-Part D: Q&A"
											},
											{
												"0": "8.2  Slides & Notes: Pre-stressed Concrete  Rapid Construction"
											},
											{
												"0": "Submit Assessment 2: Part E (12%; Due Week 10)"
											},
											{
												"0": "Week 5 content Q & A"
											},
											{
												"0": "Drawings & Specifications Meeting (12.05.2019)"
											},
											{
												"0": "Quiz 1: Briefing, Design and Regulatory Compliance (Week 3; 10%)"
											},
											{
												"0": "SUBMIT Assessment 1 - Parts B, C, D, E & F: Project - Residential House Analysis Report (Week 10; 60%)"
											},
											{
												"0": "Quiz 4: Building Information Modelling: 4D and 5D BIM (10% Due Week 10)"
											},
											{
												"0": "CostX Files: Practice Answers - Week 8"
											},
											{
												"0": "Week 3 PPT"
											},
											{
												"0": "Week 4: Self-Review Quiz (1 question)"
											},
											{
												"0": "Assessment 1 - Part B - Defective Residential Building Work & Part C - Offer and Acceptance"
											},
											{
												"0": "7.2 Slides: Complex and Smart Buildings"
											},
											{
												"0": "HURDLE Assessment: Week 9 work on Building P"
											},
											{
												"0": "6.1 Slides: Various Forms of Building Cost Data"
											},
											{
												"0": "Learning Task 5.1 Read Chapter 4, Section 4.1-4.4 of Business Intelligence: A Managerial Approach"
											},
											{
												"0": "Week 3 PrePrac ANS"
											},
											{
												"0": "Assessment 2-Quiz C: Q&A"
											},
											{
												"0": "Assessment 1 Part A - FAQs"
											},
											{
												"0": "Predicates ¿ challenges & questions."
											},
											{
												"0": "Learning Activity: Estimating Methods"
											},
											{
												"0": "SA Quiz 2 ¿ Chapt 2 & 3"
											},
											{
												"0": "Zoom recording 18/3/19 Assngt 1-3 & Exam"
											},
											{
												"0": "2.2.3 Learning Activity: Using Dim Paper to Prepare a BQ"
											},
											{
												"0": "CostX Files: Practice Answers - Week 5"
											},
											{
												"0": "Assessment 1 Part A Q&A Forum"
											},
											{
												"0": "Assignment 1 Q&A Forum"
											},
											{
												"0": "Construction Materials: Properties: Performance specification"
											},
											{
												"0": "Quiz: Chapter 7 on Inheritance (Week 6)"
											},
											{
												"0": "Submission Point: Prescriptive Analytics"
											},
											{
												"0": "Week 7.1 LIVE CLASS (12):Week 7.1: Assessment 2-A: Construction Documents (2) (17.05.2021)"
											},
											{
												"0": "HURDLE Assessment: Submit Week 10 work on Building P"
											},
											{
												"0": "Activity 10B image"
											},
											{
												"0": "5.2 Slides: Height and Shape"
											},
											{
												"0": "Topic 4 Videos"
											},
											{
												"0": "Categorising Course Emails CIVE1007"
											},
											{
												"0": "FLASHOVER AND BACKDRAFT: A Primer"
											},
											{
												"0": "Assessment 2 Quiz 2 Q&A Forum"
											},
											{
												"0": "Luby Mitchell LUBMY003 89045 Supplementary Assessment Mitchell Luby 110270670"
											},
											{
												"0": "Week 3 Drop in session"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part A: Introduction & History, Extraction and processing of construction materials (Week 4; 20%)"
											},
											{
												"0": "2.2.2 Learning Activity: Working with Dimension Paper Quiz"
											},
											{
												"0": "Slides and Notes: 7.2 - ASMM Rules"
											},
											{
												"0": "Submit Assessment 1 - Part A - CONCEPT REPONSES (15%)"
											},
											{
												"0": "Slides and Notes: 8.1 - Windows  Doors"
											},
											{
												"0": "CostX Files: Practice Answers - Week 9"
											},
											{
												"0": "Quiz D - Materials and Products"
											},
											{
												"0": "Calculate with EXCEL"
											},
											{
												"0": "SA Quiz 3 - Chapter 4 & 5"
											},
											{
												"0": "CostX Files: Practice Answers - Part E"
											},
											{
												"0": "UO Quantitative Methods for Business (Final Exam) (Part B) (Ref: SP12021)"
											},
											{
												"0": "Week 9- Discussion and Q&A forum"
											},
											{
												"0": "Week 3 Practical Results"
											},
											{
												"0": "Construction Materials: Disposal"
											},
											{
												"0": "Submission Point Assessment 2: Problem Solving Exercise (Database Modelling & Design)"
											},
											{
												"0": "Tutor Q&A forum"
											},
											{
												"0": "Online Exam Q&A Forum"
											},
											{
												"0": "LARSY006 UO Structures 1 Supplementary Assessment Details 2020 SP6 Samuel Larosa"
											},
											{
												"0": "Tutor Documents"
											},
											{
												"0": "Reading: Smith J, Jagger D, Love P & Olatunje OA 2016, Table 4.3, in Building Cost Planning for the Design Team, London: Routledge pp 118"
											},
											{
												"0": "Learning Activity: Fire Process"
											},
											{
												"0": "Transcript: User Controlled Inputs & Outputs"
											},
											{
												"0": "Activity 1O - Weekly Review Quiz - Polynomials: expansion and factorisation"
											},
											{
												"0": "UO Database Fundamentals (Final Exam) ¿ Part A (Ref: SP32021)"
											},
											{
												"0": "Table 2: Planning the proposed site layout"
											},
											{
												"0": "Week 8 Activity Forum: Sequencing Activity"
											},
											{
												"0": "UO Network Fundamentals (Secondary Exam) (Ref: SP32020)"
											},
											{
												"0": "UO Business Intelligence (Final Exam) (Ref: SP1 2021)"
											},
											{
												"0": "Continuous Assessment Week 8 Practical Submission Point"
											},
											{
												"0": "Topic 10 concepts"
											},
											{
												"0": "Learning Activity: Purlin Design"
											},
											{
												"0": "NCC: Building Code of Australia - Website link"
											},
											{
												"0": "Week 4 PrePracQuestions"
											},
											{
												"0": "Week 4.3 : Revit Q&A Meeting (3) (20.10.2019)"
											},
											{
												"0": "UO Database Fundamentals (Final Exam) ¿ Part B (Ref: SP32020)"
											},
											{
												"0": "Assessment Q & A Forum"
											},
											{
												"0": "Week 2: Self-Review Quiz (5 questions)"
											},
											{
												"0": "Week 2 content Q &A"
											},
											{
												"0": "Assessment 1 Part A: Bridge Visit Report (15%; Due Week 3)"
											},
											{
												"0": "Learning Activity: Purlin (5 questions)"
											},
											{
												"0": "Learning Task 6.5 Case Study: Predicting Customer Buying Patterns - The Target Story"
											},
											{
												"0": "SUBMIT Assessment 1 - Part A: AIR CONDITIONING SYSTEMS, CALCULATIONS & HYDRAULIC SERVICES  (Week 5; 25%)"
											},
											{
												"0": "8.1 Slides & Notes: Suspended Flooring Concepts"
											},
											{
												"0": "Slides and Notes: QSP Topic 1.2 - Introduction to Cost X"
											},
											{
												"0": "Assessment 2: Part B - BQ Quiz 2 (25%; Due Week 10) (copy)"
											},
											{
												"0": "Learning Module: Resource Smoothing"
											},
											{
												"0": "HURDLE Assessment: Submit Week 5 work on Building P"
											},
											{
												"0": "Part C: Trade Summary 2 (18%) and Part D: Tender Schedule and Cover Letter (12%) (Week 9)"
											},
											{
												"0": "Quiz: Algebra and re-arranging equations"
											},
											{
												"0": "SUBMIT Assessment 1 - Part C: Interrogating a BIM Model (Week 10; 25%)"
											},
											{
												"0": "10.2 Slides: Cost Planning Enviornmentally Smart Buildings"
											},
											{
												"0": "Learning Activity: Concrete works"
											},
											{
												"0": "Week 9 Learning Activity Forum : Fire safety in special use buildings discussion - Theatres and proscenium curtains"
											},
											{
												"0": "Selecting data: Challenges & Questions"
											},
											{
												"0": "CostX Files: Practice Answers - Week 6"
											},
											{
												"0": "Slides & Notes - Work Breakdown Structure"
											},
											{
												"0": "Week 7.2 LIVE CLASS (13): Assessment 2-A: Construction Documents (3) (20.05.2021)"
											},
											{
												"0": "Part B: Internal rate of return (IRR) Questions (20%)"
											},
											{
												"0": "Assessment 2: Part A - BQ Quiz 1 (15%; Due Week 4)"
											},
											{
												"0": "UO Programming Fundamentals (Final Exam) (Access Plan ¿ Part A) (Ref: SP42020)"
											},
											{
												"0": "UO IT Fundamentals (Final Exam) Access Plan Part B (Ref: SP12021)"
											},
											{
												"0": "UO Programming Fundamentals (Final Exam) (Access Plan ¿ Part A) (Ref: SP12020)"
											},
											{
												"0": "SUBMIT Assessment 2: Part A Solar radiation and Thermal Comfort (Week 4; 10%)"
											},
											{
												"0": "Construction Materials: Properties: Tolerances"
											},
											{
												"0": "5.1 Slides: Various Forms of Building Cost Data"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 4) (Ref: SP32021)"
											},
											{
												"0": "Packet Tracer ¿ Introduction to Packet Tracer"
											},
											{
												"0": "Week 8 content discussion (Q&A)"
											},
											{
												"0": "8.1.1 Learning Activity: ASMM Clause and unit"
											},
											{
												"0": "1.4 Slides & Notes: Preliminaries, Site Investigations  Review of Soils"
											},
											{
												"0": "Learning Activity: Structure Elements (1 question)"
											},
											{
												"0": "Learning Activity: Regulating for Building Efficiency and Green Ratings"
											},
											{
												"0": "Weeks 3 & 4 Practical Activity Answer"
											},
											{
												"0": "PART B: Trade Summary 2 (Week 8, 15%)"
											},
											{
												"0": "UO IT Fundamentals (Secondary Exam) (Ref: SP12021)"
											},
											{
												"0": "Zoom Session 2 -Solver & Linear Programming in Excel"
											},
											{
												"0": "Slides and Notes: QSP Topic 7.2 - ASMM Rules"
											},
											{
												"0": "Learning Task 4.2 Build Visuals Using the Q&A Feature"
											},
											{
												"0": "Assessment 2:  PART A: BRIEF REPORT ADVICE"
											},
											{
												"0": "Quiz: Check your answers to the Rearranging Equation problems"
											},
											{
												"0": "Learning Activity: Roof & Wall Bracing (3 questions)"
											},
											{
												"0": "UO Database Fundamentals (Sample Exam 2) (Ref: SP32020)"
											},
											{
												"0": "Week 6 content discussion (Q&A)"
											},
											{
												"0": "Slides and Notes: QSP Topic 9.1 - Finishes"
											},
											{
												"0": "Q&A - Mission Impossible"
											},
											{
												"0": "Submission Point Assessment 3: Programming (Query Processing)"
											},
											{
												"0": "Z?eljeznic?ki most, Mursko Sredis?c´e (Croatia).1"
											},
											{
												"0": "SUBMIT Assessment 2 - Part A - Building Assessment & Part B - Performance Solutions for Andrea Moharana"
											},
											{
												"0": "UO Big Data Analytics (Final Exam) (Ref: SP12021)"
											},
											{
												"0": "UO Essential Mathematics 2: Calculus (Final Exam) (Ref: SP32021)"
											},
											{
												"0": "Week 2 - ActivitiesSOLUTIONS"
											},
											{
												"0": "Assessment 1 - Part B: Spaghetti Bridge Written Report & Video Presentation; Due Week 7"
											},
											{
												"0": "Revit Q&A Meeting 3 (29.05.2019)"
											},
											{
												"0": "Assessment 2: Assignment Scenario 1 Forum"
											},
											{
												"0": "Learning Activity 8.2: Answer"
											},
											{
												"0": "Assessment 2-Quiz B: Q&A"
											},
											{
												"0": "Additional MSDN Resources"
											},
											{
												"0": "Part B: List five items how a slab could fail.   Select any two and provide further discussion on why they could fail and what precaution should be taken to prevent this occurrence."
											},
											{
												"0": "4.4 Slides: Calculating Perimeter-on-Plan"
											},
											{
												"0": "UO Network Fundamentals (Final Exam) (Ref: SP32021)"
											},
											{
												"0": "Learning Task 9.2.2: Hot Water Services Instructions"
											},
											{
												"0": "Additional example: Deployment diagrams"
											},
											{
												"0": "Learning activity: Compare two cost plans"
											},
											{
												"0": "eReading: Vertical safe separation distance between openings in multi-storey buildings having a fire resistant spandrel"
											},
											{
												"0": "Quiz 1: Deterministic Scheduling (10% Due Week 3)"
											},
											{
												"0": "Assignment One Q & A Forum"
											},
											{
												"0": "9.1 Slides & Notes: Cladding Design"
											},
											{
												"0": "Week 5.2 LIVE CLASS (10): Sheets generation in Revit (2) (25.10.2019)"
											},
											{
												"0": "Week 8 LIVE CLASS (14): Construction Documents Q&A (09.10.2020)"
											},
											{
												"0": "UO Programming Fundamentals (Final Exam) (Access Plan ¿ Part B) (Ref: SP42020)"
											},
											{
												"0": "Concept Completion 2 (Weeks 4, 5 & 6)"
											},
											{
												"0": "UO Programming Fundamentals (Secondary Exam) (Access Plan ¿ Part B) (Ref: SP12020)"
											},
											{
												"0": "UO Problem Solving and Programming (Final Exam) (Ref: SP32021)"
											},
											{
												"0": "Activity 3O - Week 3 Review Quiz: Solutions in Interval Notation"
											},
											{
												"0": "SUBMIT Assessment 1 - Part C: BIM Model Interrogation  (Week 10; 25%)"
											},
											{
												"0": "SQL - CASE Statements"
											},
											{
												"0": "Submit Assessment 1 - Part B - CASE STUDY RESPONSES (25%)"
											},
											{
												"0": "Assessment 2: Project (60% Due Week 10)"
											},
											{
												"0": "Week 3: Self-Review Quiz (3 questions)"
											},
											{
												"0": "Week10"
											},
											{
												"0": "Quiz 4: Active Systems & Egress  (10% Due Week 9)"
											},
											{
												"0": "Discussion Forum - Questions and Challenges: Basic Java"
											},
											{
												"0": "Topic 5 Videos Part 1 - FamilyGuy &CounterfeitNotes"
											},
											{
												"0": "how to export an image from revit"
											},
											{
												"0": "RLB Digest 2017: Adelaide"
											},
											{
												"0": "Slides and Notes: 7.1 - Plasterboard Lining"
											},
											{
												"0": "Self-Check Quiz: Week 7"
											},
											{
												"0": "eReading: Mind The Gap: The Dilemma Of Flexible Fire Barriers"
											},
											{
												"0": "Download: Soils and foundations case study"
											},
											{
												"0": "Submission Point - Part 1: Business Proposal"
											},
											{
												"0": "Learning Task 5.4 Use Case: Global Superstore"
											},
											{
												"0": "Learning Activity: Find POP Ratio"
											},
											{
												"0": "Week 8 Submission"
											},
											{
												"0": "Discussion Forum - Questions and Challenges: Defining Classes Part 2"
											},
											{
												"0": "Week11 Triggers"
											},
											{
												"0": "4.2 Slides: Building Elements ¿ Measurement Rules"
											},
											{
												"0": "CostX Files: Practice Answers - Part C Hurdle Building Type 1"
											},
											{
												"0": "Week 7 content discussion (Q&A)"
											},
											{
												"0": "UO Programming Fundamentals (Secondary Exam) (Ref: SP42019)"
											},
											{
												"0": "UO Problem Solving and Programming (Final Exam) (Special) (Ref: SP62020)"
											},
											{
												"0": "1.1 Slides: The role of the Quantity Surveyor"
											},
											{
												"0": "Assessment 1 Part A: Construction of Wall and Roof Model (20% Due Week 6)"
											},
											{
												"0": "RyanV Supplementary Assessment"
											},
											{
												"0": "Continuous Assessment Quiz Q&A Forum"
											},
											{
												"0": "Exploring the basic SELECT statement"
											},
											{
												"0": "SUBMIT Assessment 2 Part B: IRR Calculations (Excel file) (20%)"
											},
											{
												"0": "UO Big Data Analytics (Final Exam) (Ref: SP42020)"
											},
											{
												"0": "Week 2 - Activities"
											},
											{
												"0": "1.3 Slides: The Methods and Techniques of Cost Planning"
											},
											{
												"0": "Continuous Assessment Week 1 & 2 Practical Submission Point"
											},
											{
												"0": "Concept Completion 3 (Weeks 7 & 8)"
											},
											{
												"0": "Web Dev topic questions and answers - Week 6 A"
											},
											{
												"0": "Learning Task 6.5 Case Study: Target Discussion Forum"
											},
											{
												"0": "Advice for future students"
											},
											{
												"0": "UO Programming Concepts (Secondary Exam) (Ref: SP32021)"
											},
											{
												"0": "UO IT Fundamentals (Secondary Exam) Access Plan Part B (Ref: SP42019)"
											},
											{
												"0": "CostX Files: Practice Answers - Week 4"
											},
											{
												"0": "Complex WHERE clauses & Logical Conditions: Challenges & Questions"
											},
											{
												"0": "Inserting data: Challenges & Questions"
											},
											{
												"0": "Practice activity: Building Option 1A - Part B"
											},
											{
												"0": "Continuous Assessment Week 2 Practical Submission Point"
											},
											{
												"0": "Assessment 2a: Team interface design - Submit point"
											},
											{
												"0": "Assessment 1: Part B - BQ Quiz 2 (25%; Due Week 10)"
											},
											{
												"0": "Quiz 3: Resource allocation, Cash flow and Time/cost (crashing) (10% Due Week 8)"
											},
											{
												"0": "UO Problem Solving and Programming (Secondary Exam) (Ref: SP32020)"
											},
											{
												"0": "Submit Assessment 1: Part A (10%; Due Week 3)"
											},
											{
												"0": "Week 5 Learning Activity Forum - Truss Postcard"
											},
											{
												"0": "Assessment 2 Quiz 1 Q&A Forum"
											},
											{
												"0": "Week 5.1 LIVE CLASS (8): Sheets generation in Revit (1) (19.10.2020)"
											},
											{
												"0": "Slides & notes - PERT Explanation"
											},
											{
												"0": "7.2 Slides & Notes: Underpinning for MSBs"
											},
											{
												"0": "UO Database Fundamentals (Special Final Exam) ¿ Part B (Ref: SP32021)"
											},
											{
												"0": "6.1 Climate change & greenhouse gases, Electricity supply sector"
											},
											{
												"0": "4.4 Slides & Notes: Concrete Floor Finishes"
											},
											{
												"0": "SUBMIT Assessment 2: Truss Analysis and Design Report Test (35%)"
											},
											{
												"0": "UO Predictive Analytics (Final Exam) (Ref: SP1 2021) (copy)"
											},
											{
												"0": "Introduction to Querying Databases"
											},
											{
												"0": "Learning Activity: 6.2 IRR Exercise"
											},
											{
												"0": "selleys"
											},
											{
												"0": "Assessment 2 Part C: Superstructure Part D: Services and Finishes and Entire House Study Report (40% Due Week 10)"
											},
											{
												"0": "HURDLE Assessment: Part C - Hurdle Building Type 1"
											},
											{
												"0": "Topic 5 Videos Part 2 - Joins In ANY Outer"
											},
											{
												"0": "4.2 Slides & Notes: Concrete Floor Joints"
											},
											{
												"0": "UO IT Fundamentals (Secondary Exam) (Ref: SP42019)"
											},
											{
												"0": "Learning Task 8.2 Read Topic 2, Chapter 3 on Data Governance pp. 329¿332"
											},
											{
												"0": "Week 3.1 Live Class (1) : Mass modelling in Revit (1) (09.10.2019)"
											},
											{
												"0": "Learning Task 8.1: Quiz on \"Wet Areas\" Instructions"
											},
											{
												"0": "Concrete works - EXCEL with REMARKS"
											},
											{
												"0": "Submission Point: Data Aggregation and Graphing"
											},
											{
												"0": "Slides & Notes - Fast tracking and crashing"
											},
											{
												"0": "Week 10 content discussion (Q&A)"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 7) (Ref: SP32020)"
											},
											{
												"0": "Learning Task 9.1 Read Chapter 8, Section 8.5 of Business Intelligence: A Managerial Approach"
											},
											{
												"0": "UO Business Intelligence (Final Exam) (Ref: SP12020)"
											},
											{
												"0": "UO IT Fundamentals (Final Exam) Access Plan Part A (Ref: SP42019)"
											},
											{
												"0": "5.2 Slides & Notes: Engineered Timber Products"
											},
											{
												"0": "UO Quantitative Methods for Business (Secondary Exam) (Ref: SP32020)"
											},
											{
												"0": "Week 5.2: Sheets generation in Revit (2) (Thursday 06/05/2021, 7:30 pm)"
											},
											{
												"0": "Learning Activity: Slope Instability (5 questions)"
											},
											{
												"0": "QSP Tutorial 3.3: Setting Up of CostX for Measurement of a Raft Slab"
											},
											{
												"0": "Zoom session 1 on weeks 1 & 2 with Excel presented by Chris Jeffs"
											},
											{
												"0": "Quiz 2: Air Conditioning Systems, Calculations and Hydraulic Services  (Week 6; 12.5%)"
											},
											{
												"0": "Week 1 content Q & A"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 6) (Ref: SP32020)"
											},
											{
												"0": "Learning Activity: Contact IT Helpdesk to delete"
											},
											{
												"0": "Learning Activity: Pavements and Pavement Materials (5 questions)"
											},
											{
												"0": "SUBMIT Assessment 1 - Part B: Verandah Design (30%; Week 4)"
											},
											{
												"0": "learning task 8.2: Resources"
											},
											{
												"0": "SA Quiz 1 - Week 1  & Chapt A"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 8) (Ref: SP62020)"
											},
											{
												"0": "SUBMIT Assessment 2: Attempt 2 Part C Energy Efficiency (Week 8; 10%)"
											},
											{
												"0": "HURDLE Assessment: Week 1 work on Building P"
											},
											{
												"0": "Concept 6.1: Duress - Notes"
											},
											{
												"0": "Transcript: If Statements"
											},
											{
												"0": "10.1  Slides & Notes: Roof Designs"
											},
											{
												"0": "Revit Q&A Meeting 4 (02.06.2019)"
											},
											{
												"0": "Part C: Risk Analysis (20%)"
											},
											{
												"0": "Submission Point Assessment 1b: Database Modelling & Design"
											},
											{
												"0": "Review: Section J of the NCC , volume 2 - ABCB"
											},
											{
												"0": "Week 6 Q&A Forum"
											},
											{
												"0": "Assessment 2: Part B - BQ Quiz 2 (25%; Due Week 10)"
											},
											{
												"0": "Week 6 content Q & A"
											},
											{
												"0": "Submit Assessment 2: Report - Analytical Report, with Reading Journal Extract as Appendix (50% Due Week 9)"
											},
											{
												"0": "Submission Point (Supplementary Assessment)- Continuous Assessment 1.1 & 1.2"
											},
											{
												"0": "Self Review Exercise - Quiz: Support Reactions 2"
											},
											{
												"0": "UO Quantitative Methods for Business (Final Exam) (Ref: SP42019)"
											},
											{
												"0": "180907 UO CC CourseOutline"
											},
											{
												"0": "Learning Activity: Column Design 2"
											},
											{
												"0": "\tWeek 5.1: Sheets generation in Revit (1) (Monday 03/05/2021, 8:30 pm)"
											},
											{
												"0": "Submit Assessment 1: Part B (25%; Due Week 7)"
											},
											{
												"0": "UO Database Fundamentals (Final Exam) ¿ Part B (Ref: SP62020)"
											},
											{
												"0": "Assessment 1-Part B: Q&A"
											},
											{
												"0": "4.1 Slides: The Cost of Design Decisions"
											},
											{
												"0": "UO Quantitative Methods for Business (Final Exam) (Ref: SP12019)"
											},
											{
												"0": "Assessment 1 Part B - Q&A"
											},
											{
												"0": "Part A: My role as a building estimator (18%; Week 3)"
											},
											{
												"0": "Course Q&A forum"
											},
											{
												"0": "1000 pixels"
											},
											{
												"0": "Submit Assessment 1: Part C (25%; Due Week 10)"
											},
											{
												"0": "Week 10: Self-Review Quiz (4 questions)"
											},
											{
												"0": "Week 5 Submission"
											},
											{
												"0": "JOHCY031 UO Structures 1 Supplementary Assessment Details 2020 SP6 Christopher Johnson"
											},
											{
												"0": "Submit Assessment 2: Stage 1 - Lab report (10%; Due Week 7)"
											},
											{
												"0": "Submit Assessment 2: Part C (12%; Due Week 7)"
											},
											{
												"0": "180810 UO CA Course Outline"
											},
											{
												"0": "UO Database Fundamentals (Final Exam) ¿ (Ref: SP32020)"
											},
											{
												"0": "Assessment 2 Quiz 2 (Q&A)"
											},
											{
												"0": "UO Quantitative Methods for Business (Secondary Exam) (Ref: SP42020)"
											},
											{
												"0": "Slides & Notes: QSP 6.1 - Stud Construction  ASMM"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part C: Reflection (Week 10; 10%)"
											},
											{
												"0": "10.3 Slides: Regulating and Rating for Building Sustainability"
											},
											{
												"0": "Views in MS-SQL Server (Youtube)"
											},
											{
												"0": "Submit Assessment 2: Part A (12%; Due Week 2)"
											},
											{
												"0": "10.2.3 - Why must building¿s long-term cost impacts be considered in the early stages of design?"
											},
											{
												"0": "UO Mathematical Methods for Engineers 2 (Final Exam) (Ref: SP32021)"
											},
											{
												"0": "Week 3.2 Mass modelling in Revit Q&A  (23.04.2020)"
											},
											{
												"0": "Steel Frames Tolerances (04.09.2019)"
											},
											{
												"0": "UO Database Fundamentals (Sample Exam 2) (Ref: SP62020)"
											},
											{
												"0": "SA Quiz 1 - Topic 1 & Chapter A (Week 3)"
											},
											{
												"0": "CostX Files: Practice Answers - Week 2"
											},
											{
												"0": "Slides & notes -Project Management Basics"
											},
											{
												"0": "Part E: Tender Pitch Video (6%; Week 10)"
											},
											{
												"0": "180809 UO CC Course Outline"
											},
											{
												"0": "Learning Activity: Identify Timber Framing Members"
											},
											{
												"0": "Week 4 Q&A Forum"
											},
											{
												"0": "The Australian Construction Industry: A culture of conflict"
											},
											{
												"0": "Assessment 2: Report Template Example"
											},
											{
												"0": "Learning Activity: Truss Analysis Quiz Response"
											},
											{
												"0": "Learning activity: Time, Cost & Quality"
											},
											{
												"0": "Slides  and Notes: 4.1 - Billing"
											},
											{
												"0": "SUBMIT Assessment 2: Part C Energy Efficiency (Week 7; 10%)"
											},
											{
												"0": "3.2 Slides: Building Elements ¿ Measurement Rules"
											},
											{
												"0": "SUBMIT Assessment 2 Part A: NPV Calculations (Excel file) (20%)"
											},
											{
												"0": "Assessment 1-Part C: Q&A"
											},
											{
												"0": "Advice for New Students"
											},
											{
												"0": "UO Database Fundamentals (Secondary Exam) ¿ Part A (Ref: SP42020)"
											},
											{
												"0": "Self-Check Quiz: Week 3"
											},
											{
												"0": "5.4 Slides & Notes: Reinforced Masonry Construction"
											},
											{
												"0": "Web Dev topic questions and answers - Week 7 B"
											},
											{
												"0": "UO Programming Concepts (International Final Exam)(Ref: SP32021)"
											},
											{
												"0": "Week 9: Construction & Commissioning (17.11.2020)"
											},
											{
												"0": "In order to design different members and also to determine the displacements, deformations and movements of structures, two main parameters called Stress and Strain need to be understood.? Define Stress and Strain."
											},
											{
												"0": "Learning Activity: Footing (5 questions)"
											},
											{
												"0": "Concept 4.3: Promissory Estoppel - Notes"
											},
											{
												"0": "SUBMIT Assessment 2 Part C: Risk Analysis (Excel file) & Executive Summary (Word Document) (20%)"
											},
											{
												"0": "Assessment 1 Part C Q&A Forum"
											},
											{
												"0": "How to add Course Emails"
											},
											{
												"0": "2.1.2 Learning Activity: Measuring a trench excavation"
											},
											{
												"0": "Part A: Net Present Value (NPV) Questions (20%)"
											},
											{
												"0": "Week 5: Self-Review Quiz (5 questions)"
											},
											{
												"0": "7.2 Slides: Functional Briefs"
											},
											{
												"0": "Assessment 2: Problem Solving Exercise Viva"
											},
											{
												"0": "Assessment 1 Part A: House Study (40% Due Week 5)"
											},
											{
												"0": "UO Quantitative Methods for Business (Secondary Exam) (Part A) (Ref: SP12021"
											},
											{
												"0": "UO Programming Fundamentals (Secondary Exam) (Ref: SP32020)"
											},
											{
												"0": "Week 3.2 Mass modelling in Revit Q&A  (22.04.2021)"
											},
											{
												"0": "Forum: Environmental impact weightings"
											},
											{
												"0": "Assessment 1 - Bridge Structures - Part B: Written Report (40%) and Part C: Video Presentation (10%); Due Week 7"
											},
											{
												"0": "Submit Assessment 2: Report - Part A - Reading Journal Extract as Appendix and Part B - Analytical Report (50% Due Week 9)"
											},
											{
												"0": "8.1 Slides: Below the Line¿ Costs"
											},
											{
												"0": "Assessment 2 Part C & D: Entire House Study Report (40% due Friday Week 10)"
											},
											{
												"0": "Slides & Notes - Resource Smoothing and Resource Levelling"
											},
											{
												"0": "2.4 Slides & Notes: Elements"
											},
											{
												"0": "Self-Check Quiz: Week 9"
											},
											{
												"0": "SA Quiz 4 - Chapter B & 10"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part A: History & Extraction (Week 2; 12%)"
											},
											{
												"0": "Assessment 1: Part A & B Discussion Forum"
											},
											{
												"0": "Submit Assessment 2: Part D (10%; Due Week 8)"
											},
											{
												"0": "UO Mathematical Methods for Engineers 2 (Secondary Exam) (Ref: SP32021)"
											},
											{
												"0": "Week 4.1 Live class meeting (1): Roof, room tag, schedules (28.04.2020)"
											},
											{
												"0": "Week2 Practical ¿ access SAS"
											},
											{
												"0": "Week 3: Air Conditioning Systems and Calculations (1) (Tuesday 06/10/2020, 8:00 pm)"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part C: Structural, Fire & Environmental properties (Week 5; 20%)"
											},
											{
												"0": "SP5 Triggers"
											},
											{
												"0": "Submit Assessment 2: Part C (15%; Due Week 6)"
											},
											{
												"0": "7.1 Slides & Notes: Multi-storey building frames"
											},
											{
												"0": "Learning Activity: Life cycle costing"
											},
											{
												"0": "Week 4 - ActivitiesSOLUTIONS"
											},
											{
												"0": "8000 pixels"
											},
											{
												"0": "UO Engineering Mechanics (Final Exam) (Ref: SP62020)"
											},
											{
												"0": "Self-Check Quiz: Week 4"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 5) (Ref: SP32021)"
											},
											{
												"0": "SUBMIT Assessment 2: Part D Lighting and Acoustics (Week 10; 10%)"
											},
											{
												"0": "UO Quantitative Methods for Business Access Plan Part B (Final Exam) (Ref: SP42020)"
											},
											{
												"0": "OFFICE - Learning Activity 9.1: Drawings  Specifications"
											},
											{
												"0": "CostX Software: STUDENT LICENCE APPLICATION FORM"
											},
											{
												"0": "Assessment 1: Q&A (Common)"
											},
											{
												"0": "Learning Activity: Effective stresses and soil strength"
											},
											{
												"0": "Course Q&A Forum"
											},
											{
												"0": "UO IT Fundamentals (Final Exam) (Ref: SP12021)"
											},
											{
												"0": "Submit Assessment 2: Part A (10%; Due Week 2)"
											},
											{
												"0": "Quiz 3: Resource scheduling, allocation, Cash flow and Time (10% Due Week 8)"
											},
											{
												"0": "Assessment 2 Part A: Introduction and Preliminary Works (5% Due Week 2)"
											},
											{
												"0": "UO IT Fundamentals (Final Exam) (Ref: SP12020)"
											},
											{
												"0": "UO IT Fundamentals (Final Exam) Access Plan Part A (Ref: SP12020)"
											},
											{
												"0": "7.3 Slides & Notes: Sequence of supply and erection"
											},
											{
												"0": "Assessment Q&A Forum"
											},
											{
												"0": "Quiz: Chapter 13 on Interfaces and Inner Classes (Week 10)"
											},
											{
												"0": "UO Problem Solving and Programming (Special Final Exam) (Ref: SP32020)"
											},
											{
												"0": "Practice activity: Building Option 1A - Part D"
											},
											{
												"0": "UO Database Fundamentals (Final Exam) ¿ Part A (Ref: SP32020)"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part B : Extraction & Processing (Week 3; 10%)"
											},
											{
												"0": "Loggem 2010"
											},
											{
												"0": "Learning task 3.7 Case Study: Blastrac"
											},
											{
												"0": "8.3 Slides: Escalation and Excluded Costs"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 1) (Ref: SP32021)"
											},
											{
												"0": "Assessment 1 Part C: Written Report (20% Due Week 6)"
											},
											{
												"0": "Drop-in meeting about quiz 3 & assessment 1 -Parts B, C and D (23.05.2019)"
											},
											{
												"0": "UO Database Fundamentals (Secondary Exam) ¿ Part A (Ref: SP62020)"
											},
											{
												"0": "Assessment 1 Part C (Q&A)"
											},
											{
												"0": "Week 3 Q&A Forum"
											},
											{
												"0": "UO Engineering Mechanics (Secondary Exam) (Ref: SP32021)-Almutairi,Faisal Mohammed S"
											},
											{
												"0": "3.1 Learning Activity - ASMM & Rules Governing Measurement of Substructure"
											},
											{
												"0": "Learning Activity: Wet and dry trades"
											},
											{
												"0": "Week 1 : Building Documents"
											},
											{
												"0": "Learning Activity: Ground Improvement (5 questions)"
											},
											{
												"0": "Week9 Views"
											},
											{
												"0": "2.2.1  Learning Activity: Using Dim Paper to Prepare a BQ"
											},
											{
												"0": "UO Engineering Mechanics (Final Exam) (Ref: SP3 2021)"
											},
											{
												"0": "UO Programming Fundamentals (Sample Final Exam) (Ref: SP12020)"
											},
											{
												"0": "Assessment 1a: PACT elements and presentation - Submit point"
											},
											{
												"0": "Meet the Class: Postcard on Materials"
											},
											{
												"0": "Learning Activity: Column Design 1 (4 questions)"
											},
											{
												"0": "1"
											},
											{
												"0": "Module 5 1.0.4"
											},
											{
												"0": "Week 8 content Q & A"
											},
											{
												"0": "SA Quiz 2 - Chapter 2 & 3 (Week 6)"
											},
											{
												"0": "S2 Week 4 - Topic 3 - Truss Analysis"
											},
											{
												"0": "Marjanovic Amanda MARAY104 89039 Supplementary Assessment"
											},
											{
												"0": "7.1 Slides: Basics of Engineering Services"
											},
											{
												"0": "Slides and Notes: QSP Topic 7.1 - Plasterboard Lining"
											},
											{
												"0": "Learning Activity: Truss Analysis Quiz (1 question)"
											},
											{
												"0": "Submit Assessment 1 - Part A: Design report & presentation (45%; Due Week 5)"
											},
											{
												"0": "7.3 Slides: Functional and Non-Functional Areas"
											},
											{
												"0": "Learning Task 6.1 Review Chapter 4, Section 4.5 of Business Intelligence: A Managerial Approach"
											},
											{
												"0": "Week 5- Discussion and Q&A forum"
											},
											{
												"0": "Slides and Notes: QSP Topic 2.1- ASMM"
											},
											{
												"0": "Learning Activity: Demolition and Site Clearing"
											},
											{
												"0": "STRCY014 UO Structures 1 Supplementary Assessment Details 2020 SP6 Christopher Streater"
											},
											{
												"0": "UO Quantative Methods for Business (Secondary Exam) (Access Plan ¿ Part B) (Ref: SP42020)"
											},
											{
												"0": "Week 7 content Q & A"
											},
											{
												"0": "Answer Entry Practise"
											},
											{
												"0": "Assessment 1 Quiz 1 - Q&A Forum"
											},
											{
												"0": "LearningTask5-1 Client Scenario"
											},
											{
												"0": "8.2 Slides: Design Development and Contract Contingency"
											},
											{
												"0": "Quiz 3: Electrical systems and contract, BIM and clash detection  (Week 8; 10%)"
											},
											{
												"0": "Learning Activity: Concrete Basics and Practices (12 questions)"
											},
											{
												"0": "10.1 Slides: Environmentally Sustainable Design"
											},
											{
												"0": "6.3 Slides & Notes: Prominent MSB"
											},
											{
												"0": "Assessment 3: Programming Viva"
											},
											{
												"0": "Week 6 LIVE CLASS (10): Revit Q&A (14.05.2020)"
											},
											{
												"0": "Drop-in meeting about quiz 3 & assessment 1 (23.05.2019)"
											},
											{
												"0": "6.1 Slides & Notes: Introduction to MSB"
											},
											{
												"0": "Week 2 content discussion (Q&A)"
											},
											{
												"0": "9.2 Slide: The Time Value of Money"
											},
											{
												"0": "10.3 Slides & Notes: Roof Concrete, Glass  Interior Fitouts"
											},
											{
												"0": "DB authorisation"
											},
											{
												"0": "SUBMIT your Secondary Assessment"
											},
											{
												"0": "Fire Separation Activity : Template for your response"
											},
											{
												"0": "Database: Minimal Processing"
											},
											{
												"0": "Week 3- Discussion and Q&A forum"
											},
											{
												"0": "UO Business Intelligence (Secondary Exam) (Ref: SP42019)"
											},
											{
												"0": "Week 3.2 Mass modelling in Revit Q&A  (08.10.2020)"
											},
											{
												"0": "Assessment 1 - Part B: Spaghetti Bridge Written Report & Video Presentation; Due Week 7 (50%)"
											},
											{
												"0": "UO Database Fundamentals (Secondary Exam) ¿ Part B (Ref: SP32020)"
											},
											{
												"0": "Solar Absorbtance values Colorbond: Material & Colour Information"
											},
											{
												"0": "2016 SPExamples"
											},
											{
												"0": "7.1 Slides: Below the Line¿ Costs"
											},
											{
												"0": "Week10 Demos SP5"
											},
											{
												"0": "Packet Tracer ¿ Network Representation"
											},
											{
												"0": "Drawings & Plan(not used)"
											},
											{
												"0": "Learning Activity: The Cost of the nRAH"
											},
											{
												"0": "Part 2 of 2: Claims"
											},
											{
												"0": "UO Problem Solving and Programming (Secondary Exam) (Ref: SP32021)"
											},
											{
												"0": "Week 1- Discussion and Q&A forum"
											},
											{
												"0": "Exams & Revision specific Q & A"
											},
											{
												"0": "HURDLE Assessment: Submit Week 8 work on Building P"
											},
											{
												"0": "Week 2 - Practice with EXCEL answer file"
											},
											{
												"0": "UO Programming Fundamentals (Live Programming Test 3) (Ref: SP12020)"
											},
											{
												"0": "SQL Import Queries"
											},
											{
												"0": "CostX Files: Practice Answers - Week 3"
											},
											{
												"0": "7.3 Slides: Escalation and Excluded Costs"
											},
											{
												"0": "UO Programming Fundamentals (Live Programming Test 5) (Ref: SP12020)"
											},
											{
												"0": "Week 9 content Q & A"
											},
											{
												"0": "BERDY013 UO Structures 1 Supplementary Assessment Details 2020 SP6 Dante Bernet"
											},
											{
												"0": "Read drawings"
											},
											{
												"0": "Discussion Forum - Questions and Challenges: Inheritance"
											},
											{
												"0": "UO Predictive Analytics (Final Exam) (Ref: SP1 2021)"
											},
											{
												"0": "UO Database Fundamentals (Secondary Exam) ¿ Part A (Ref: SP32021)"
											},
											{
												"0": "4.3.1 Learning Activity: Analysis - Detailed response"
											},
											{
												"0": "Learning Activity: 8.3 Break-Even Analysis Exercise"
											},
											{
												"0": "Learning Task 5.5 Case Study: Cabelas Discussion Forum"
											},
											{
												"0": "Self-Check Quiz: Week 1"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 6) (Ref: SP62020)"
											},
											{
												"0": "Notes: Views"
											},
											{
												"0": "Learning Activity: Pricing Masonry"
											},
											{
												"0": "Transcript: Objects (Part 2 - Paradigm)"
											},
											{
												"0": "Quiz 1: Fire Chemistry (10% Due Week 3)"
											},
											{
												"0": "Week 11 LoginAccount"
											},
											{
												"0": "1.3 Slides: Time, Cost & Quality"
											},
											{
												"0": "Learning Task 8.2: Analyse and evaluate Instructions"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 8) (Ref: SP32021)"
											},
											{
												"0": "SUBMIT Assessment 2: Part A Solar radiation and Thermal Comfort (Week 3; 10%)"
											},
											{
												"0": "Forum: Proprietary colours"
											},
											{
												"0": "Private Forum for Ass1PartB"
											},
											{
												"0": "eReading: Stack effect in high-rise buildings: A review"
											},
											{
												"0": "SUBMIT your Assessment 1 - Part C: Construction & Maintenance (Week 10; 30%)"
											},
											{
												"0": "Assessment 2 Quiz 2 - Q&A"
											},
											{
												"0": "Week 9.2 LIVE CLASS (16): Construction Hand drawings Q&A (03.06.2021)"
											},
											{
												"0": "10.3 Directing a Project Process ¿ Authorise Project Closure Activity (PDF)"
											},
											{
												"0": "Answer to the Question Set 9: File I/O"
											},
											{
												"0": "UO Problem Solving and Programming (Final Exam) (Ref: SP32020)"
											},
											{
												"0": "8. Formwork can be 50¿75% of the direct cost of a floor. How could you reduce the cost?"
											},
											{
												"0": "Week 7.1 LIVE CLASS (12):Week 7.1: Assessment 2-A: Construction Documents (2) (2.11.2020)"
											},
											{
												"0": "Assessment 2 Q&A forum"
											},
											{
												"0": "Learning Activity: Wind Load (15 questions)"
											},
											{
												"0": "Week 4.2: LIVE CLASS MEETING (2) (18.10.2019)"
											},
											{
												"0": "UO Problem Solving and Programming (Final Exam) (Ref: SP62020)"
											},
											{
												"0": "Web Dev topic questions and answers - Week 5 A"
											},
											{
												"0": "Web Dev topic questions and answers - Week 7 A"
											},
											{
												"0": "Quiz 1: Briefing, Design and Regulatory Compliance (Week 2; 13.34%)"
											},
											{
												"0": "CostX Files: Practice Answers - Part A Hurdle Building Type 1"
											},
											{
												"0": "Learning Activity: Pricing Roofing Works"
											},
											{
												"0": "Week 5.2 LIVE CLASS (9): Sheets generation in Revit (2) (07.05.2020))"
											},
											{
												"0": "Week 4 submission"
											},
											{
												"0": "UO IT Fundamentals (Final Exam) Access Plan Part A (Ref: SP12021)"
											},
											{
												"0": "6.1 Slides: Basics of Engineering Services"
											},
											{
												"0": "Week 5.1 LIVE CLASS (9): Sheets generation in Revit (1) (23.10.2019)"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 3) (Ref: SP32020)"
											},
											{
												"0": "Project 2: Comparison of Classification Techniques"
											},
											{
												"0": "Assessment 1-Part E: Q&A"
											},
											{
												"0": "5.3 Slides: Calculating a Wall-to-Floor Ratio"
											},
											{
												"0": "UO Problem Solving and Programming (Final Exam) (Access Plan - Part B) (Ref: SP62019)"
											},
											{
												"0": "Replaced by the H5P activity: Activity 3B - Knowledge Check Questions"
											},
											{
												"0": "SUBMIT Assessment 2 - Part A - Building Assessment & Part B - Performance Solutions"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 3) (Ref: SP62020)"
											},
											{
												"0": "Answer to the Question Set 1: Basic Java"
											},
											{
												"0": "UO Problem Solving and Programming (Final Exam) (Access Plan - Part A) (Ref: SP62019)"
											},
											{
												"0": "1.2 Slides & Notes: Communications and Teamwork"
											},
											{
												"0": "Code Academy - Learn SQL"
											},
											{
												"0": "Assessment 2-Quiz D: Q&A"
											},
											{
												"0": "CostX Files: Practice Answers - Part D"
											},
											{
												"0": "Week 5: Hydraulic Systems (20.10.2020)"
											},
											{
												"0": "Week 3 Practical Activity"
											},
											{
												"0": "Learning Activity: Pricing Internal Linings"
											},
											{
												"0": "Week 3 content discussion (Q&A)"
											},
											{
												"0": "UO Quantitative Methods for Business (Secondary Exam) (Ref: SP12020)"
											},
											{
												"0": "Week 4 content Q & A"
											},
											{
												"0": "CostX Files: Practice Answers - Week 1"
											},
											{
												"0": "Learning Task 8.1 Topic 3, Chapter 6 (pp. 365¿367) of INFS2036 Business Intelligence"
											},
											{
												"0": "HURDLE Assessment: Submit Week 6 work on Building P"
											},
											{
												"0": "Normalisation Notes"
											},
											{
												"0": "PART C: Tender Document and Tender Pitch Video (Week 10, 25%)"
											},
											{
												"0": "UO Problem Solving and Programming (Sample Exam 2) (Ref: SP32020)"
											},
											{
												"0": "Week 10 LIVE CLASS (14): Construction Hand drawings Review (11.06.2020)"
											},
											{
												"0": "Quiz: Chapter 8 on Polymorphism and Abstract Classes (Week 7)"
											},
											{
												"0": "Learning Activity: Measure and bill windows"
											},
											{
												"0": "The Chicago Fire of 1871 and the 'Great Rebuilding'"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "ActivityName",
												"type": "string"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "count",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							},
							"4fdb1296-d3d6-428d-aacd-20ae6cb937ef": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Overview report",
												"1": "317"
											},
											{
												"0": "Course participation",
												"1": "1017"
											},
											{
												"0": "Forum summary report",
												"1": "2"
											},
											{
												"0": "Grade history",
												"1": "8"
											},
											{
												"0": "Book printing",
												"1": "13"
											},
											{
												"0": "Activity report",
												"1": "247"
											},
											{
												"0": "SCORM package",
												"1": "1316"
											},
											{
												"0": "Single view",
												"1": "1809"
											},
											{
												"0": "Glossary",
												"1": "4438"
											},
											{
												"0": "Chat",
												"1": "3600"
											},
											{
												"0": "URL",
												"1": "74927"
											},
											{
												"0": "Submission comments",
												"1": "1562"
											},
											{
												"0": "Scheduler",
												"1": "27708"
											},
											{
												"0": "Live logs",
												"1": "176"
											},
											{
												"0": "Extensions",
												"1": "88969"
											},
											{
												"0": "Online text submissions",
												"1": "7128"
											},
											{
												"0": "H5P",
												"1": "547340"
											},
											{
												"0": "Choice",
												"1": "12049"
											},
											{
												"0": "Lightbox Gallery",
												"1": "33"
											},
											{
												"0": "Book",
												"1": "11454"
											},
											{
												"0": "Quiz",
												"1": "1555151"
											},
											{
												"0": "Workshop",
												"1": "15294"
											},
											{
												"0": "Mahara portfolio",
												"1": "79"
											},
											{
												"0": "User report",
												"1": "153250"
											},
											{
												"0": "Wiki",
												"1": "6842"
											},
											{
												"0": "File",
												"1": "799959"
											},
											{
												"0": "Excel spreadsheet",
												"1": "255"
											},
											{
												"0": "External tool",
												"1": "2920"
											},
											{
												"0": "UniSA Media Library Video Assignment",
												"1": "142"
											},
											{
												"0": "Page",
												"1": "131475"
											},
											{
												"0": "Logs",
												"1": "3921"
											},
											{
												"0": "OpenDocument spreadsheet",
												"1": "550"
											},
											{
												"0": "Recycle bin",
												"1": "9312"
											},
											{
												"0": "File submissions",
												"1": "84351"
											},
											{
												"0": "Plain text file",
												"1": "7"
											},
											{
												"0": "Dialogue",
												"1": "13588"
											},
											{
												"0": "Group self-selection",
												"1": "6326"
											},
											{
												"0": "Folder",
												"1": "106267"
											},
											{
												"0": "System",
												"1": "6842145"
											},
											{
												"0": "Lesson",
												"1": "76908"
											},
											{
												"0": "Forum",
												"1": "2680379"
											},
											{
												"0": "Zoom meeting",
												"1": "38706"
											},
											{
												"0": "Database",
												"1": "40802"
											},
											{
												"0": "Feedback",
												"1": "9215"
											},
											{
												"0": "UniSA Media Library",
												"1": "25"
											},
											{
												"0": "Survey",
												"1": "26"
											},
											{
												"0": "Assignment",
												"1": "1489536"
											},
											{
												"0": "{\"$numberDouble\":\"NaN\"}",
												"1": "9051"
											},
											{
												"0": "Grader report",
												"1": "15152"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Component",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"d021b2a2-bfb9-4be4-ba71-a73fb85e3c53": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Reveal identities confirmation page viewed.",
												"1": "1"
											},
											{
												"0": "Feedback viewed",
												"1": "92803"
											},
											{
												"0": "Submission viewed.",
												"1": "13"
											},
											{
												"0": "Course module viewed",
												"1": "264848"
											},
											{
												"0": "Batch set workflow state viewed.",
												"1": "2084"
											},
											{
												"0": "Grading form viewed",
												"1": "76227"
											},
											{
												"0": "Feedback updated",
												"1": "72"
											},
											{
												"0": "Batch set marker allocation viewed",
												"1": "3256"
											},
											{
												"0": "Course module instance list viewed",
												"1": "118944"
											},
											{
												"0": "The allocated marker has been updated.",
												"1": "34822"
											},
											{
												"0": "The submission has been graded.",
												"1": "67444"
											},
											{
												"0": "The submissions have been unlocked for a user.",
												"1": "641"
											},
											{
												"0": "The submission has been graded via offline feedback.",
												"1": "228"
											},
											{
												"0": "The user duplicated their submission.",
												"1": "29"
											},
											{
												"0": "The identities have been revealed.",
												"1": "5"
											},
											{
												"0": "Grading table viewed",
												"1": "131085"
											},
											{
												"0": "Submission form viewed.",
												"1": "72641"
											},
											{
												"0": "The user has accepted the statement of the submission.",
												"1": "42155"
											},
											{
												"0": "The state of the workflow has been updated.",
												"1": "66479"
											},
											{
												"0": "The status of the submission has been updated.",
												"1": "487"
											},
											{
												"0": "The submissions have been locked for a user.",
												"1": "3819"
											},
											{
												"0": "A submission has been submitted.",
												"1": "42184"
											},
											{
												"0": "The status of the submission has been viewed.",
												"1": "468728"
											},
											{
												"0": "Remove submission confirmation viewed.",
												"1": "541"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Event name",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"567cc143-9d10-498f-a3cd-822c81ec5050": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Course module created",
												"1": "8973"
											},
											{
												"0": "Calendar event deleted",
												"1": "1618"
											},
											{
												"0": "Question updated",
												"1": "3014"
											},
											{
												"0": "Capability assigned",
												"1": "104"
											},
											{
												"0": "Course section created",
												"1": "30237"
											},
											{
												"0": "Course viewed",
												"1": "5768068"
											},
											{
												"0": "Badge created",
												"1": "2"
											},
											{
												"0": "Question category moved",
												"1": "40"
											},
											{
												"0": "Grade item created",
												"1": "1842"
											},
											{
												"0": "Role assigned",
												"1": "18202"
											},
											{
												"0": "Course module updated",
												"1": "91296"
											},
											{
												"0": "User graded",
												"1": "259756"
											},
											{
												"0": "Grouping deleted",
												"1": "80"
											},
											{
												"0": "Grade item updated",
												"1": "10480"
											},
											{
												"0": "Course activity completion updated",
												"1": "276714"
											},
											{
												"0": "User unenrolled from course",
												"1": "5359"
											},
											{
												"0": "Questions exported",
												"1": "67"
											},
											{
												"0": "Calendar event updated",
												"1": "54120"
											},
											{
												"0": "Group created",
												"1": "1015"
											},
											{
												"0": "Questions imported",
												"1": "9"
											},
											{
												"0": "Course created",
												"1": "168"
											},
											{
												"0": "Group unassigned from grouping",
												"1": "192"
											},
											{
												"0": "Calendar event created",
												"1": "8328"
											},
											{
												"0": "Group member removed",
												"1": "6634"
											},
											{
												"0": "Question category updated",
												"1": "238"
											},
											{
												"0": "Course module instance list viewed",
												"1": "27"
											},
											{
												"0": "Course summary viewed",
												"1": "38"
											},
											{
												"0": "User list viewed",
												"1": "3522"
											},
											{
												"0": "Grouping updated",
												"1": "11"
											},
											{
												"0": "Question deleted",
												"1": "4841"
											},
											{
												"0": "Capability unassigned",
												"1": "84"
											},
											{
												"0": "Course section updated",
												"1": "33932"
											},
											{
												"0": "Tag added to an item",
												"1": "1001"
											},
											{
												"0": "Course backup created",
												"1": "216"
											},
											{
												"0": "Question moved",
												"1": "534"
											},
											{
												"0": "Grade deleted",
												"1": "128980"
											},
											{
												"0": "Group updated",
												"1": "396"
											},
											{
												"0": "Course user report viewed",
												"1": "147"
											},
											{
												"0": "User profile viewed",
												"1": "53323"
											},
											{
												"0": "Group member added",
												"1": "25906"
											},
											{
												"0": "Course content deleted",
												"1": "154"
											},
											{
												"0": "Question category deleted",
												"1": "47"
											},
											{
												"0": "Grouping created",
												"1": "1193"
											},
											{
												"0": "Group deleted",
												"1": "704"
											},
											{
												"0": "Enrolment instance updated",
												"1": "1"
											},
											{
												"0": "Role unassigned",
												"1": "5512"
											},
											{
												"0": "User enrolled in course",
												"1": "17836"
											},
											{
												"0": "Tag removed from an item",
												"1": "25"
											},
											{
												"0": "Question created",
												"1": "1536"
											},
											{
												"0": "Course module deleted",
												"1": "4604"
											},
											{
												"0": "Group assigned to grouping",
												"1": "3589"
											},
											{
												"0": "Question category created",
												"1": "580"
											},
											{
												"0": "Course restored",
												"1": "182"
											},
											{
												"0": "Enrolment instance created",
												"1": "850"
											},
											{
												"0": "Question category viewed",
												"1": "4084"
											},
											{
												"0": "Question viewed",
												"1": "1466"
											},
											{
												"0": "Notes viewed",
												"1": "4"
											},
											{
												"0": "Course updated",
												"1": "264"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Event name",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"72606952-9aed-4efc-89d2-e364e0db774d": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Assignment",
												"1": "The user with id '15261' viewed the instance list for the module 'assign' in the course with id '397'.",
												"2": "Course: UO Building Estimating",
												"3": "Course module instance list viewed",
												"4": "CCXZACDBC",
												"5": "9/06/20, 13:13",
												"6": {
													"$oid": "616145b3a9a196e5801dd2fa"
												},
												"7": "NEWLogBUIL 1024_SP4 2019.csv"
											},
											{
												"0": "Quiz",
												"1": "The user with id '15261' viewed the instance list for the module 'quiz' in the course with id '397'.",
												"2": "Course: UO Building Estimating",
												"3": "Course module instance list viewed",
												"4": "CCXZACDBC",
												"5": "9/06/20, 13:12",
												"6": {
													"$oid": "616145b3a9a196e5801dd2fb"
												},
												"7": "NEWLogBUIL 1024_SP4 2019.csv"
											},
											{
												"0": "Forum",
												"1": "The user with id '15261' viewed the 'forum' activity with course module id '45179'.",
												"2": "Forum: Announcements",
												"3": "Course module viewed",
												"4": "CCXZACDBC",
												"5": "9/06/20, 13:12",
												"6": {
													"$oid": "616145b3a9a196e5801dd2fc"
												},
												"7": "NEWLogBUIL 1024_SP4 2019.csv"
											},
											{
												"0": "System",
												"1": "The user with id '15261' viewed the course with id '397'.",
												"2": "Course: UO Building Estimating",
												"3": "Course viewed",
												"4": "CCXZACDBC",
												"5": "9/06/20, 13:12",
												"6": {
													"$oid": "616145b3a9a196e5801dd2fd"
												},
												"7": "NEWLogBUIL 1024_SP4 2019.csv"
											},
											{
												"0": "Forum",
												"1": "The user with id '15261' has viewed the discussion with id '62478' in the forum with course module id '45180'.",
												"2": "Forum: Course Q&amp;A Forum",
												"3": "Discussion viewed",
												"4": "CCXZACDBC",
												"5": "9/06/20, 13:12",
												"6": {
													"$oid": "616145b3a9a196e5801dd2fe"
												},
												"7": "NEWLogBUIL 1024_SP4 2019.csv"
											},
											{
												"0": "Forum",
												"1": "The user with id '15261' viewed the 'forum' activity with course module id '45180'.",
												"2": "Forum: Course Q&amp;A Forum",
												"3": "Course module viewed",
												"4": "CCXZACDBC",
												"5": "9/06/20, 13:12",
												"6": {
													"$oid": "616145b3a9a196e5801dd2ff"
												},
												"7": "NEWLogBUIL 1024_SP4 2019.csv"
											},
											{
												"0": "System",
												"1": "The user with id '15261' viewed the course with id '397'.",
												"2": "Course: UO Building Estimating",
												"3": "Course viewed",
												"4": "CCXZACDBC",
												"5": "9/06/20, 13:12",
												"6": {
													"$oid": "616145b3a9a196e5801dd300"
												},
												"7": "NEWLogBUIL 1024_SP4 2019.csv"
											},
											{
												"0": "System",
												"1": "The user with id '15261' viewed the section number '39' of the course with id '397'.",
												"2": "Course: UO Building Estimating",
												"3": "Course viewed",
												"4": "CCXZACDBC",
												"5": "20/02/20, 21:09",
												"6": {
													"$oid": "616145b3a9a196e5801dd301"
												},
												"7": "NEWLogBUIL 1024_SP4 2019.csv"
											},
											{
												"0": "File",
												"1": "The user with id '15261' viewed the 'resource' activity with course module id '49096'.",
												"2": "File: 3.1 Concrete Works",
												"3": "Course module viewed",
												"4": "CCXZACDBC",
												"5": "20/02/20, 21:08",
												"6": {
													"$oid": "616145b3a9a196e5801dd302"
												},
												"7": "NEWLogBUIL 1024_SP4 2019.csv"
											},
											{
												"0": "System",
												"1": "The user with id '15261' viewed the section number '39' of the course with id '397'.",
												"2": "Course: UO Building Estimating",
												"3": "Course viewed",
												"4": "CCXZACDBC",
												"5": "20/02/20, 21:08",
												"6": {
													"$oid": "616145b3a9a196e5801dd303"
												},
												"7": "NEWLogBUIL 1024_SP4 2019.csv"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Component",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Description",
												"type": "string"
											},
											{
												"key": "2",
												"name": "Event context",
												"type": "string"
											},
											{
												"key": "3",
												"name": "Event name",
												"type": "string"
											},
											{
												"key": "4",
												"name": "Student ID",
												"type": "string"
											},
											{
												"key": "5",
												"name": "Time",
												"type": "string"
											},
											{
												"key": "6",
												"name": "_id",
												"type": "StructType(StructField($oid,StringType,true))"
											},
											{
												"key": "7",
												"name": "filename",
												"type": "string"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "count",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\r\n",
							"logDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/NewLog.json', format='json')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 46
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *\r\n",
							"import nltk"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.groupBy('Component').count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter(logDF.Component == 'Assignment').groupBy('Event name').count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter(logDF.Component == 'System').groupBy('Event name').count().collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.filter(logDF.filename != 'NEWLogBUIL 1024 _1094_SP42020.csv').limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumnRenamed('Event name', 'EventName')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"logDF.groupBy('EventName').count().write.mode(\"overwrite\").saveAsTable(\"default.EventName\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"logDF = logDF.filter(logDF.filename != 'NEWLogBUIL 1024 _1094_SP42020.csv')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.select('Event context', split(col('Event context'), ':').getItem(0).alias('ActivityType'), split(col('Event context'), ':').getItem(1).alias('ActivityName')).groupBy('ActivityType').count().where(col('count')>10).collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.select('Event context', split(col('Event context'), ':').getItem(0).alias('ActivityType'), split(col('Event context'), ':').getItem(1).alias('ActivityName')).agg(countDistinct('ActivityName')).collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimResource = spark.sql(\"SELECT * FROM `unisadw`.`dimcourseresource`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.select('Event context', split(col('Event context'), ':').getItem(0).alias('ActivityType'), split(col('Event context'), ':').getItem(1).alias('ActivityName'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"logDF = logDF.groupBy('ActivityName').count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 25
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"DimResource.join(logDF, DimResource.ActivityResourceName == logDF.ActivityName).count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 38
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimResource.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 39
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"logDF = logDF.withColumn('ActivityName', trim(logDF.ActivityName))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 36
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"logDF.filter(logDF.ActivityName=='Week 3 Activities Forum').collect()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 37
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(logDF.limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 34
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimResource = DimResource.groupBy('ActivityResourceName').count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 40
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(DimResource.select(col('ActivityResourceName').alias('ActivityName')).exceptAll(logDF.select('ActivityName')).collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 44
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"1fc491b0-74d2-464e-b91e-221f285e75e6": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "CCXZWXLBC",
												"1": "1912",
												"2": "Part-Time",
												"3": "F",
												"4": "N",
												"5": "19651218",
												"6": "2005",
												"7": "326417514496",
												"8": "XBCP",
												"10": "KAPUNDA",
												"12": "5373",
												"14": "SA",
												"16": "Australia"
											},
											{
												"0": "CCXZWXLBC",
												"1": "2005",
												"2": "Full-Time",
												"3": "F",
												"4": "N",
												"5": "19651218",
												"6": "2014",
												"7": "326417514497",
												"8": "XBCP",
												"10": "KAPUNDA",
												"12": "5373",
												"14": "SA",
												"16": "Australia"
											},
											{
												"0": "CCXZWXLBC",
												"1": "2014",
												"2": "Part-Time",
												"3": "F",
												"4": "N",
												"5": "19651218",
												"6": "9999",
												"7": "326417514498",
												"8": "XBCP",
												"10": "KAPUNDA",
												"12": "5373",
												"14": "SA",
												"16": "Australia"
											},
											{
												"0": "CCXZAAGHG",
												"1": "1914",
												"2": "Part-Time",
												"3": "M",
												"4": "N",
												"5": "19800729",
												"6": "2005",
												"7": "326417514499",
												"8": "XBCP",
												"10": "Rochedale South",
												"12": "4123",
												"14": "QLD",
												"16": "Australia"
											},
											{
												"0": "CCXZAAGHG",
												"1": "2005",
												"2": "Full-Time",
												"3": "M",
												"4": "N",
												"5": "19800729",
												"6": "2025",
												"7": "326417514500",
												"8": "XBCP",
												"10": "Rochedale South",
												"12": "4123",
												"14": "QLD",
												"16": "Australia"
											},
											{
												"0": "CCXZAAGHG",
												"1": "2025",
												"2": "Part-Time",
												"3": "M",
												"4": "N",
												"5": "19800729",
												"6": "9999",
												"7": "326417514501",
												"8": "XBCP",
												"10": "Rochedale South",
												"12": "4123",
												"14": "QLD",
												"16": "Australia"
											},
											{
												"0": "CCXHXCXZG",
												"1": "2005",
												"2": "Part-Time",
												"3": "M",
												"4": "N",
												"5": "19851123",
												"6": "9999",
												"7": "326417514502",
												"8": "XBFP",
												"10": "Gracemere",
												"12": "4702",
												"14": "QLD",
												"16": "Australia"
											},
											{
												"0": "CCXZGAXHZ",
												"1": "2012",
												"2": "Part-Time",
												"3": "M",
												"4": "N",
												"5": "20001105",
												"6": "9999",
												"7": "326417514503",
												"8": "XHCM",
												"10": "CRAFERS",
												"12": "5152",
												"14": "SA",
												"16": "Australia"
											},
											{
												"0": "CCXZAHXBL",
												"1": "1912",
												"2": "Part-Time",
												"3": "M",
												"4": "N",
												"5": "19951013",
												"6": "1914",
												"7": "326417514504",
												"8": "XBCP",
												"10": "NIGHTCLIFF",
												"12": "814",
												"14": "NT",
												"16": "Australia"
											},
											{
												"0": "CCXZAHXBL",
												"1": "1914",
												"2": "Full-Time",
												"3": "M",
												"4": "N",
												"5": "19951013",
												"6": "1925",
												"7": "326417514505",
												"8": "XBCP",
												"10": "NIGHTCLIFF",
												"12": "814",
												"14": "NT",
												"16": "Australia"
											},
											{
												"0": "CCXZAHXBL",
												"1": "1925",
												"2": "Part-Time",
												"3": "M",
												"4": "N",
												"5": "19951013",
												"6": "2005",
												"7": "326417514506",
												"8": "XBCP",
												"10": "NIGHTCLIFF",
												"12": "814",
												"14": "NT",
												"16": "Australia"
											},
											{
												"0": "CCXZAHXBL",
												"1": "2005",
												"2": "Full-Time",
												"3": "M",
												"4": "N",
												"5": "19951013",
												"6": "2025",
												"7": "326417514507",
												"8": "XBCP",
												"10": "NIGHTCLIFF",
												"12": "814",
												"14": "NT",
												"16": "Australia"
											},
											{
												"0": "CCXZAHXBL",
												"1": "2025",
												"2": "Part-Time",
												"3": "M",
												"4": "N",
												"5": "19951013",
												"6": "2105",
												"7": "326417514508",
												"8": "XBCP",
												"10": "NIGHTCLIFF",
												"12": "814",
												"14": "NT",
												"16": "Australia"
											},
											{
												"0": "CCXZAHXBL",
												"1": "2105",
												"2": "Full-Time",
												"3": "M",
												"4": "N",
												"5": "19951013",
												"6": "9999",
												"7": "326417514509",
												"8": "XBCP",
												"10": "NIGHTCLIFF",
												"12": "814",
												"14": "NT",
												"16": "Australia"
											},
											{
												"0": "CCXZWAHWX",
												"1": "2014",
												"2": "Full-Time",
												"3": "M",
												"4": "N",
												"5": "19920610",
												"6": "9999",
												"7": "326417514510",
												"8": "XBCA",
												"10": "HORSHAM",
												"12": "3400",
												"14": "VIC",
												"16": "Australia"
											},
											{
												"0": "DZXDX",
												"1": "2005",
												"2": "Part-Time",
												"3": "F",
												"4": "N",
												"5": "19710622",
												"6": "9999",
												"7": "326417514511",
												"8": "XBCP",
												"10": "FORTITUDE VALLEY",
												"12": "4006",
												"14": "QLD",
												"16": "Australia"
											},
											{
												"0": "CCXCAGBCC",
												"1": "1912",
												"2": "Part-Time",
												"3": "M",
												"4": "N",
												"5": "19930531",
												"6": "9999",
												"7": "326417514512",
												"8": "XBBE",
												"10": "GLENELG SOUTH",
												"12": "5045",
												"14": "SA",
												"16": "Australia"
											},
											{
												"0": "CCXXWDALG",
												"1": "1914",
												"2": "Full-Time",
												"3": "F",
												"4": "N",
												"5": "19810811",
												"6": "2105",
												"7": "326417514513",
												"8": "XBCP",
												"10": "DARLINGTON",
												"12": "5047",
												"14": "SA",
												"16": "Australia"
											},
											{
												"0": "CCXXWDALG",
												"1": "2105",
												"2": "Unknown",
												"3": "F",
												"4": "N",
												"5": "19810811",
												"6": "9999",
												"7": "326417514514",
												"8": "XBCP",
												"10": "DARLINGTON",
												"12": "5047",
												"14": "SA",
												"16": "Australia"
											},
											{
												"0": "CCXZDWLAW",
												"1": "1905",
												"2": "Part-Time",
												"3": "F",
												"4": "N",
												"5": "19570424",
												"6": "9999",
												"7": "326417514515",
												"8": "XBCA",
												"10": "NUNDAH",
												"12": "4012",
												"14": "QLD",
												"16": "Australia"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "StudentID",
												"type": "string"
											},
											{
												"key": "1",
												"name": "EffectiveTerm",
												"type": "int"
											},
											{
												"key": "2",
												"name": "AcademicLoadDesc",
												"type": "string"
											},
											{
												"key": "3",
												"name": "GenderCode",
												"type": "string"
											},
											{
												"key": "4",
												"name": "InternationalStudentFlag",
												"type": "string"
											},
											{
												"key": "5",
												"name": "BirthDateSK",
												"type": "int"
											},
											{
												"key": "6",
												"name": "ExpiryTerm",
												"type": "int"
											},
											{
												"key": "7",
												"name": "StudentSK",
												"type": "bigint"
											},
											{
												"key": "8",
												"name": "MajorProgramCode",
												"type": "string"
											},
											{
												"key": "9",
												"name": "SecondaryProgramCode",
												"type": "string"
											},
											{
												"key": "10",
												"name": "City1",
												"type": "string"
											},
											{
												"key": "11",
												"name": "City2",
												"type": "string"
											},
											{
												"key": "12",
												"name": "Postcode1",
												"type": "int"
											},
											{
												"key": "13",
												"name": "Postcode2",
												"type": "int"
											},
											{
												"key": "14",
												"name": "StateProvince1",
												"type": "string"
											},
											{
												"key": "15",
												"name": "StateProvince2",
												"type": "string"
											},
											{
												"key": "16",
												"name": "Country1",
												"type": "string"
											},
											{
												"key": "17",
												"name": "Country2",
												"type": "string"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = spark.sql(\"SELECT * FROM `unisadw`.`dimstudent`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.filter(size(StudentDF.StudentCountryDesc)>1).count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('MajorProgramCode', StudentDF.ProgramCode.__getitem__(0))\r\n",
							"StudentDF = StudentDF.withColumn('SecondaryProgramCode', when(size(StudentDF.ProgramCode)>1, StudentDF.ProgramCode.__getitem__(1))\r\n",
							"                                                        .otherwise(lit(None)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('City1', StudentDF.StudentAddressCityCode.__getitem__(0))\r\n",
							"StudentDF = StudentDF.withColumn('City2', when(size(StudentDF.StudentAddressCityCode)>1, StudentDF.StudentAddressCityCode.__getitem__(1))\r\n",
							"                                        .otherwise(lit(None)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('Postcode1', StudentDF.StudentAddressPostcode.__getitem__(0))\r\n",
							"StudentDF = StudentDF.withColumn('Postcode2', when(size(StudentDF.StudentAddressPostcode)>1, StudentDF.StudentAddressPostcode.__getitem__(1))\r\n",
							"                                        .otherwise(lit(None)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('StateProvince1', StudentDF.StudentAddressStateCode.__getitem__(0))\r\n",
							"StudentDF = StudentDF.withColumn('StateProvince2', when(size(StudentDF.StudentAddressStateCode)>1, StudentDF.StudentAddressStateCode.__getitem__(1))\r\n",
							"                                        .otherwise(lit(None)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('Country1', StudentDF.StudentCountryDesc.__getitem__(0))\r\n",
							"StudentDF = StudentDF.withColumn('Country2', when(size(StudentDF.StudentCountryDesc)>1, StudentDF.StudentCountryDesc.__getitem__(1))\r\n",
							"                                        .otherwise(lit(None)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.drop('ProgramCode', 'StudentAddressCityCode', 'StudentAddressPostcode', \r\n",
							"                            'StudentAddressStateCode', 'StudentCountryDesc', 'ProgramDesc', 'AddressDesc')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('AcademicLoadDesc', when(size(StudentDF.AcademicLoadDesc)==1, StudentDF.AcademicLoadDesc.__getitem__(0))\r\n",
							"                                                    .otherwise(lit('Unknown')))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(StudentDF.limit(20))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 15
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.write.mode(\"overwrite\").saveAsTable(\"default.DimStudent\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 2')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "1"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF =  spark.sql(\"SELECT * FROM `default`.`dimstudent`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF = StudentDF.withColumn('AddressLine1', concat_ws(',', StudentDF.City1, StudentDF.StateProvince1, StudentDF.Postcode1, StudentDF.Country1))\r\n",
							"StudentDF = StudentDF.withColumn('AddressLine2', concat_ws(',', StudentDF.City2, StudentDF.StateProvince2, StudentDF.Postcode2, StudentDF.Country2))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"StudentDF.filter(StudentDF.Country2.isNotNull()).collect()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"StudentDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.DimStudent\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourse = spark.sql(\"SELECT * FROM `unisadw`.`dimcourse`\")\r\n",
							"DimAssignment = spark.sql(\"SELECT * FROM `unisadw`.`dimassignment`\")\r\n",
							"DimCourseResource = spark.sql(\"SELECT * FROM `unisadw`.`dimcourseresource`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourse.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourse = DimCourse.withColumn('STEMfield', when(DimCourse.SubjectArea == 'BUIL', lit('Construction Management'))\r\n",
							"                                            .when(DimCourse.SubjectArea == 'CIVE', lit('Construction Management'))\r\n",
							"                                            .when(DimCourse.SubjectArea == 'INFS', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(DimCourse.SubjectArea == 'INFT', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(DimCourse.SubjectArea == 'EEET', lit('Engineering'))\r\n",
							"                                            .when(DimCourse.SubjectArea == 'ENGG', lit('Engineering'))\r\n",
							"                                            .when(DimCourse.SubjectArea == 'MENG', lit('Engineering'))\r\n",
							"                                            .when(DimCourse.SubjectArea == 'RENG', lit('Engineering'))\r\n",
							"                                            .when(DimCourse.SubjectArea == 'PHYS', lit('Engineering'))\r\n",
							"                                            .when(concat(DimCourse.SubjectArea, DimCourse.CatalogNumber.cast(StringType())) == 'COMP1047', lit('Engineering'))\r\n",
							"                                            .when(concat(DimCourse.SubjectArea, DimCourse.CatalogNumber.cast(StringType())) == 'MATH1076', lit('Engineering'))\r\n",
							"                                            .when(concat(DimCourse.SubjectArea, DimCourse.CatalogNumber.cast(StringType())) == 'MATH1077', lit('Engineering'))\r\n",
							"                                            .when(concat(DimCourse.SubjectArea, DimCourse.CatalogNumber.cast(StringType())) == 'MATH1079', lit('Engineering'))\r\n",
							"                                            .when(concat(DimCourse.SubjectArea, DimCourse.CatalogNumber.cast(StringType())) == 'MATH1075', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimCourse.SubjectArea, DimCourse.CatalogNumber.cast(StringType())) == 'MATH2032', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimCourse.SubjectArea, DimCourse.CatalogNumber.cast(StringType())) == 'COMP1043', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimCourse.SubjectArea, DimCourse.CatalogNumber.cast(StringType())) == 'COMP1044', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimCourse.SubjectArea, DimCourse.CatalogNumber.cast(StringType())) == 'COMP2033', lit('Information Technology & Data Analysis')))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimAssignment = DimAssignment.withColumn('STEMfield', when(DimAssignment.SubjectArea == 'BUIL', lit('Construction Management'))\r\n",
							"                                            .when(DimAssignment.SubjectArea == 'CIVE', lit('Construction Management'))\r\n",
							"                                            .when(DimAssignment.SubjectArea == 'INFS', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(DimAssignment.SubjectArea == 'INFT', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(DimAssignment.SubjectArea == 'EEET', lit('Engineering'))\r\n",
							"                                            .when(DimAssignment.SubjectArea == 'ENGG', lit('Engineering'))\r\n",
							"                                            .when(DimAssignment.SubjectArea == 'MENG', lit('Engineering'))\r\n",
							"                                            .when(DimAssignment.SubjectArea == 'RENG', lit('Engineering'))\r\n",
							"                                            .when(DimAssignment.SubjectArea == 'PHYS', lit('Engineering'))\r\n",
							"                                            .when(concat(DimAssignment.SubjectArea, DimAssignment.CatalogNumber.cast(StringType())) == 'COMP1047', lit('Engineering'))\r\n",
							"                                            .when(concat(DimAssignment.SubjectArea, DimAssignment.CatalogNumber.cast(StringType())) == 'MATH1076', lit('Engineering'))\r\n",
							"                                            .when(concat(DimAssignment.SubjectArea, DimAssignment.CatalogNumber.cast(StringType())) == 'MATH1077', lit('Engineering'))\r\n",
							"                                            .when(concat(DimAssignment.SubjectArea, DimAssignment.CatalogNumber.cast(StringType())) == 'MATH1079', lit('Engineering'))\r\n",
							"                                            .when(concat(DimAssignment.SubjectArea, DimAssignment.CatalogNumber.cast(StringType())) == 'MATH1075', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimAssignment.SubjectArea, DimAssignment.CatalogNumber.cast(StringType())) == 'MATH2032', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimAssignment.SubjectArea, DimAssignment.CatalogNumber.cast(StringType())) == 'COMP1043', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimAssignment.SubjectArea, DimAssignment.CatalogNumber.cast(StringType())) == 'COMP1044', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimAssignment.SubjectArea, DimAssignment.CatalogNumber.cast(StringType())) == 'COMP2033', lit('Information Technology & Data Analysis')))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourseResource = DimCourseResource.withColumn('STEMfield', when(DimCourseResource.SubjectArea == 'BUIL', lit('Construction Management'))\r\n",
							"                                            .when(DimCourseResource.SubjectArea == 'CIVE', lit('Construction Management'))\r\n",
							"                                            .when(DimCourseResource.SubjectArea == 'INFS', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(DimCourseResource.SubjectArea == 'INFT', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(DimCourseResource.SubjectArea == 'EEET', lit('Engineering'))\r\n",
							"                                            .when(DimCourseResource.SubjectArea == 'ENGG', lit('Engineering'))\r\n",
							"                                            .when(DimCourseResource.SubjectArea == 'MENG', lit('Engineering'))\r\n",
							"                                            .when(DimCourseResource.SubjectArea == 'RENG', lit('Engineering'))\r\n",
							"                                            .when(DimCourseResource.SubjectArea == 'PHYS', lit('Engineering'))\r\n",
							"                                            .when(concat(DimCourseResource.SubjectArea, DimCourseResource.CatalogNumber.cast(StringType())) == 'COMP1047', lit('Engineering'))\r\n",
							"                                            .when(concat(DimCourseResource.SubjectArea, DimCourseResource.CatalogNumber.cast(StringType())) == 'MATH1076', lit('Engineering'))\r\n",
							"                                            .when(concat(DimCourseResource.SubjectArea, DimCourseResource.CatalogNumber.cast(StringType())) == 'MATH1077', lit('Engineering'))\r\n",
							"                                            .when(concat(DimCourseResource.SubjectArea, DimCourseResource.CatalogNumber.cast(StringType())) == 'MATH1079', lit('Engineering'))\r\n",
							"                                            .when(concat(DimCourseResource.SubjectArea, DimCourseResource.CatalogNumber.cast(StringType())) == 'MATH1075', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimCourseResource.SubjectArea, DimCourseResource.CatalogNumber.cast(StringType())) == 'MATH2032', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimCourseResource.SubjectArea, DimCourseResource.CatalogNumber.cast(StringType())) == 'COMP1043', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimCourseResource.SubjectArea, DimCourseResource.CatalogNumber.cast(StringType())) == 'COMP1044', lit('Information Technology & Data Analysis'))\r\n",
							"                                            .when(concat(DimCourseResource.SubjectArea, DimCourseResource.CatalogNumber.cast(StringType())) == 'COMP2033', lit('Information Technology & Data Analysis')))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourse.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimcourse\")\r\n",
							"DimAssignment.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimassignment\")\r\n",
							"DimCourseResource.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimcourseresource\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourse = spark.sql(\"SELECT * FROM `default`.`dimcourse`\")\r\n",
							"DimAssignment = spark.sql(\"SELECT * FROM `default`.`dimassignment`\")\r\n",
							"DimCourseResource = spark.sql(\"SELECT * FROM `default`.`dimcourseresource`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SelfGenTabs')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"DateDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/local/QID1109_20210913_202220_1.parq', format='parquet')\r\n",
							"TimeDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/local/DimTime.parq', format='parquet')\r\n",
							"GradeDf = spark.read.options(header='True', inferSchema='True', delimiter=',')\\\r\n",
							"                .csv(\"abfss://datalake@dus02store.dfs.core.windows.net/local/GradeScheme.csv\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DateDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimdate\")\r\n",
							"TimeDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimtime\")\r\n",
							"GradeDf.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimgrade\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"GradeDf.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.types import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"GradeDf = GradeDf.withColumn('UpperBound', GradeDf.UpperBound.cast(IntegerType()))\\\r\n",
							"                .withColumn('LowerBound', GradeDf.LowerBound.cast(IntegerType()))\\\r\n",
							"                .withColumn('GradePoint', GradeDf.GradePoint.cast(DecimalType(3,1)))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"GradeDf.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimgrade\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SnapshotCourseEngagement')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"CourseVisitDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/coursesitevisits.json', format='json')\r\n",
							"CourseVisitDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 50
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"CourseVisitDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"CourseVisitDF = CourseVisitDF.drop('_id')\r\n",
							"CourseVisitDF = CourseVisitDF.distinct()\r\n",
							"CourseVisitDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 51
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Subject Area', 'SubjectArea')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Catalog Number', 'CatalogNumber')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Term Code', 'TermCode')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Student ID', 'StudentID')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Visit Count', 'VisitCount')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Engagement Count', 'EngagementCount')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Engagement Percentage', 'EngagementPercentage')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Current Grade', 'CurrentGrade')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Current Grade Letter', 'CurrentGradeLetter')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Official Grade', 'OfficialGrade')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Official Grade Letter', 'OfficialGradeLetter')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Last Course Login Date', 'LastCourseLoginDate')\r\n",
							"CourseVisitDF = CourseVisitDF.withColumnRenamed('Course ID', 'CourseID')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 52
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"factVideo = spark.read.options(header='True', inferSchema='True', delimiter=',')\\\r\n",
							"                .csv(\"abfss://datalake@dus02store.dfs.core.windows.net/reOrganized_v2/NewVideo/newVideoMerged_v2.csv\")\r\n",
							"DimDate = spark.sql(\"SELECT * FROM `unisadw`.`dimdate`\")\r\n",
							"DimGrade = spark.sql(\"SELECT * FROM `unisadw`.`dimgrade`\")\r\n",
							"DimStudent = spark.sql(\"SELECT * FROM `unisadw`.`dimstudent`\")\r\n",
							"DimTime = spark.sql(\"SELECT * FROM `unisadw`.`dimtime`\")\r\n",
							"DimCourse = spark.sql(\"SELECT * FROM `unisadw`.`dimcourse`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 53
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"factVideo = factVideo.withColumnRenamed('Student ID', 'StudentID')\r\n",
							"factVideo = factVideo.withColumnRenamed('Views and DownLoads', 'ViewsDownLoads')\r\n",
							"factVideo = factVideo.withColumnRenamed('Minutes Delivered', 'MinutesDelivered')\r\n",
							"factVideo = factVideo.withColumnRenamed('Average Minutes Delivered', 'AverageMinutesDelivered')\r\n",
							"\r\n",
							"factVideo = factVideo.select('StudentID', 'ViewsDownLoads', 'MinutesDelivered', 'AverageMinutesDelivered', 'degree', 'course', 'termYear')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 54
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"factVideo = factVideo.withColumn('StudyPeriod', regexp_extract(factVideo.termYear, r'SP(\\d?)', 1))\\\r\n",
							"                        .withColumn('Year', when(factVideo.termYear == 'UPDATED_INFT 1024 SP4 2020 NO Assessment Submission Data', 20)\r\n",
							"                                            .otherwise(regexp_extract(element_at(split(factVideo.termYear, '[_ ]'), -1), r'20(\\d+)', 1)))\r\n",
							"\r\n",
							"factVideo = factVideo.withColumn('TermCode', when(factVideo.StudyPeriod == '1', concat(factVideo.Year, lit('05')).cast(IntegerType()))\r\n",
							"                                            .when(factVideo.StudyPeriod == '3', concat(factVideo.Year, lit('12')).cast(IntegerType()))\r\n",
							"                                            .when(factVideo.StudyPeriod == '4', concat(factVideo.Year, lit('14')).cast(IntegerType()))\r\n",
							"                                            .when(factVideo.StudyPeriod == '6', concat(factVideo.Year, lit('25')).cast(IntegerType()))\r\n",
							"                                            .otherwise(None))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 55
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"factVideo = factVideo.filter(factVideo.TermCode.isNotNull())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 56
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"factVideo = factVideo.withColumn('course', when(factVideo.course == 'MENG1014', 'MENG 1014').otherwise(factVideo.course))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 57
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"CourseVisitDF = CourseVisitDF.withColumn('LastLoginTime', to_timestamp(CourseVisitDF.LastCourseLoginDate, 'dd/MM/yyyy hh:mm:ss a'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 58
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"CourseVisitDF = CourseVisitDF.join(DimCourse, ['CourseID', 'TermCode'], 'left')\\\r\n",
							"                                .join(factVideo, [CourseVisitDF.StudentID == factVideo.StudentID,\r\n",
							"                                                CourseVisitDF.TermCode == factVideo.TermCode,\r\n",
							"                                                concat_ws(' ', CourseVisitDF.SubjectArea, CourseVisitDF.CatalogNumber.cast(StringType())) == factVideo.course], 'left')\\\r\n",
							"                                .join(DimStudent, [CourseVisitDF.StudentID == DimStudent.StudentID,\r\n",
							"                                                CourseVisitDF.TermCode >= DimStudent.EffectiveTerm,\r\n",
							"                                                CourseVisitDF.TermCode < DimStudent.ExpiryTerm], 'left')\\\r\n",
							"                                .join(DimDate, to_date(CourseVisitDF.LastLoginTime) == DimDate.FullDateAlternateKey, 'left')\\\r\n",
							"                                .join(DimTime, [hour(CourseVisitDF.LastLoginTime) == DimTime.Hour,\r\n",
							"                                            minute(CourseVisitDF.LastLoginTime) == DimTime.Minute,\r\n",
							"                                            second(CourseVisitDF.LastLoginTime) == DimTime.Second], 'left')\\\r\n",
							"                                .select(CourseVisitDF.VisitCount, CourseVisitDF.EngagementCount, CourseVisitDF.EngagementPercentage,\r\n",
							"                                        CourseVisitDF.CurrentGrade, CourseVisitDF.CurrentGradeLetter, CourseVisitDF.OfficialGrade,\r\n",
							"                                        CourseVisitDF.OfficialGradeLetter, CourseVisitDF.LastLoginTime, \r\n",
							"                                        factVideo.ViewsDownLoads, factVideo.MinutesDelivered, factVideo.AverageMinutesDelivered,\r\n",
							"                                        DimCourse.CourseSK, DimStudent.StudentSK, DimDate.DateKey.alias('LastLoginDateSK'),\r\n",
							"                                        DimTime.TimeSK.alias('LastLoginTimeSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 60
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"CourseVisitDF = CourseVisitDF.join(DimGrade, CourseVisitDF.CurrentGradeLetter == DimGrade.Grade, 'left')\\\r\n",
							"                            .select(CourseVisitDF.VisitCount, CourseVisitDF.EngagementCount, CourseVisitDF.EngagementPercentage,\r\n",
							"                                    CourseVisitDF.CurrentGrade, CourseVisitDF.OfficialGrade,\r\n",
							"                                    CourseVisitDF.OfficialGradeLetter, CourseVisitDF.LastLoginTime,\r\n",
							"                                    CourseVisitDF.CourseSK, CourseVisitDF.StudentSK, \r\n",
							"                                    CourseVisitDF.LastLoginDateSK, CourseVisitDF.LastLoginTimeSK,\r\n",
							"                                    CourseVisitDF.ViewsDownLoads, CourseVisitDF.MinutesDelivered, CourseVisitDF.AverageMinutesDelivered,\r\n",
							"                                    DimGrade.GradeSK.alias('CurrentGradeSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 62
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"CourseVisitDF = CourseVisitDF.join(DimGrade, CourseVisitDF.OfficialGradeLetter == DimGrade.Grade, 'left')\\\r\n",
							"                            .select(CourseVisitDF.VisitCount, CourseVisitDF.EngagementCount, CourseVisitDF.EngagementPercentage,\r\n",
							"                                    CourseVisitDF.CurrentGrade, CourseVisitDF.OfficialGrade, CourseVisitDF.LastLoginTime,\r\n",
							"                                    CourseVisitDF.ViewsDownLoads, CourseVisitDF.MinutesDelivered, CourseVisitDF.AverageMinutesDelivered,\r\n",
							"                                    CourseVisitDF.CourseSK, CourseVisitDF.StudentSK, \r\n",
							"                                    CourseVisitDF.LastLoginDateSK, CourseVisitDF.LastLoginTimeSK, CourseVisitDF.CurrentGradeSK,\r\n",
							"                                    DimGrade.GradeSK.alias('OfficialGradeSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 63
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"CourseVisitDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 64
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"CourseVisitDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.snapshotengagement\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 65
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SnapshotFactSubmission')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *\r\n",
							"from datetime import datetime"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 48
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"def change_year_(date, Year):\r\n",
							"    return datetime(date).replace(year=Year)\r\n",
							"\r\n",
							"change_year = udf(change_year_, TimestampType())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 49
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/newsubmissionvgrades.json', format='json')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 50
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.drop('_id')\r\n",
							"subvgradeDF = subvgradeDF.distinct()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 51
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimAssignment = spark.sql(\"SELECT * FROM `unisadw`.`dimassignment`\")\r\n",
							"DimDate = spark.sql(\"SELECT * FROM `unisadw`.`dimdate`\")\r\n",
							"DimGrade = spark.sql(\"SELECT * FROM `unisadw`.`dimgrade`\")\r\n",
							"DimStudent = spark.sql(\"SELECT * FROM `unisadw`.`dimstudent`\")\r\n",
							"DimTime = spark.sql(\"SELECT * FROM `unisadw`.`dimtime`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.withColumnRenamed('Assessment Name', 'AssessmentName')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Course ID', 'CourseID')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Subject Area', 'SubjectArea')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Catalog Number', 'CatalogNumber')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Course Name', 'CourseName')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Term Code', 'TermCode')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Student ID', 'StudentID')\r\n",
							"subvgradeDF = subvgradeDF.withColumnRenamed('Grade Numeric', 'GradeNumeric')\r\n",
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 52
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.withColumn('IndividualDueTime', to_timestamp(col(\"Student's Due Date\"), 'dd/MM/yyyy hh:mm:ss a'))\\\r\n",
							"                        .withColumn('IndividualDueTimeAlter', to_timestamp(col(\"Student's Due Date\"), 'dd/MM/yyyy HH:mm'))\r\n",
							"subvgradeDF = subvgradeDF.withColumn('IndividualDueTime', when(isnull(subvgradeDF.IndividualDueTime), subvgradeDF.IndividualDueTimeAlter)\r\n",
							"                                                            .otherwise(subvgradeDF.IndividualDueTime))\r\n",
							"subvgradeDF = subvgradeDF.withColumn('IndividualDueTime', when(year(subvgradeDF.IndividualDueTime) == 20, change_year(subvgradeDF.IndividualDueTime, lit(2020)))\r\n",
							"                                                            .otherwise(subvgradeDF.IndividualDueTime))\r\n",
							"\r\n",
							"subvgradeDF = subvgradeDF.withColumn('LastSubmissionTime', to_timestamp(col(\"Last Submission Time\"), 'dd/MM/yyyy hh:mm:ss a'))\\\r\n",
							"                        .withColumn('LastSubmissionTimeAlter', to_timestamp(col(\"Last Submission Time\"), 'dd/MM/yyyy HH:mm'))\r\n",
							"subvgradeDF = subvgradeDF.withColumn('LastSubmissionTime', when(isnull(subvgradeDF.LastSubmissionTime), subvgradeDF.LastSubmissionTimeAlter)\r\n",
							"                                                            .otherwise(subvgradeDF.LastSubmissionTime))\r\n",
							"subvgradeDF = subvgradeDF.withColumn('LastSubmissionTime', when((year(subvgradeDF.LastSubmissionTime) == 20) & subvgradeDF.LastSubmissionTime.isNotNull(), \r\n",
							"                                                                change_year(subvgradeDF.LastSubmissionTime, lit(2020)))\r\n",
							"                                                            .otherwise(subvgradeDF.LastSubmissionTime))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 53
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.join(DimAssignment, ['AssessmentName', 'CourseID', 'TermCode'], 'left')\\\r\n",
							"                        .join(DimStudent, [subvgradeDF.StudentID == DimStudent.StudentID, \r\n",
							"                                                subvgradeDF.TermCode >= DimStudent.EffectiveTerm,\r\n",
							"                                                subvgradeDF.TermCode < DimStudent.ExpiryTerm], 'left')\\\r\n",
							"                        .join(DimGrade, 'Grade', 'left')\\\r\n",
							"                        .select(subvgradeDF.GradeNumeric, subvgradeDF.IndividualDueTime, subvgradeDF.LastSubmissionTime,\r\n",
							"                                DimAssignment.AssignmentSK, DimStudent.StudentSK, DimGrade.GradeSK)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 54
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(subvgradeDF.where(year(subvgradeDF.LastSubmissionTime)==20).limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 55
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 41
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.join(DimDate, to_date(subvgradeDF.IndividualDueTime) == DimDate.FullDateAlternateKey, 'left')\\\r\n",
							"                        .join(DimTime, [hour(subvgradeDF.IndividualDueTime) == DimTime.Hour,\r\n",
							"                                        minute(subvgradeDF.IndividualDueTime) == DimTime.Minute,\r\n",
							"                                        second(subvgradeDF.IndividualDueTime) == DimTime.Second], 'left')\\\r\n",
							"                        .select(subvgradeDF.GradeNumeric, subvgradeDF.IndividualDueTime, subvgradeDF.LastSubmissionTime,\r\n",
							"                                subvgradeDF.AssignmentSK, subvgradeDF.StudentSK, subvgradeDF.GradeSK,\r\n",
							"                                DimDate.DateKey.alias('IndividualDueDateSK'), DimTime.TimeSK.alias('IndividualDueTimeSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF = subvgradeDF.join(DimDate, to_date(subvgradeDF.LastSubmissionTime) == DimDate.FullDateAlternateKey, 'left')\\\r\n",
							"                        .join(DimTime, [hour(subvgradeDF.LastSubmissionTime) == DimTime.Hour,\r\n",
							"                                        minute(subvgradeDF.LastSubmissionTime) == DimTime.Minute,\r\n",
							"                                        second(subvgradeDF.LastSubmissionTime) == DimTime.Second], 'left')\\\r\n",
							"                        .select(subvgradeDF.GradeNumeric, subvgradeDF.IndividualDueTime, subvgradeDF.LastSubmissionTime,\r\n",
							"                                subvgradeDF.AssignmentSK, subvgradeDF.StudentSK, subvgradeDF.GradeSK,\r\n",
							"                                subvgradeDF.IndividualDueDateSK, subvgradeDF.IndividualDueTimeSK,\r\n",
							"                                DimDate.DateKey.alias('LastSubmissionDateSK'), DimTime.TimeSK.alias('LastSubmissionTimeSK'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"subvgradeDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.snapshotfactsubmission\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SnowFlake')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "1"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"8cd65552-83f7-40fd-9167-9e63aeb4dc7b": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "170263",
												"1": "2112",
												"2": "2021",
												"3": "Solution Activity 7B",
												"4": "File",
												"5": "Formative",
												"6": "1079",
												"7": "UO Mathematical Methods for Engineers 2",
												"8": "MATH",
												"9": "1185410973696",
												"10": "Engineering",
												"11": "704374636545"
											},
											{
												"0": "170263",
												"1": "2112",
												"2": "2021",
												"3": "Individual communication with the teaching team",
												"4": "Dialogue",
												"5": "Formative",
												"6": "1079",
												"7": "UO Mathematical Methods for Engineers 2",
												"8": "MATH",
												"9": "1185410973697",
												"10": "Engineering",
												"11": "704374636545"
											},
											{
												"0": "163523",
												"1": "2012",
												"2": "2020",
												"3": "Claims in Tort of Negligence for Building Defects - Notes",
												"4": "File",
												"5": "Formative",
												"6": "2029",
												"7": "UO Introduction to Contract Administration",
												"8": "BUIL",
												"9": "1185410973698",
												"10": "Construction Management",
												"11": "94489280513"
											},
											{
												"0": "163523",
												"1": "2112",
												"2": "2021",
												"3": "Concept 6.1: Duress - Notes",
												"4": "File",
												"5": "Formative",
												"6": "2029",
												"7": "UO Introduction to Contract Administration",
												"8": "BUIL",
												"9": "1185410973699",
												"10": "Construction Management",
												"11": "214748364800"
											},
											{
												"0": "163523",
												"1": "2025",
												"2": "2020",
												"3": "Concept 4.3: Promissory Estoppel - Notes",
												"4": "File",
												"5": "Formative",
												"6": "2029",
												"7": "UO Introduction to Contract Administration",
												"8": "BUIL",
												"9": "1185410973700",
												"10": "Construction Management",
												"11": "987842478080"
											},
											{
												"0": "163523",
												"1": "2025",
												"2": "2020",
												"3": "Week 4 Learning Activities Forum",
												"4": "Forum",
												"5": "Formative",
												"6": "2029",
												"7": "UO Introduction to Contract Administration",
												"8": "BUIL",
												"9": "1185410973701",
												"10": "Construction Management",
												"11": "987842478080"
											},
											{
												"0": "163506",
												"1": "1914",
												"2": "2019",
												"3": "Week 6 Review Questions",
												"4": "Forum",
												"5": "Formative",
												"6": "1024",
												"7": "UO Information Technology Fundamentals",
												"8": "INFT",
												"9": "1185410973702",
												"10": "Information Technology & Data Analysis",
												"11": "670014898176"
											},
											{
												"0": "164085",
												"1": "1912",
												"2": "2019",
												"3": "Assessment 2 Resources",
												"4": "Folder",
												"5": "Formative",
												"6": "2027",
												"7": "UO Construction Cost Planning",
												"8": "BUIL",
												"9": "1185410973703",
												"10": "Construction Management",
												"11": "798863917056"
											},
											{
												"0": "163521",
												"1": "2005",
												"2": "2020",
												"3": "Assessment 2 Resources",
												"4": "Folder",
												"5": "Formative",
												"6": "1026",
												"7": "UO Introduction to Construction Business Management",
												"8": "BUIL",
												"9": "1185410973704",
												"10": "Construction Management",
												"11": "635655159808"
											},
											{
												"0": "163521",
												"1": "2005",
												"2": "2020",
												"3": "Slides and Notes - 6.1 Understanding Economic Growth",
												"4": "File",
												"5": "Formative",
												"6": "1026",
												"7": "UO Introduction to Construction Business Management",
												"8": "BUIL",
												"9": "1185410973705",
												"10": "Construction Management",
												"11": "635655159808"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "CourseID",
												"type": "bigint"
											},
											{
												"key": "1",
												"name": "TermCode",
												"type": "bigint"
											},
											{
												"key": "2",
												"name": "Year",
												"type": "bigint"
											},
											{
												"key": "3",
												"name": "ActivityResourceName",
												"type": "string"
											},
											{
												"key": "4",
												"name": "ActivityResourceType",
												"type": "string"
											},
											{
												"key": "5",
												"name": "AssessmentMethod",
												"type": "string"
											},
											{
												"key": "6",
												"name": "CatalogNumber",
												"type": "bigint"
											},
											{
												"key": "7",
												"name": "CourseName",
												"type": "string"
											},
											{
												"key": "8",
												"name": "SubjectArea",
												"type": "string"
											},
											{
												"key": "9",
												"name": "ResourceSK",
												"type": "bigint"
											},
											{
												"key": "10",
												"name": "STEMfield",
												"type": "string"
											},
											{
												"key": "11",
												"name": "CourseSK",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"1"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"DimAssignment = spark.sql(\"SELECT * FROM `default`.`dimassignment`\")\r\n",
							"DimCourse = spark.sql(\"SELECT * FROM `default`.`dimcourse`\")\r\n",
							"DimCourseResource = spark.sql(\"SELECT * FROM `default`.`dimcourseresource`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.functions import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourseResource.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourse = DimCourse.withColumnRenamed('count', 'NumberOfStudents')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimAssignment = DimAssignment.join(DimCourse, ['CourseID', 'TermCode'], 'left').select('DimAssignment.*', DimCourse.CourseSK)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourseResource = DimCourseResource.withColumnRenamed('count', 'NumberOfStudentsVisited')\r\n",
							"DimCourseResource = DimCourseResource.join(DimCourse, ['CourseID', 'TermCode'], 'left').select('DimCourseResource.*', DimCourse.CourseSK)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(DimCourseResource.limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimAssignment.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimassignment\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourseResource.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimcourseresource\")\r\n",
							"DimCourse.write.mode(\"overwrite\").saveAsTable(\"unisadw.dimcourse\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 15
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataLakeDF')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"9f4c8c3b-bee3-485f-9688-638f23db44ce": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "0",
												"1": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion",
												"2": "11/06/2021 5:00:00 PM",
												"3": "14/06/2021 12:00:00 PM",
												"4": "nan",
												"5": "18/06/2021 7:34:55 AM",
												"6": "CCXZGLCXW",
												"7": "164088",
												"8": "CIVE",
												"9": "2015",
												"10": "UO Construction Environmental Science",
												"11": "2112",
												"12": "2021",
												"13": "External, UniSA Online, Online"
											},
											{
												"0": "1",
												"1": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion",
												"2": "11/06/2021 5:00:00 PM",
												"3": "14/06/2021 12:00:00 PM",
												"4": "16/06/2021 11:55:00 PM",
												"5": "16/06/2021 8:45:36 PM",
												"6": "CCXZGLZXB",
												"7": "164088",
												"8": "CIVE",
												"9": "2015",
												"10": "UO Construction Environmental Science",
												"11": "2112",
												"12": "2021",
												"13": "External, UniSA Online, Online"
											},
											{
												"0": "2",
												"1": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion",
												"2": "11/06/2021 5:00:00 PM",
												"3": "14/06/2021 12:00:00 PM",
												"4": "18/06/2021 5:00:00 PM",
												"5": "18/06/2021 9:53:47 PM",
												"6": "CCXHHGZZD",
												"7": "164088",
												"8": "CIVE",
												"9": "2015",
												"10": "UO Construction Environmental Science",
												"11": "2112",
												"12": "2021",
												"13": "External, UniSA Online, Online"
											},
											{
												"0": "3",
												"1": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion",
												"2": "11/06/2021 5:00:00 PM",
												"3": "14/06/2021 12:00:00 PM",
												"4": "nan",
												"5": "10/06/2021 1:01:20 PM",
												"6": "CCXZWZAZB",
												"7": "164088",
												"8": "CIVE",
												"9": "2015",
												"10": "UO Construction Environmental Science",
												"11": "2112",
												"12": "2021",
												"13": "External, UniSA Online, Online"
											},
											{
												"0": "4",
												"1": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion",
												"2": "11/06/2021 5:00:00 PM",
												"3": "14/06/2021 12:00:00 PM",
												"4": "nan",
												"5": "14/06/2021 11:40:32 AM",
												"6": "CCXZLZHHX",
												"7": "164088",
												"8": "CIVE",
												"9": "2015",
												"10": "UO Construction Environmental Science",
												"11": "2112",
												"12": "2021",
												"13": "External, UniSA Online, Online"
											},
											{
												"0": "5",
												"1": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion",
												"2": "11/06/2021 5:00:00 PM",
												"3": "14/06/2021 12:00:00 PM",
												"4": "nan",
												"5": "14/06/2021 7:31:17 AM",
												"6": "CCXZAAHHX",
												"7": "164088",
												"8": "CIVE",
												"9": "2015",
												"10": "UO Construction Environmental Science",
												"11": "2112",
												"12": "2021",
												"13": "External, UniSA Online, Online"
											},
											{
												"0": "6",
												"1": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion",
												"2": "11/06/2021 5:00:00 PM",
												"3": "14/06/2021 12:00:00 PM",
												"4": "nan",
												"5": "14/06/2021 3:13:01 PM",
												"6": "CCXZAGWZD",
												"7": "164088",
												"8": "CIVE",
												"9": "2015",
												"10": "UO Construction Environmental Science",
												"11": "2112",
												"12": "2021",
												"13": "External, UniSA Online, Online"
											},
											{
												"0": "7",
												"1": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion",
												"2": "11/06/2021 5:00:00 PM",
												"3": "14/06/2021 12:00:00 PM",
												"4": "21/06/2021 12:00:00 PM",
												"5": "21/06/2021 5:53:49 PM",
												"6": "CCXHZDLGW",
												"7": "164088",
												"8": "CIVE",
												"9": "2015",
												"10": "UO Construction Environmental Science",
												"11": "2112",
												"12": "2021",
												"13": "External, UniSA Online, Online"
											},
											{
												"0": "8",
												"1": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion",
												"2": "11/06/2021 5:00:00 PM",
												"3": "14/06/2021 12:00:00 PM",
												"4": "17/06/2021 12:00:00 PM",
												"5": "22/06/2021 10:37:07 AM",
												"6": "CCXZGBBGD",
												"7": "164088",
												"8": "CIVE",
												"9": "2015",
												"10": "UO Construction Environmental Science",
												"11": "2112",
												"12": "2021",
												"13": "External, UniSA Online, Online"
											},
											{
												"0": "9",
												"1": "Part B: Thermal comfort +Part C:VentilationPart +D: Energy Efficiency+Part E: Acoustics and Lighting + Part F: Introduction and conclusion",
												"2": "11/06/2021 5:00:00 PM",
												"3": "14/06/2021 12:00:00 PM",
												"4": "nan",
												"5": "12/06/2021 1:03:08 PM",
												"6": "CCXZDCXCB",
												"7": "164088",
												"8": "CIVE",
												"9": "2015",
												"10": "UO Construction Environmental Science",
												"11": "2112",
												"12": "2021",
												"13": "External, UniSA Online, Online"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "_c0",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Assessment Name",
												"type": "string"
											},
											{
												"key": "2",
												"name": "Initial Due Date",
												"type": "string"
											},
											{
												"key": "3",
												"name": "Global Extension Due Date",
												"type": "string"
											},
											{
												"key": "4",
												"name": "Individual Extension Due Date",
												"type": "string"
											},
											{
												"key": "5",
												"name": "Last Submission Time",
												"type": "string"
											},
											{
												"key": "6",
												"name": "Student ID",
												"type": "string"
											},
											{
												"key": "7",
												"name": "Course ID",
												"type": "string"
											},
											{
												"key": "8",
												"name": "Subject Area",
												"type": "string"
											},
											{
												"key": "9",
												"name": "Catalog Number",
												"type": "string"
											},
											{
												"key": "10",
												"name": "Course Name",
												"type": "string"
											},
											{
												"key": "11",
												"name": "Term Code",
												"type": "string"
											},
											{
												"key": "12",
												"name": "Year",
												"type": "string"
											},
											{
												"key": "13",
												"name": "Course Offering Description",
												"type": "string"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "count",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"lateSubDF = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"abfss://datalake@dus02store.dfs.core.windows.net/reOrganized_v2/LateSubmissions/*\")\r\n",
							"display(lateSubDF.limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"lateSubDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"len(lateSubDF.columns)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"lateSubDF.write.mode(\"overwrite\").saveAsTable(\"default.lateSubMerged\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"lateSubDF.columns"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"lateSubDF = lateSubDF.withColumnRenamed(\"Assessment Name\", \"AssessmentName\")\r\n",
							"lateSubDF = lateSubDF.withColumnRenamed(\"Initial Due Date\", \"InitialDueDate\")\r\n",
							"lateSubDF = lateSubDF.withColumnRenamed(\"Global Extension Due Date\", \"GlobalExtensionDueDate\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"lateSubDF = lateSubDF.withColumnRenamed(\"Individual Extension Due Date\", \"IndividualExtensionDueDate\")\r\n",
							"lateSubDF = lateSubDF.withColumnRenamed(\"Last Submission Time\", \"LastSubmissionTime\")\r\n",
							"lateSubDF = lateSubDF.withColumnRenamed(\"Student ID\", \"StudentID\")\r\n",
							"lateSubDF = lateSubDF.withColumnRenamed(\"Course ID\", \"CourseID\")\r\n",
							"lateSubDF = lateSubDF.withColumnRenamed(\"Subject Area\", \"SubjectArea\")\r\n",
							"lateSubDF = lateSubDF.withColumnRenamed(\"Catalog Number\", \"CatalogNumber\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"lateSubDF = lateSubDF.withColumnRenamed(\"Course Name\", \"CourseName\")\r\n",
							"lateSubDF = lateSubDF.withColumnRenamed(\"Term Code\", \"TermCode\")\r\n",
							"lateSubDF = lateSubDF.withColumnRenamed(\"Course Offering Description\", \"CourseOfferingDescription\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/factLogActivities')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"f5a52ce9-3647-4aa4-82e4-82d26390b36e": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Overview report",
												"1": "229"
											},
											{
												"0": "The user with id '5217' updated the 'label' activity with course module id '74789'.",
												"1": "4"
											},
											{
												"0": "Course participation",
												"1": "779"
											},
											{
												"0": "The user with id '14408' updated the completion state for the course module with id '227552' for the user with id '14408'.",
												"1": "1"
											},
											{
												"0": "The user with id '19247' updated the completion state for the course module with id '227552' for the user with id '19247'.",
												"1": "1"
											},
											{
												"0": "Grade history",
												"1": "6"
											},
											{
												"0": "The user with id '31482' updated the completion state for the course module with id '227552' for the user with id '31482'.",
												"1": "1"
											},
											{
												"0": "Activity report",
												"1": "99"
											},
											{
												"0": "SCORM package",
												"1": "1316"
											},
											{
												"0": "Single view",
												"1": "583"
											},
											{
												"0": "The user with id '10228' updated the 'label' activity with course module id '50894'.",
												"1": "4"
											},
											{
												"0": "The user with id '2152' updated the 'label' activity with course module id '50894'.",
												"1": "3"
											},
											{
												"0": "Glossary",
												"1": "3970"
											},
											{
												"0": "Chat",
												"1": "5"
											},
											{
												"0": "URL",
												"1": "33186"
											},
											{
												"1": "24070"
											},
											{
												"0": "Submission comments",
												"1": "724"
											},
											{
												"0": "The user with id '10228' created the 'label' activity with course module id '50894'.",
												"1": "1"
											},
											{
												"0": "The user with id '19706' updated the completion state for the course module with id '227552' for the user with id '19706'.",
												"1": "1"
											},
											{
												"0": "Scheduler",
												"1": "13097"
											},
											{
												"0": "Live logs",
												"1": "104"
											},
											{
												"0": "Extensions",
												"1": "54621"
											},
											{
												"0": "Online text submissions",
												"1": "5656"
											},
											{
												"0": "H5P",
												"1": "351751"
											},
											{
												"0": "Choice",
												"1": "7579"
											},
											{
												"0": "The user with id '10743' updated the 'label' activity with course module id '227552'.",
												"1": "3"
											},
											{
												"0": "Lightbox Gallery",
												"1": "33"
											},
											{
												"0": "Book",
												"1": "318"
											},
											{
												"0": "Quiz",
												"1": "633102"
											},
											{
												"0": "Workshop",
												"1": "2123"
											},
											{
												"0": "nan",
												"1": "8475"
											},
											{
												"0": "Mahara portfolio",
												"1": "5"
											},
											{
												"0": "User report",
												"1": "89515"
											},
											{
												"0": "Wiki",
												"1": "525"
											},
											{
												"0": "File",
												"1": "578398"
											},
											{
												"0": "Excel spreadsheet",
												"1": "41"
											},
											{
												"0": "External tool",
												"1": "1724"
											},
											{
												"0": "UniSA Media Library Video Assignment",
												"1": "38"
											},
											{
												"0": "The user with id '33798' updated the completion state for the course module with id '227552' for the user with id '33798'.",
												"1": "1"
											},
											{
												"0": "Page",
												"1": "28805"
											},
											{
												"0": "Logs",
												"1": "905"
											},
											{
												"0": "OpenDocument spreadsheet",
												"1": "347"
											},
											{
												"0": "Recycle bin",
												"1": "4317"
											},
											{
												"0": "File submissions",
												"1": "47346"
											},
											{
												"0": "The user with id '23957' updated the completion state for the course module with id '227552' for the user with id '23957'.",
												"1": "1"
											},
											{
												"0": "The user with id '5217' updated the 'label' activity with course module id '127365'.",
												"1": "1"
											},
											{
												"0": "Plain text file",
												"1": "1"
											},
											{
												"0": "Dialogue",
												"1": "3788"
											},
											{
												"0": "The user with id '2152' updated the 'label' activity with course module id '50127'.",
												"1": "2"
											},
											{
												"0": "The user with id '6225' updated the 'label' activity with course module id '61207'.",
												"1": "2"
											},
											{
												"0": "The user with id '33252' updated the completion state for the course module with id '227552' for the user with id '33252'.",
												"1": "1"
											},
											{
												"0": "Group self-selection",
												"1": "5769"
											},
											{
												"0": "Folder",
												"1": "82768"
											},
											{
												"0": "The user with id '6225' updated the 'label' activity with course module id '50127'.",
												"1": "3"
											},
											{
												"0": "System",
												"1": "3296054"
											},
											{
												"0": "Lesson",
												"1": "71627"
											},
											{
												"0": "Forum",
												"1": "1111629"
											},
											{
												"0": "The user with id '6225' created the 'label' activity with course module id '61207'.",
												"1": "1"
											},
											{
												"0": "Zoom meeting",
												"1": "17405"
											},
											{
												"0": "Database",
												"1": "35397"
											},
											{
												"0": "The user with id '5217' created the 'label' activity with course module id '74789'.",
												"1": "2"
											},
											{
												"0": "Feedback",
												"1": "8757"
											},
											{
												"0": "UniSA Media Library",
												"1": "14"
											},
											{
												"0": "Survey",
												"1": "15"
											},
											{
												"0": "Assignment",
												"1": "807415"
											},
											{
												"0": "The user with id '30694' updated the completion state for the course module with id '227552' for the user with id '30694'.",
												"1": "1"
											},
											{
												"0": "Grader report",
												"1": "9901"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Component",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"6845bc24-7911-4fb3-8c0c-d54d4b3021b3": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Forums 1",
												"1": "2",
												"2": "3 will be combined...\"",
												"3": "System",
												"4": "Course module updated",
												"5": "The user with id '5217' updated the 'label' activity with course module id '74789'."
											},
											{
												"0": "Forums 1",
												"1": "2",
												"2": "3 will be combined...\"",
												"3": "System",
												"4": "Course module updated",
												"5": "The user with id '5217' updated the 'label' activity with course module id '74789'."
											},
											{
												"0": "Forums 1",
												"1": "2",
												"2": "3 will be combined...\"",
												"3": "System",
												"4": "Course module updated",
												"5": "The user with id '5217' updated the 'label' activity with course module id '74789'."
											},
											{
												"0": "Forums 1",
												"1": "2",
												"2": "3 will be combined...\"",
												"3": "System",
												"4": "Course module updated",
												"5": "The user with id '5217' updated the 'label' activity with course module id '74789'."
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "_c0",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Unnamed: 0",
												"type": "string"
											},
											{
												"key": "2",
												"name": "Student ID",
												"type": "string"
											},
											{
												"key": "3",
												"name": "Time",
												"type": "string"
											},
											{
												"key": "4",
												"name": "Event context",
												"type": "string"
											},
											{
												"key": "5",
												"name": "Component",
												"type": "string"
											},
											{
												"key": "6",
												"name": "Event name",
												"type": "string"
											},
											{
												"key": "7",
												"name": "Description",
												"type": "string"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "count",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"from pyspark.sql.types import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"cmDF = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"abfss://datalake@dus02store.dfs.core.windows.net/NewLogData/CM/*\")\r\n",
							"engDF = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"abfss://datalake@dus02store.dfs.core.windows.net/NewLogData/ENG/*\")\r\n",
							"itDF = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"abfss://datalake@dus02store.dfs.core.windows.net/NewLogData/IT/*\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"cmDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"engDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"itDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							""
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(cmDF.filter(cmDF.Component == \"The user with id '5217' updated the 'label' activity with course module id '74789'.\").limit(20))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 9
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/learnonline')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"# Read from Cosmos DB analytical store into a Spark DataFrame and display 10 rows from the DataFrame\n",
							"# To select a preferred list of regions in a multi-region Cosmos DB account, add .option(\"spark.cosmos.preferredRegions\", \"<Region1>,<Region2>\")\n",
							"\n",
							"df = spark.read\\\n",
							"    .format(\"cosmos.olap\")\\\n",
							"    .option(\"spark.synapse.linkedService\", \"CosmosDbMongoDbApi1\")\\\n",
							"    .option(\"spark.cosmos.container\", \"learnonline\")\\\n",
							"    .schema(StructSchema)\\\n",
							"    .load()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df = df.withColumnRenamed('Activity/Resource Name', 'ActivityResourceName')\r\n",
							"df = df.withColumnRenamed('Activity/Resource Type', 'ActivityResourceType')\r\n",
							"df = df.withColumnRenamed('Assessment Method', 'AssessmentMethod')\r\n",
							"df = df.withColumnRenamed('Number of views', 'NumberOfViews')\r\n",
							"df = df.withColumnRenamed('Total Views (all students)', 'TotalViews')\r\n",
							"df = df.withColumnRenamed('Percentage of total views', 'PercentTotalViews')\r\n",
							"df = df.withColumnRenamed('Number of contributes', 'NumberOfContributes')\r\n",
							"df = df.withColumnRenamed('Total Contributions (all students)', 'TotalContributions')\r\n",
							"df = df.withColumnRenamed('Percentage of total contributions', 'PercentTotalContributions')\r\n",
							"df = df.withColumnRenamed('Student ID', 'StudentID')\r\n",
							"df = df.withColumnRenamed('Course ID', 'CourseID')\r\n",
							"df = df.withColumnRenamed('Subject Area', 'SubjectArea')\r\n",
							"df = df.withColumnRenamed('Catalog Number', 'CatalogNumber')\r\n",
							"df = df.withColumnRenamed('Course Name', 'CourseName')\r\n",
							"df = df.withColumnRenamed('Term Code', 'TermCode')\r\n",
							"df = df.withColumnRenamed('Total Number of Students', 'TotalNumberOfStudents')\r\n",
							"df = df.withColumnRenamed('Number of students that viewed activity/resource', 'NumberOfStudentsViewedActivityResource')\r\n",
							"df = df.withColumnRenamed('Number of students that contributed to activity/resource', 'NumberOfStudentsContributedActivityResource')\r\n",
							"df = df.withColumnRenamed('Proportion of students engaged (%)', 'PercentStudentsEngaged')\r\n",
							"df = df.withColumnRenamed('Proportion of students not engaged (%)', 'PercentStudentsNotEngaged')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.sql.types import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"dataSchema = [\r\n",
							"    StructField('rid', StringType(), True),\r\n",
							"    StructField('ts', LongType(), True),\r\n",
							"    StructField('id', StringType(), True),\r\n",
							"    StructField('etag', StringType(), True),\r\n",
							"    StructField('oid', StringType(), True),\r\n",
							"    StructField('tid', StringType(), True),\r\n",
							"    StructField('ActivityResourceName', StringType(), True),\r\n",
							"    StructField('ActivityResourceType', StringType(), True),\r\n",
							"    StructField('AssessmentMethod', StringType(), True),\r\n",
							"    StructField('NumberOfViews', IntegerType(), True),\r\n",
							"    StructField('TotalViews', IntegerType(), True),\r\n",
							"    StructField('PercentTotalViews', DoubleType(), True),\r\n",
							"    StructField('NumberOfContributes', IntegerType(), True),\r\n",
							"    StructField('TotalContributions', IntegerType(), True),\r\n",
							"    StructField('PercentTotalContributions', DoubleType(), True),\r\n",
							"    StructField('StudentID', StringType(), True),\r\n",
							"    StructField('CourseID', IntegerType(), True),\r\n",
							"    StructField('SubjectArea', StringType(), True),\r\n",
							"    StructField('CatalogNumber', IntegerType(), True),\r\n",
							"    StructField('CourseName', StringType(), True),\r\n",
							"    StructField('TermCode', IntegerType(), True),\r\n",
							"    StructField('Year', IntegerType(), True),\r\n",
							"    StructField('partitionKey', StringType(), True),\r\n",
							"    StructField('TotalNumberOfStudents', IntegerType(), True),\r\n",
							"    StructField('NumberOfStudentsViewedActivityResource', IntegerType(), True),\r\n",
							"    StructField('NumberOfStudentsContributedActivityResource', IntegerType(), True),\r\n",
							"    StructField('PercentStudentsEngaged', DoubleType(), True),\r\n",
							"    StructField('PercentStudentsNotEngaged', DoubleType(), True),\r\n",
							"]"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 16
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"StructSchema=StructType(fields=dataSchema)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"print(StructSchema)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df.collect()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 26
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/snapshotlearnonline')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.functions import *"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"learnOnlineDF = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/learnonline.json', format='json')\r\n",
							"learnOnlineDF.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 19
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"learnOnlineDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"learnOnlineDF = learnOnlineDF.drop('_id')\r\n",
							"learnOnlineDF = learnOnlineDF.distinct()\r\n",
							"learnOnlineDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 20
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"DimCourseResource = spark.sql(\"SELECT * FROM `unisadw`.`dimcourseresource`\")\r\n",
							"DimStudent = spark.sql(\"SELECT * FROM `unisadw`.`dimstudent`\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"learnOnlineDF = learnOnlineDF.join(DimCourseResource, ['Year', 'ActivityResourceName', 'ActivityResourceType', 'AssessmentMethod', 'CatalogNumber',\r\n",
							"                                'CourseID', 'CourseName', 'SubjectArea', 'TermCode'], 'left')\\\r\n",
							"                            .join(DimStudent, [learnOnlineDF.StudentID == DimStudent.StudentID,\r\n",
							"                                                learnOnlineDF.TermCode >= DimStudent.EffectiveTerm,\r\n",
							"                                                learnOnlineDF.TermCode < DimStudent.ExpiryTerm], 'left')\\\r\n",
							"                            .select(learnOnlineDF.NumberOfViews, learnOnlineDF.NumberOfContributes, learnOnlineDF.TotalContributions,\r\n",
							"                                    learnOnlineDF.TotalViews, learnOnlineDF.PercentTotalContributions, learnOnlineDF.PercentTotalViews,\r\n",
							"                                    DimCourseResource.ResourceSK, DimStudent.StudentSK)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"learnOnlineDF = learnOnlineDF.join(DimStudent, [learnOnlineDF.StudentID == DimStudent.StudentID,\r\n",
							"                                                learnOnlineDF.TermCode >= DimStudent.EffectiveTerm,\r\n",
							"                                                learnOnlineDF.TermCode < DimStudent.ExpiryTerm], 'left')\\\r\n",
							"                            .select(learnOnlineDF.NumberOfViews, learnOnlineDF.NumberOfContributes, learnOnlineDF.TotalContributions,\r\n",
							"                                    learnOnlineDF.TotalViews, learnOnlineDF.PercentTotalContributions, learnOnlineDF.PercentTotalViews,\r\n",
							"                                    DimStudent.StudentSK)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 17
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"learnOnlineDF.count()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 22
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"learnOnlineDF.write.mode(\"overwrite\").saveAsTable(\"unisadw.snapshotlearnonline\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 23
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/studentList')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"studentDF = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"abfss://datalake@dus02store.dfs.core.windows.net/reOrganized_v2/StudentLists/*\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"studentDF.columns"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"studentDF.groupBy(\"CourseGradeCode\").count().show()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 12
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/subvgrade')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"60aa8aee-9a32-43db-9857-7d55b356d6be": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Week 8 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 15 hours, 42 minutes, 0 seconds",
												"6": "D",
												"7": "75.0",
												"8": "25/08/2019 8:18:00 PM",
												"9": "CCXZGCLZW",
												"10": "26/08/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbbb5a"
												}
											},
											{
												"0": "Week 8 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 1 minutes, 42 seconds",
												"6": "D",
												"7": "80.0",
												"8": "26/08/2019 11:58:18 AM",
												"9": "XXXCGXBB",
												"10": "26/08/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbbb67"
												}
											},
											{
												"0": "Week 8 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 2 hours, 44 minutes, 38 seconds",
												"6": "D",
												"7": "80.0",
												"8": "26/08/2019 9:15:22 AM",
												"9": "CCXZGCLZD",
												"10": "26/08/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbbb81"
												}
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "",
												"6": "F2",
												"7": "0.0",
												"8": "",
												"9": "CCXCHDLDL",
												"10": "15/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb98a"
												}
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "",
												"6": "F2",
												"7": "0.0",
												"8": "",
												"9": "CCXZWLDDG",
												"10": "15/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb993"
												}
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "3 days, 19 hours, 22 minutes, 21 seconds",
												"6": "C",
												"7": "70.0",
												"8": "11/07/2019 4:37:39 PM",
												"9": "CCXZAABXD",
												"10": "15/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb9b0"
												}
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 21 hours, 6 minutes, 11 seconds",
												"6": "D",
												"7": "80.0",
												"8": "15/07/2019 2:53:49 PM",
												"9": "CCXZAWDXC",
												"10": "16/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb9c4"
												}
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "6 days, 20 hours, 28 minutes, 21 seconds",
												"6": "HD",
												"7": "90.0",
												"8": "8/07/2019 3:31:39 PM",
												"9": "CCXZAACWL",
												"10": "15/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb9d5"
												}
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 15 hours, 53 minutes, 1 seconds",
												"6": "HD",
												"7": "100.0",
												"8": "14/07/2019 8:06:59 PM",
												"9": "CCXHXXBXW",
												"10": "15/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb9e5"
												}
											},
											{
												"0": "Week 5 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "",
												"6": "F2",
												"7": "0.0",
												"8": "",
												"9": "CCXZAZLCL",
												"10": "7/08/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb9f7"
												}
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Assessment Name",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Catalog Number",
												"type": "bigint"
											},
											{
												"key": "2",
												"name": "Course ID",
												"type": "bigint"
											},
											{
												"key": "3",
												"name": "Course Name",
												"type": "string"
											},
											{
												"key": "4",
												"name": "Course Offering Description",
												"type": "string"
											},
											{
												"key": "5",
												"name": "Early / Late",
												"type": "string"
											},
											{
												"key": "6",
												"name": "Grade",
												"type": "string"
											},
											{
												"key": "7",
												"name": "Grade Numeric",
												"type": "double"
											},
											{
												"key": "8",
												"name": "Last Submission Time",
												"type": "string"
											},
											{
												"key": "9",
												"name": "Student ID",
												"type": "string"
											},
											{
												"key": "10",
												"name": "Student's Due Date",
												"type": "string"
											},
											{
												"key": "11",
												"name": "Subject Area",
												"type": "string"
											},
											{
												"key": "12",
												"name": "Term Code",
												"type": "bigint"
											},
											{
												"key": "13",
												"name": "Year",
												"type": "bigint"
											},
											{
												"key": "14",
												"name": "_id",
												"type": "StructType(StructField($oid,StringType,true))"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"2a5f488a-aab3-4d59-9c43-d4094034f6dd": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "Week 8 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 15 hours, 42 minutes, 0 seconds",
												"6": "D",
												"7": "75.0",
												"8": "25/08/2019 8:18:00 PM",
												"9": "CCXZGCLZW",
												"10": "26/08/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbbb5a"
												},
												"15": "2019-08-25 20:18:00",
												"16": "2019-08-26 12:00:00"
											},
											{
												"0": "Week 8 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 0 hours, 1 minutes, 42 seconds",
												"6": "D",
												"7": "80.0",
												"8": "26/08/2019 11:58:18 AM",
												"9": "XXXCGXBB",
												"10": "26/08/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbbb67"
												},
												"15": "2019-08-26 11:58:18",
												"16": "2019-08-26 12:00:00"
											},
											{
												"0": "Week 8 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 2 hours, 44 minutes, 38 seconds",
												"6": "D",
												"7": "80.0",
												"8": "26/08/2019 9:15:22 AM",
												"9": "CCXZGCLZD",
												"10": "26/08/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbbb81"
												},
												"15": "2019-08-26 09:15:22",
												"16": "2019-08-26 12:00:00"
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "",
												"6": "F2",
												"7": "0.0",
												"8": "",
												"9": "CCXCHDLDL",
												"10": "15/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb98a"
												},
												"16": "2019-07-15 12:00:00"
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "",
												"6": "F2",
												"7": "0.0",
												"8": "",
												"9": "CCXZWLDDG",
												"10": "15/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb993"
												},
												"16": "2019-07-15 12:00:00"
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "3 days, 19 hours, 22 minutes, 21 seconds",
												"6": "C",
												"7": "70.0",
												"8": "11/07/2019 4:37:39 PM",
												"9": "CCXZAABXD",
												"10": "15/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb9b0"
												},
												"15": "2019-07-11 16:37:39",
												"16": "2019-07-15 12:00:00"
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 21 hours, 6 minutes, 11 seconds",
												"6": "D",
												"7": "80.0",
												"8": "15/07/2019 2:53:49 PM",
												"9": "CCXZAWDXC",
												"10": "16/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb9c4"
												},
												"15": "2019-07-15 14:53:49",
												"16": "2019-07-16 12:00:00"
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "6 days, 20 hours, 28 minutes, 21 seconds",
												"6": "HD",
												"7": "90.0",
												"8": "8/07/2019 3:31:39 PM",
												"9": "CCXZAACWL",
												"10": "15/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb9d5"
												},
												"15": "2019-07-08 15:31:39",
												"16": "2019-07-15 12:00:00"
											},
											{
												"0": "Week 2 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "0 days, 15 hours, 53 minutes, 1 seconds",
												"6": "HD",
												"7": "100.0",
												"8": "14/07/2019 8:06:59 PM",
												"9": "CCXHXXBXW",
												"10": "15/07/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb9e5"
												},
												"15": "2019-07-14 20:06:59",
												"16": "2019-07-15 12:00:00"
											},
											{
												"0": "Week 5 Challenge Question",
												"1": "1024",
												"2": "163506",
												"3": "UO Information Technology Fundamentals",
												"4": "External, UniSA Online, Online",
												"5": "",
												"6": "F2",
												"7": "0.0",
												"8": "",
												"9": "CCXZAZLCL",
												"10": "7/08/2019 12:00:00 PM",
												"11": "INFT",
												"12": "1914",
												"13": "2019",
												"14": {
													"$oid": "61303fe9104a174f7dbbb9f7"
												},
												"16": "2019-08-07 12:00:00"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Assessment Name",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Catalog Number",
												"type": "bigint"
											},
											{
												"key": "2",
												"name": "Course ID",
												"type": "bigint"
											},
											{
												"key": "3",
												"name": "Course Name",
												"type": "string"
											},
											{
												"key": "4",
												"name": "Course Offering Description",
												"type": "string"
											},
											{
												"key": "5",
												"name": "Early / Late",
												"type": "string"
											},
											{
												"key": "6",
												"name": "Grade",
												"type": "string"
											},
											{
												"key": "7",
												"name": "Grade Numeric",
												"type": "double"
											},
											{
												"key": "8",
												"name": "Last Submission Time",
												"type": "string"
											},
											{
												"key": "9",
												"name": "Student ID",
												"type": "string"
											},
											{
												"key": "10",
												"name": "Student's Due Date",
												"type": "string"
											},
											{
												"key": "11",
												"name": "Subject Area",
												"type": "string"
											},
											{
												"key": "12",
												"name": "Term Code",
												"type": "bigint"
											},
											{
												"key": "13",
												"name": "Year",
												"type": "bigint"
											},
											{
												"key": "14",
												"name": "_id",
												"type": "StructType(StructField($oid,StringType,true))"
											},
											{
												"key": "15",
												"name": "SubTime",
												"type": "timestamp"
											},
											{
												"key": "16",
												"name": "DueTime",
												"type": "timestamp"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"da71dc1a-f0f1-4ee9-97ca-811b04ebf629": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "F2",
												"1": "213"
											},
											{
												"0": "P2",
												"1": "169"
											},
											{
												"0": "F1",
												"1": "150"
											},
											{
												"0": "D",
												"1": "377"
											},
											{
												"0": "C",
												"1": "382"
											},
											{
												"0": "HD",
												"1": "287"
											},
											{
												"0": "P1",
												"1": "332"
											},
											{
												"0": "NaN",
												"1": "3"
											},
											{
												"0": "",
												"1": "4"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Grade",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count(DISTINCT Student ID)",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"4464f263-5644-472b-b08d-8cf89064776c": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "F2",
												"1": "413"
											},
											{
												"0": "P2",
												"1": "506"
											},
											{
												"0": "F1",
												"1": "405"
											},
											{
												"0": "D",
												"1": "1830"
											},
											{
												"0": "C",
												"1": "1510"
											},
											{
												"0": "HD",
												"1": "2089"
											},
											{
												"0": "P1",
												"1": "1096"
											},
											{
												"0": "NaN",
												"1": "7"
											},
											{
												"0": "",
												"1": "6"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Grade",
												"type": "string"
											},
											{
												"key": "1",
												"name": "count(DISTINCT Student ID)",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							},
							"f1973a5e-9426-46df-ac45-e4f472f21ac4": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "CIVE",
												"1": "1912",
												"2": "23"
											},
											{
												"0": "CIVE",
												"1": "2005",
												"2": "16"
											},
											{
												"0": "INFS",
												"1": "1905",
												"2": "11"
											},
											{
												"0": "CIVE",
												"1": "2025",
												"2": "58"
											},
											{
												"0": "BUIL",
												"1": "2025",
												"2": "53"
											},
											{
												"0": "BUIL",
												"1": "1905",
												"2": "14"
											},
											{
												"0": "COMP",
												"1": "2005",
												"2": "19"
											},
											{
												"0": "ENGG",
												"1": "2025",
												"2": "2"
											},
											{
												"0": "INFT",
												"1": "1905",
												"2": "71"
											},
											{
												"0": "INFT",
												"1": "1912",
												"2": "4"
											},
											{
												"0": "MENG",
												"1": "2112",
												"2": "23"
											},
											{
												"0": "COMP",
												"1": "2105",
												"2": "34"
											},
											{
												"0": "INFS",
												"1": "2025",
												"2": "28"
											},
											{
												"0": "INFS",
												"1": "2014",
												"2": "16"
											},
											{
												"0": "BUIL",
												"1": "2005",
												"2": "36"
											},
											{
												"0": "BUIL",
												"1": "1925",
												"2": "49"
											},
											{
												"0": "COMP",
												"1": "2014",
												"2": "9"
											},
											{
												"0": "ENGG",
												"1": "2105",
												"2": "7"
											},
											{
												"0": "CIVE",
												"1": "2012",
												"2": "38"
											},
											{
												"0": "COMP",
												"1": "2025",
												"2": "56"
											},
											{
												"0": "COMP",
												"1": "2112",
												"2": "54"
											},
											{
												"0": "INFT",
												"1": "2025",
												"2": "12"
											},
											{
												"0": "MENG",
												"1": "2025",
												"2": "4"
											},
											{
												"0": "INFS",
												"1": "2105",
												"2": "20"
											},
											{
												"0": "INFS",
												"1": "1912",
												"2": "31"
											},
											{
												"0": "CIVE",
												"1": "1925",
												"2": "15"
											},
											{
												"0": "BUIL",
												"1": "2105",
												"2": "52"
											},
											{
												"0": "INFT",
												"1": "2105",
												"2": "30"
											},
											{
												"0": "BUIL",
												"1": "2014",
												"2": "43"
											},
											{
												"0": "MATH",
												"1": "1905",
												"2": "16"
											},
											{
												"0": "INFT",
												"1": "2014",
												"2": "7"
											},
											{
												"0": "INFS",
												"1": "2005",
												"2": "11"
											},
											{
												"0": "INFT",
												"1": "1925",
												"2": "18"
											},
											{
												"0": "BUIL",
												"1": "1912",
												"2": "21"
											},
											{
												"0": "MATH",
												"1": "2105",
												"2": "31"
											},
											{
												"0": "MATH",
												"1": "2005",
												"2": "30"
											},
											{
												"0": "BUIL",
												"1": "1914",
												"2": "28"
											},
											{
												"0": "MATH",
												"1": "1914",
												"2": "26"
											},
											{
												"0": "INFT",
												"1": "2005",
												"2": "20"
											},
											{
												"0": "COMP",
												"1": "2012",
												"2": "54"
											},
											{
												"0": "COMP",
												"1": "1905",
												"2": "10"
											},
											{
												"0": "CIVE",
												"1": "2014",
												"2": "21"
											},
											{
												"0": "INFT",
												"1": "2112",
												"2": "29"
											},
											{
												"0": "INFS",
												"1": "2112",
												"2": "48"
											},
											{
												"0": "CIVE",
												"1": "2105",
												"2": "19"
											},
											{
												"0": "MATH",
												"1": "2025",
												"2": "4"
											},
											{
												"0": "BUIL",
												"1": "1825",
												"2": "1"
											},
											{
												"0": "BUIL",
												"1": "2012",
												"2": "43"
											},
											{
												"0": "INFT",
												"1": "2012",
												"2": "15"
											},
											{
												"0": "MATH",
												"1": "2014",
												"2": "54"
											},
											{
												"0": "ENGG",
												"1": "2112",
												"2": "9"
											},
											{
												"0": "CIVE",
												"1": "1905",
												"2": "10"
											},
											{
												"0": "COMP",
												"1": "1925",
												"2": "33"
											},
											{
												"0": "BUIL",
												"1": "2112",
												"2": "68"
											},
											{
												"0": "CIVE",
												"1": "1914",
												"2": "16"
											},
											{
												"0": "INFS",
												"1": "2012",
												"2": "35"
											},
											{
												"0": "COMP",
												"1": "1914",
												"2": "6"
											},
											{
												"0": "COMP",
												"1": "1912",
												"2": "27"
											},
											{
												"0": "CIVE",
												"1": "2112",
												"2": "67"
											},
											{
												"0": "INFS",
												"1": "1914",
												"2": "23"
											},
											{
												"0": "INFT",
												"1": "1914",
												"2": "20"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Subject Area",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Term Code",
												"type": "bigint"
											},
											{
												"key": "2",
												"name": "F2 Students without submission",
												"type": "bigint"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"1"
											],
											"seriesFieldKeys": [
												"2"
											],
											"isStacked": false
										}
									}
								}
							},
							"446c2707-1feb-4f79-8378-eedeee6f07d1": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "F2",
												"1": "57.92327917540181"
											},
											{
												"0": "P2",
												"1": "47.655996810207334"
											},
											{
												"0": "F1",
												"1": "42.848771798704526"
											},
											{
												"0": "D",
												"1": "28.529465020576136"
											},
											{
												"0": "C",
												"1": "32.74178961748633"
											},
											{
												"0": "HD",
												"1": "21.899144032921814"
											},
											{
												"0": "P1",
												"1": "36.26202090209022"
											},
											{
												"0": "NaN",
												"1": "83.25361111111111"
											},
											{
												"0": "",
												"1": "269.87180555555557"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "Grade",
												"type": "string"
											},
											{
												"key": "1",
												"name": "Average hours late",
												"type": "double"
											}
										]
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"1"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics/bigDataPools/batched",
						"name": "batched",
						"type": "Spark",
						"endpoint": "https://studentanalytics.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/batched",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://datalake@dus02store.dfs.core.windows.net/fromAtlas/submissionvgrades.json', format='json')\r\n",
							"display(df.limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.functions import *\r\n",
							"df.printSchema()"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"df = df.withColumn('SubTime', to_timestamp('Last Submission Time', 'dd/MM/yyyy hh:mm:ss a'))\r\n",
							"df = df.withColumn('DueTime', to_timestamp(\"Student's Due Date\", 'dd/MM/yyyy hh:mm:ss a'))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(df.limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Number of Students Submitted ahead of Due by Grade"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(df.where(df.SubTime <= df.DueTime).groupBy('Grade').agg(countDistinct('Student ID')).collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 24
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Number of Students Submitted late by Grade"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(df.where(df.SubTime > df.DueTime).groupBy('Grade').agg(countDistinct('Student ID')).collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 23
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Average Late submission hours by Grade"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(df.where(df.SubTime > df.DueTime).groupBy('Grade')\\\r\n",
							"        .agg(avg((df.SubTime.cast('long') - df.DueTime.cast('long'))/3600).alias('Average hours late')).collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 27
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Number of F2 Students without submission by Subject"
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"display(df.where((df.Grade == 'F2') & isnull(df.SubTime)).groupBy(['Subject Area', 'Term Code'])\\\r\n",
							"        .agg(countDistinct('Student ID').alias('F2 Students without submission')).collect())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 26
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DimActivity')]",
			"type": "Microsoft.Synapse/workspaces/sparkJobDefinitions",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"targetBigDataPool": {
					"referenceName": "batched",
					"type": "BigDataPoolReference"
				},
				"requiredSparkVersion": "2.4",
				"language": "python",
				"jobProperties": {
					"name": "DimActivity",
					"file": "abfss://datalake@dus02store.dfs.core.windows.net/synapse/workspaces/studentanalytics/batchjobs/DimActivity/Init.py",
					"conf": {
						"spark.dynamicAllocation.enabled": "true",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "e2814432-15b4-4287-9c93-be40b87c1836"
					},
					"args": [],
					"jars": [],
					"files": [],
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks",
			"apiVersion": "2019-06-01-preview",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sql--studentanalytics')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics",
				"groupId": "sql",
				"fqdns": [
					"studentanalytics.2e67431a-f8fe-4a74-8e13-f23d53f5a799.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sqlOnDemand--studentanalytics')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/551f35f8-5023-4513-ae40-48f2e9f65fc6/resourceGroups/DUS02mem/providers/Microsoft.Synapse/workspaces/studentanalytics",
				"groupId": "sqlOnDemand",
				"fqdns": [
					"studentanalytics-ondemand.2e67431a-f8fe-4a74-8e13-f23d53f5a799.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}